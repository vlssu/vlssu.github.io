# [common] 部分不可缺少
[common]
# bind_addr 服务器ip，必须包含IP地址 或者 域名 主机名
# 用方括号括起来，例如 "[::1]:80", "[ipv6-host]:http" 或 "[ipv6-host%zone]:80":80"
bind_addr = 0.0.0.0
bind_port = 7000

# udp端口有助于 udp 内网穿透
bind_udp_port = 7001

# 用于 kcp 协议的 udp 端口，可以与'bind_port'相同
# 如果未设置，则以 frps 禁用 kcp
kcp_bind_port = 7000

# 指定要侦听的地址代理，默认值与 bind_addr 相同，127.0.0.1仅限本地、0.0.0.0为不限地址
# proxy_bind_addr = 127.0.0.1

# 如果要支持虚拟主机，则必须设置用于侦听的http端口（可选）
# 注意：http 端口和 https 端口可以与 bind_port 相同
vhost_http_port = 80
vhost_https_port = 443

# vhost http 服务器的响应标头超时（秒），默认为60s
# vhost_http_timeout = 60

# TcpMuxHttpConnectPort 指定服务器侦听TCP的端口
# HTTP 连接请求。如果值为0，则服务器将不会多路传输TCP
# 一个端口请求。如果不是，它将在此值上监听
# HTTP 连接请求。默认情况下，此值为0。
# tcpmux_httpconnect_port = 1337

# 设置 dashboard_addr 和 dashboard_port 以查看frps的仪表板
# dashboard_addr 的默认值与 bind_addr 相同
# 只有设置了 dashboard_port ，仪表板才可用
dashboard_addr = 0.0.0.0
dashboard_port = 7500

# 指定访问 仪表盘控制界面 Dashboard 的登录用户名、用户密码，如果未设置，则两个默认值均为admin
dashboard_user = admin
dashboard_pwd = admin

# enable_prometheus 将在 /metrics api 中的 {dashboard_addr}:{dashboard_port} 上导出 prometheus 指标.
enable_prometheus = true

# 仪表板资源目录（仅适用于调试模式）
# assets_dir = ./static
# 日志文件 路径，例如./frpc.log
log_file = ./frps.log

# 跟踪，调试，信息，警告，错误
log_level = info

log_max_days = 3

# 当生成日志文件时，控制台将禁用日志的颜色，默认为false
disable_log_color = false

# DetailedErrorsToClient 定义是否将特定错误（带有调试信息）发送到 frpc。默认情况下，此值为true。
detailed_errors_to_client = true

# AuthenticationMethod 指定使用哪种身份验证方法对frps进行frpc身份验证。
# 如果指定了 "token"- 令牌将被读入登录消息。
# 如果指定 "oidc" -将使用OIDC设置发行OIDC（开放ID连接）令牌。默认情况下，此值为 "token"。
authentication_method = token

# AuthenticateHeartBeats 指定是否在发送给frps的心跳中包括身份验证令牌。默认情况下，此值为false。
authenticate_heartbeats = false

# AuthenticateNewWorkConns 指定是否在发送到frps的新工作连接中包括身份验证令牌。默认情况下，此值为false。
authenticate_new_work_conns = false

# FRP 身份验证
token = 12345678

# 如果 AuthenticationMethod == "oidc"，则 OidcClientId 指定用于在OIDC身份验证中获取令牌的客户端ID。
# 默认情况下，此值为 "".
oidc_client_id =

# 如果 AuthenticationMethod == "oidc"，则 OidcClientSecret 指定用于在OIDC身份验证中获取令牌的客户端密钥。
# By default, this value is "".
oidc_client_secret = 

# 如果 AuthenticationMethod == "oidc"，则 OidcAudience 指定OIDC身份验证中令牌的受众。 默认情况下，此值为""。
oidc_audience = 

# OidcTokenEndpointUrl 指定实现OIDC令牌端点的URL。
# 如果 AuthenticationMethod == "oidc"，它将用于获取OIDC令牌。 默认情况下，此值为""。
oidc_token_endpoint_url = 

# 端口白名单
# 为了防止端口被滥用，可以手动指定允许哪些端口被使用，在 frps.ini 中通过 allow_ports 来指定：
# 只允许 frpc 绑定您列出的端口，如果不进行任何设置，则没有任何限制
# allow_ports 可以配置允许使用的某个指定端口或者是一个范围内的所有端口，以 , 分隔，指定的范围以 - 分隔。
allow_ports = 2000-3000,3001,3003,4000-50000

# 每个代理中的 pool_count 超过最大值，最大链接池,每个代理预先与后端服务器建立起指定数量的最大链接数
# frps.ini 中设置每个代理可以创建的连接池上限，避免大量资源占用
max_pool_count = 5

# 每个客户端可以使用的最大端口数，默认值为0表示没有限制
max_ports_per_client = 0

# TlsOnly 指定是否仅接受TLS加密的连接。默认情况下，该值为false。
tls_only = false

# tls_cert_file = server.crt
# tls_key_file = server.key
# tls_trusted_ca_file = ca.crt

# 如果 subdomain_host 不为空，则可以在frpc的配置文件中将类型设置为http或https时设置子域
# subdomain_host 参数来设置  Web 服务增加自定义二级域名
# 当子域时，路由使用的主机是 test.frps.com
subdomain_host = frps.com

# 如果使用 tcp 流多路复用，则默认为true
tcp_mux = true

# 定制 HTTP 请求的 404 页面
# custom_404_page = /path/to/404.html

# 指定udp数据包大小，单位为字节。如果未设置，则默认值为1500。
# 客户端和服务器之间的此参数应该相同。
# 它会影响udp和sudp代理。
udp_packet_size = 1500

[plugin.user-manager]
addr = 127.0.0.1:9000
path = /handler
ops = Login

[plugin.port-manager]
addr = 127.0.0.1:9001
path = /handler
ops = NewProxy