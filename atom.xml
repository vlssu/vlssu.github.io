<?xml version="1.0" encoding="utf-8"?><?xml-stylesheet type="text/xsl" href="https://vlssu.github.io/atom.xsl"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="zh-CN">
  <id>https://vlssu.github.io/</id>
  <title>师叔の小窝</title>
  <subtitle>Share knowledge and stay happy</subtitle>
  <updated>2024-05-01T15:56:19.649Z</updated>
  <generator>@vuepress/plugin-feed</generator>
  <link rel="self" href="https://vlssu.github.io/atom.xml"/>
  <link rel="alternate" href="https://vlssu.github.io/"/>
  <category term="教程"/>
  <category term="Linux小知识"/>
  <category term="node"/>
  <category term="VuePress"/>
  <category term="笔记"/>
  <entry>
    <title type="text">Windows安装node管理器</title>
    <id>https://vlssu.github.io/blogs/deploy/node.html</id>
    <link href="https://vlssu.github.io/blogs/deploy/node.html"/>
    <updated>2024-01-05T06:51:23.000Z</updated>
    <summary type="html"><![CDATA[<p>操作之前，请将电脑中的 <strong>Node</strong> 卸载干净！！！</p>
<p>前往 <a href="https://github.com/coreybutler/nvm-windows/releases" target="_blank" rel="noopener noreferrer">Github：nvm-windows</a> 下载最新版本的 <a href="https://github.com/coreybutler/nvm-windows/releases/latest/download/nvm-setup.exe" target="_blank" rel="noopener noreferrer"><code>nvm-setup.exe</code></a></p>]]></summary>
    <content type="html"><![CDATA[<p>操作之前，请将电脑中的 <strong>Node</strong> 卸载干净！！！</p>
<p>前往 <a href="https://github.com/coreybutler/nvm-windows/releases" target="_blank" rel="noopener noreferrer">Github：nvm-windows</a> 下载最新版本的 <a href="https://github.com/coreybutler/nvm-windows/releases/latest/download/nvm-setup.exe" target="_blank" rel="noopener noreferrer"><code>nvm-setup.exe</code></a></p>
<p>然后直接无脑下一步即可</p>
<p>| <strong>命令</strong>                | <strong>功能</strong>           |
|</p>
]]></content>
    <category term="教程"/>
    <published>2024-01-05T00:00:00.000Z</published>
  </entry>
  <entry>
    <title type="text">Flarum的搭建与部署</title>
    <id>https://vlssu.github.io/blogs/deploy/flarum.html</id>
    <link href="https://vlssu.github.io/blogs/deploy/flarum.html"/>
    <updated>2023-10-02T17:17:23.000Z</updated>
    <summary type="html"><![CDATA[<ul>
<li>Flarum论坛相对于其他论坛UI更简洁，也相对简单</li>
</ul>
]]></summary>
    <content type="html"><![CDATA[<ul>
<li>Flarum论坛相对于其他论坛UI更简洁，也相对简单</li>
</ul>
<!-- more -->
<h2>官方教程</h2>
<p><a href="https://docs.flarum.org/install" target="_blank" rel="noopener noreferrer">原帖地址</a></p>
<h2>服务器要求</h2>
<p>在安装Flarum之前，重要的是要检查您的服务器是否符合要求。要运行Flarum，您将需要：</p>
<ul>
<li>Apache (启用mod_rewrite) 或 Nginx</li>
<li>PHP 8.1+ 具有以下扩展名: curl, dom, gd, json, mbstring, openssl, pdo_mysql, tokenizer, zip</li>
<li>MySQL 5.6+/8.0.23+ 或 MariaDB 10.0.5+</li>
<li>SSH（命令行）访问以运行Composer</li>
</ul>
<div class="custom-container tip"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8h.01"></path><path d="M11 12h1v4h1"></path></g></svg><p class="custom-container-title">共享主机</p><p>无法通过下载 ZIP 文件并将文件上传到您的 Web 服务器来安装 Flarum。这是因为 Flarum 使用了一个名为<a href="https://getcomposer.org/" target="_blank" rel="noopener noreferrer">Composer</a>的依赖管理系统，它需要在命令行上运行。</p>
<p>这并不一定意味着您需要 VPS。大多数体面的主机都支持 SSH 访问，通过它你应该能够很好地安装 Composer 和 Flarum。</p>
</div><h2>安装</h2>
<p>Flarum使用Composer来管理其依赖项和扩展。在安装Flarum之前，您需要在计算机上<a href="https://getcomposer.org/" target="_blank" rel="noopener noreferrer">安装Composer</a>。然后，在您要安装Flarum的空白位置运行此命令：</p>
<div class="language-text" data-ext="text" data-title="text"><pre class="language-text"><code>composer create-project flarum/flarum .
</code></pre></div><p>运行此命令时，可以配置Web服务器。您需要确保将webroot设置为<code>/path/to/your/forum/public</code>，然后按照以下说明设置URL重写。</p>
<p>一切准备就绪后，请在网络浏览器中导航至您的论坛，然后按照说明完成安装。</p>
<h3>URL重写</h3>
<blockquote>
<p>因为网站文件不在根目录，就需要你URL重写</p>
</blockquote>
<h4>Apache</h4>
<p>Flarum在公共目录中包含<code>.htaccess</code>文件 - 确保已正确上载。 如果您正在使用共享主机，请与您的提供商确认已启用<code>mod_rewrite</code>且允许<code>.htaccess</code>文件。 如果您要管理自己的服务器，则可能需要将以下内容添加到站点配置中：</p>
<div class="language-text" data-ext="text" data-title="text"><pre class="language-text"><code>&lt;Directory "/path/to/flarum/public"&gt;
    AllowOverride All
&lt;/Directory&gt;
</code></pre></div><p>这确保了允许 htaccess 覆盖，因此 Flarum 可以正确地重写 URL。</p>
<p>启用方法<code>mod_rewrite</code>因您的操作系统而异。您可以通过<code>sudo a2enmod rewrite</code>在 Ubuntu 上运行来启用它。<code>mod_rewrite</code>在 CentOS 上默认启用。修改后不要忘记重启 Apache！</p>
<h4>Nginx</h4>
<p>Flarum包含<code>.nginx.conf</code>文件 – 确保它已正确上载。 然后，假设您在Nginx中设置了PHP站点，请将以下内容添加到服务器的配置块中：</p>
<div class="language-text" data-ext="text" data-title="text"><pre class="language-text"><code>include /path/to/flarum/.nginx.conf;
</code></pre></div><h4>Caddy</h4>
<p>Caddy需要非常简单的配置才能使Flarum正常工作。请注意，您应该使用自己的URL替换URL，并使用自己的public文件夹的路径替换path 。如果您使用的是其他版本的PHP，则还需要更改fastcgi路径以指向正确的PHP安装套接字或URL。</p>
<div class="language-text" data-ext="text" data-title="text"><pre class="language-text"><code>www.example.com {
    root * /var/www/flarum/public
    php_fastcgi unix//var/run/php/php7.4-fpm.sock
    header /assets {
        +Cache-Control "public, must-revalidate, proxy-revalidate"
        +Cache-Control "max-age=25000"
        Pragma "public"
    }
    file_server
}
</code></pre></div><h3>文件夹所有权</h3>
<p>在安装期间，Flarum 可能会要求您将某些目录设为可写。现代操作系统通常是多用户的，这意味着您登录的用户与运行 FLarum 的用户不同。运行 Flarum 的用户必须具有以下权限：</p>
<ul>
<li>根安装目录，因此 Flarum 可以编辑<code>config.php</code>。</li>
<li>子目录，因此<code>storage</code>Flarum 可以编辑日志和存储缓存数据。</li>
<li><code>assets</code>子目录，以便可以将徽标和头像上传到文件系统。</li>
</ul>
<p>扩展可能需要其他目录，因此您可能希望递归地授予对整个 Flarum 根安装目录的写访问权限。</p>
<p>您需要运行几个命令才能设置文件权限。请注意，如果您的安装在执行其中一些后没有显示警告，则您不需要运行其余的。</p>
<p>首先，您需要允许对该目录进行写访问。在 Linux 上</p>
<div class="language-text" data-ext="text" data-title="text"><pre class="language-text"><code>chmod 775 -R /path/to/directory
</code></pre></div><p>如果这还不够，您可能需要检查您的文件是否属于正确的组和用户。默认情况下，在大多数 Linux 发行版<code>www-data</code>中是 PHP 和 Web 服务器都在其下运行的组和用户。您需要查看您的发行版和网络服务器设置的细节以确保。您可以通过运行以下命令更改大多数 Linux 操作系统中的文件夹所有权：</p>
<div class="language-text" data-ext="text" data-title="text"><pre class="language-text"><code>chown -R www-data:www-data /path/to/directory
</code></pre></div><p>如果您的 Web 服务器使用<code>www-data</code>不同的用户/组，则更改为其他内容。</p>
<p>此外，您需要确保您的 CLI 用户（您登录终端的用户）拥有所有权，以便您可以通过 CLI 安装扩展和管理 Flarum 安装。为此，请通过将当前用户 (<code>whoami</code>) 添加到 Web 服务器组（通常<code>www-data</code>）<code>usermod -a -G www-data YOUR_USERNAME</code>。您可能需要注销并重新登录才能使此更改生效。</p>
<p>最后，如果这不起作用，您可能需要配置<a href="https://www.redhat.com/en/topics/linux/what-is-selinux" target="_blank" rel="noopener noreferrer">SELinux</a>以允许 Web 服务器写入目录。为此，请运行：</p>
<div class="language-text" data-ext="text" data-title="text"><pre class="language-text"><code>chcon -R -t httpd_sys_rw_content_t /path/to/directory
</code></pre></div><div class="custom-container warning"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8v4"></path><path d="M12 16h.01"></path></g></svg><p class="custom-container-title">环境可能会有所不同</p><p>您的环境可能与所提供的文档有所不同，请向您的Web服务器配置或Web托管提供商咨询有关PHP和Web服务器所使用的正确用户和组的信息。</p>
</div><div class="custom-container danger"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M10 10l4 4m0-4l-4 4"></path></g></svg><p class="custom-container-title">切勿使用权限777</p><p>永远不要将任何文件夹或文件设置为权限级别777，因为此权限级别允许任何人访问文件夹和文件的内容，而不管用户或用户组如何。</p>
</div><h3>汉化Flarum</h3>
<p>没有中文？有中文补丁的（中文语言包也是有版本的哦）
在根目录输入</p>
<div class="language-text" data-ext="text" data-title="text"><pre class="language-text"><code>// 简体中文
composer require flarum-lang/chinese-simplified
php flarum cache:clear
//繁体中文
composer require csineneo/lang-traditional-chinese
</code></pre></div><p>好啦，这就是全部了，祝你使用愉快</p>
<h2>使用宝塔搭建</h2>
<p>宝塔linux7.0版本是基于centos7开发的，务必使用centos7.x 系统</p>
<h3>Linux面板7.9.2安装命令：</h3>
<div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># Centos\Ubuntu安装命令：</span>
<span class="token function">curl</span> <span class="token parameter variable">-sSO</span> http://download.bt.cn/install/install_panel.sh <span class="token operator">&amp;&amp;</span> <span class="token function">bash</span> install_panel.sh
</code></pre></div><h3>安装环境</h3>
<ul>
<li>Apache 2.4</li>
<li>PHP 8.1+ （需手动安装以下扩展名：pdo_mysql）</li>
<li>MySQL 5.7</li>
<li>Pure-Ftpd 1.0.49</li>
<li>phpMyAdmin 5.1</li>
<li>PostgreSQL管理器 1.4 （安装最新版本）</li>
<li>Node.js版本管理器 1.6</li>
</ul>
<p>通过<code>Node.js版本管理器 1.6</code>安装<code>Composer</code>(直接安装模块那里输入名字安装即可)</p>
<p></p>
<h3>安装Flarum+URL重写</h3>
<p>Flarum使用Composer来管理其依赖项和扩展。在安装Flarum之前，您需要在计算机上<a href="https://getcomposer.org/" target="_blank" rel="noopener noreferrer">安装Composer</a>。然后，在您要安装Flarum的空白位置运行此命令：</p>
<div class="language-text" data-ext="text" data-title="text"><pre class="language-text"><code>composer create-project flarum/flarum .
</code></pre></div><h3>URL重写</h3>
<blockquote>
<p>运行此命令时，可以配置Web服务器。去 网站&gt;站点设置&gt;网站目录&gt;运行目录&gt;<code>/public</code>&gt;保存</p>
</blockquote>
<h3>汉化Flarum</h3>
<p>没有中文？有中文补丁的（中文语言包也是有版本的哦）
在根目录输入</p>
<div class="language-text" data-ext="text" data-title="text"><pre class="language-text"><code>// 简体中文
composer require flarum-lang/chinese-simplified
php flarum cache:clear
//繁体中文
composer require csineneo/lang-traditional-chinese
</code></pre></div><p>好啦，这就是全部了，祝你使用愉快</p>
<h2>让Flarum支持中文搜索</h2>
<p>MySQL 自5.7 开始支持FULLTEXT中文搜寻，重建索引即可</p>
<p>修改<code>mysql.cnf</code>，加入：</p>
<div class="language-cnf" data-ext="cnf" data-title="cnf"><pre class="language-cnf"><code>[mysqld]
ngram_token_size=2
</code></pre></div><p>修改后需要重建FULLTEXT 索引</p>
<div class="language-text" data-ext="text" data-title="text"><pre class="language-text"><code>ALTER TABLE flarum_posts DROP INDEX content;
CREATE FULLTEXT INDEX content ON `flarum_posts` (`content`) WITH PARSER ngram;

ALTER TABLE flarum_discussions DROP INDEX title;
CREATE FULLTEXT INDEX title ON `flarum_discussions` (`title`) WITH PARSER ngram;
</code></pre></div>]]></content>
    <category term="教程"/>
    <published>2019-12-12T00:00:00.000Z</published>
  </entry>
  <entry>
    <title type="text">Frp搭建与使用</title>
    <id>https://vlssu.github.io/blogs/deploy/frp.html</id>
    <link href="https://vlssu.github.io/blogs/deploy/frp.html"/>
    <updated>2023-10-02T17:17:23.000Z</updated>
    <summary type="html"><![CDATA[<h2>前期需要软件</h2>
<ol>
<li>远程SSH控制台软件（本教程使用 Remote Terminal 此为win10商店软件）<a href="https://www.lanzoui.com/i88wyvi" target="_blank" rel="noopener noreferrer">[点我下载(此软件为Xshell)]</a></li>
<li>支持Sftp的FTP软件（本教程使用 FileZilla）<a href="https://www.lanzoui.com/i88wyqd" target="_blank" rel="noopener noreferrer">[点我下载]</a></li>
<li>公网IP必须要有</li>
<li>Windows、Centos或Ubuntu等主机一台</li>
</ol>]]></summary>
    <content type="html"><![CDATA[<h2>前期需要软件</h2>
<ol>
<li>远程SSH控制台软件（本教程使用 Remote Terminal 此为win10商店软件）<a href="https://www.lanzoui.com/i88wyvi" target="_blank" rel="noopener noreferrer">[点我下载(此软件为Xshell)]</a></li>
<li>支持Sftp的FTP软件（本教程使用 FileZilla）<a href="https://www.lanzoui.com/i88wyqd" target="_blank" rel="noopener noreferrer">[点我下载]</a></li>
<li>公网IP必须要有</li>
<li>Windows、Centos或Ubuntu等主机一台</li>
</ol>
<blockquote>
<p>frp项目地址 ==&gt; <a href="https://github.com/fatedier/frp" target="_blank" rel="noopener noreferrer">[点击跳转]</a></p>
</blockquote>
<h2>项目后缀含义</h2>
<p>| <strong>下载名</strong>                         | <strong>含义</strong>                      |
|</p>
]]></content>
    <category term="教程"/>
    <published>2020-10-28T00:00:00.000Z</published>
  </entry>
  <entry>
    <title type="text">纯PHP使用又拍云做随机图API</title>
    <id>https://vlssu.github.io/blogs/deploy/img_upyun_php.html</id>
    <link href="https://vlssu.github.io/blogs/deploy/img_upyun_php.html"/>
    <updated>2023-10-02T17:20:17.000Z</updated>
    <summary type="html"><![CDATA[<div class="custom-container tip"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8h.01"></path><path d="M11 12h1v4h1"></path></g></svg><p class="custom-container-title">TIP</p><p>创建又拍云存储会的吧？不会？看看我上一篇<a href="/blogs/deploy/imgapi.html" target="_blank">点击这里</a><br>
*上一篇中会生成<code>txt</code>文件，然后读取<code>txt</code>文件内的<code>url</code>，而这篇是拼接后直接输出展示，访问一次随机一次。</p>
</div>]]></summary>
    <content type="html"><![CDATA[<div class="custom-container tip"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8h.01"></path><path d="M11 12h1v4h1"></path></g></svg><p class="custom-container-title">TIP</p><p>创建又拍云存储会的吧？不会？看看我上一篇<a href="/blogs/deploy/imgapi.html" target="_blank">点击这里</a><br>
*上一篇中会生成<code>txt</code>文件，然后读取<code>txt</code>文件内的<code>url</code>，而这篇是拼接后直接输出展示，访问一次随机一次。</p>
</div><h2>清单列表</h2>
<ul>
<li>Nginx 或 Apache</li>
<li><a href="https://www.php.net/manual/zh/install.php" target="_blank" rel="noopener noreferrer">PHP 7.4+</a></li>
<li><a href="https://getcomposer.org/" target="_blank" rel="noopener noreferrer">Composer</a></li>
</ul>
<h2>安装依赖</h2>
<p>通过 shell 执行以下命令。（记得到你网址的目录下）</p>
<div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">composer</span> require upyun/sdk
</code></pre></div>
]]></content>
    <category term="教程"/>
    <published>2023-03-17T00:00:00.000Z</published>
  </entry>
  <entry>
    <title type="text">自建图片api</title>
    <id>https://vlssu.github.io/blogs/deploy/imgapi.html</id>
    <link href="https://vlssu.github.io/blogs/deploy/imgapi.html"/>
    <updated>2023-10-02T17:17:23.000Z</updated>
    <summary type="html"><![CDATA[<p>我们都希望有个自己的随机图源，但是不会咋办呢，今天我就来教你们</p>
<p>这里我们以宝塔搭建为例</p>
<h2>建立对象存储桶</h2>
<p>我使用<a href="https://www.upyun.com/products/file-storage" target="_blank" rel="noopener noreferrer">又拍云对象存储</a>来进行演示,原因也简单，可以获得10g免费容量和每月15g免费流量，当然得参加<a href="https://www.upyun.com/league" target="_blank" rel="noopener noreferrer">加入又拍云联盟</a>。你也可以使用腾讯云cos以及阿里云oss，也有一定的免费额度，但是没有这个持久啊，不能永久白嫖多不好。</p>]]></summary>
    <content type="html"><![CDATA[<p>我们都希望有个自己的随机图源，但是不会咋办呢，今天我就来教你们</p>
<p>这里我们以宝塔搭建为例</p>
<h2>建立对象存储桶</h2>
<p>我使用<a href="https://www.upyun.com/products/file-storage" target="_blank" rel="noopener noreferrer">又拍云对象存储</a>来进行演示,原因也简单，可以获得10g免费容量和每月15g免费流量，当然得参加<a href="https://www.upyun.com/league" target="_blank" rel="noopener noreferrer">加入又拍云联盟</a>。你也可以使用腾讯云cos以及阿里云oss，也有一定的免费额度，但是没有这个持久啊，不能永久白嫖多不好。</p>
<p>如果注册的话使用我的邀请码哈，<a href="https://console.upyun.com/register/?invite=BJ71n3kxY" target="_blank" rel="noopener noreferrer">[点击我前往注册]</a></p>
<p>建立好账号后进入<a href="https://console.upyun.com/services/file/" target="_blank" rel="noopener noreferrer">[又拍云云存储控制台]</a>，点击创建服务。</p>
<p></p>
<div class="custom-container tip"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8h.01"></path><path d="M11 12h1v4h1"></path></g></svg><p class="custom-container-title">TIP</p><ul>
<li>服务器名称随便填，便于你的管理</li>
<li>应用场景选择<code>网页图片</code></li>
<li>存储类型<code>标准存储</code></li>
<li>加速区域按照自己的喜好</li>
<li>需要创建一个操作员并授权，注意<strong>密码</strong>只显示一次，请妥善保管</li>
</ul>
</div><p></p>
<p>完成创建后，系统会自动分配测试加速域名，但！因为只有一个节点并且仅供测试使用，有不稳定的因素，因此不能使用在生产环境
<br>所以我们需要绑定域名 （此域名必须经过IPC备案）才能使用全部节点。点击域名绑定，输入已备案的域名，当然也可以使用二级域名。</p>
<p></p>
<p>绑定成功后，需要在域名服务商添加一个<code>CNAME</code>解析，线路选择默认就完事了，填入又拍云提供的<code>CNAME</code>。</p>
<h2>配置域名相关</h2>
<ol>
<li>
<p>绑定<code>CNAME</code>
怎么绑定应该会吧？
</p>
</li>
<li>
<p>设置HTTPS</p>
</li>
</ol>
<p>功能配置-HTTPS-HTTPS 配置-管理-证书管理</p>
<p></p>
<p>申请SSL证书 - <strong>Let's Encrypt</strong> - 创建订单</p>
<p></p>
<p>支付完成之后会跳转回去，证书类型里面会多出一个单域名证书，补全域名信息（前提是你的域名已经解析了库的域名，就可以开整了</p>
<p></p>
<h2>配置api前置需要</h2>
<ol>
<li>你需要在库中新建一个目录，来管理你的图片，并上传</li>
</ol>
<p></p>
<ol start="2">
<li>到宝塔中，安装Python项目管理器并安装版本（这里安装的<code>3.8.5</code>）</li>
</ol>
<p></p>
<div class="custom-container tip"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8h.01"></path><path d="M11 12h1v4h1"></path></g></svg><p class="custom-container-title">TIP</p><p>|项目名称|随便起|
|:</p>
</div>]]></content>
    <category term="教程"/>
    <published>2021-08-10T00:00:00.000Z</published>
  </entry>
  <entry>
    <title type="text">搭建自己私人网盘-Nextcloud</title>
    <id>https://vlssu.github.io/blogs/deploy/nextcloud.html</id>
    <link href="https://vlssu.github.io/blogs/deploy/nextcloud.html"/>
    <updated>2023-10-02T17:17:23.000Z</updated>
    <summary type="html"><![CDATA[<h2>前期需要软件</h2>
<ol>
<li>远程SSH控制台软件（本教程使用 Remote Terminal 此为win10商店软件）<a href="https://www.lanzoui.com/i88wyvi" target="_blank" rel="noopener noreferrer">[点我下载(此软件为Xshell)]</a></li>
<li>支持Sftp的FTP软件（本教程使用 FileZilla）<a href="https://www.lanzoui.com/i88wyqd" target="_blank" rel="noopener noreferrer">[点我下载]</a></li>
<li>Centos或Ubuntu主机一台 （教程使用 centos7.7）</li>
</ol>]]></summary>
    <content type="html"><![CDATA[<h2>前期需要软件</h2>
<ol>
<li>远程SSH控制台软件（本教程使用 Remote Terminal 此为win10商店软件）<a href="https://www.lanzoui.com/i88wyvi" target="_blank" rel="noopener noreferrer">[点我下载(此软件为Xshell)]</a></li>
<li>支持Sftp的FTP软件（本教程使用 FileZilla）<a href="https://www.lanzoui.com/i88wyqd" target="_blank" rel="noopener noreferrer">[点我下载]</a></li>
<li>Centos或Ubuntu主机一台 （教程使用 centos7.7）</li>
</ol>
<h2>注意事项</h2>
<ol>
<li>推荐Ubuntu系统（由于个人偏向，本教程使用Centos）</li>
<li>未标注哪个系统指令则两者都可适用</li>
<li>若标题注释了哪个系统那只能适用那个系统或另一个系统不需要输此指令</li>
</ol>
<h2>环境部署</h2>
<h3>系统更新</h3>
<ul>
<li>首先你要确保你的系统是最新的</li>
</ul>

<h3>宝塔安装</h3>
<ol>
<li>使用指令安装</li>
</ol>

<ol start="2">
<li>安装所需环境</li>
</ol>
<ul>
<li>首次进入会让你安装基础程序【这里选<strong>LAMP</strong>个人喜欢这个，并且不需要自己添加伪静态】
<ul>
<li>这里选择版本为：</li>
<li>Apache 2.4</li>
<li>MySQL 5.7</li>
<li>Pure-Ftpd 1.0.49</li>
<li>PHP 7.3(并安装扩展名: fileinfo)</li>
<li>phpMyAdmin 4.7</li>
</ul>
</li>
<li>这里最好选<strong>编译安装</strong>，极速安装虽说快，但他不稳定，很不推荐.</li>
<li>下载速度日常很慢（根据服务器性能，我这里就是晚上弄然后睡觉去了）</li>
</ul>
<p>

</p>
<ol start="3">
<li>删除PHP中的禁用函数(现在的PHP和以前相比已经不需要禁用函数了，反而导致程序错误)</li>
</ol>
<ul>
<li>按下键盘<strong>Ctrl+F</strong>开启搜索功能搜索<code>disable_functions</code>，并删除后面的禁用函数，随后重启PHP。</li>
</ul>
<p></p>
<ol start="4">
<li>新建网站+数据库，并将数据库账户密码记录，在下文会使用到</li>
</ol>
<p></p>
<ol start="5">
<li>在SSH部署时需手动<code>cd</code>到网站目录并保证<strong>目录为空</strong>。(都面板化了，手动删除4个文件应该不费事吧)</li>
</ol>
<h2>安装Nextcloud</h2>
<ol>
<li>克隆Nextcloud文件到本地</li>
</ol>
<ul>
<li>对于网盘系统有seafile、可道云，国外NextCloud，在自我衡量之后发现NextCloud更适合做网盘系统</li>
<li><a href="https://nextcloud.com/install/#instructions-server" target="_blank" rel="noopener noreferrer">[前往Nextcloud下载页]</a>下载<strong>NextCloud</strong>安装包，并上传至服务器或<code>cd</code>到你要部署的文件夹自行下方命令</li>
<li><strong>注意！</strong> 链接非统一性，在官方随时更新版本链接随时变更，链接最好前往官方获取链接</li>
</ul>
<div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">wget</span> <span class="token parameter variable">-c</span> https://download.nextcloud.com/server/releases/nextcloud-22.1.1.zip
</code></pre></div><p></p>
<ol start="2">
<li>解压压缩包<code>nextcloud-22.1.1.zip</code></li>
</ol>
<p></p>
<ol start="3">
<li>移动<code>nextcloud</code>内安装文件，迁移至网站目录</li>
</ol>
<p></p>
<ol start="4">
<li>删除无用文件的<code>nextcloud``nextcloud-18.0.1.zip</code>，不删除容易出错</li>
</ol>
<div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">rm</span> <span class="token parameter variable">-rf</span> nextcloud
<span class="token function">rm</span> <span class="token parameter variable">-rf</span> nextcloud-18.0.1.zip
</code></pre></div><ol start="5">
<li>变更权限组合权限，权限选择「755」+用户组选择「www」，最后确定即可</li>
</ol>
<p></p>
<ol start="6">
<li>直接打开自己绑定的域名，将上面用记下来的数据库用户名和密码写入相应的位置</li>
</ol>
<p></p>
<ol start="7">
<li>点击安装后就安装好啦</li>
</ol>
<h2>维护模式指令</h2>
<div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token parameter variable">-u</span> www php occ maintenance:mode <span class="token parameter variable">--on</span>
<span class="token function">sudo</span> <span class="token parameter variable">-u</span> www php occ maintenance:mode <span class="token parameter variable">--off</span>
</code></pre></div><h2>解决后续问题</h2>
<ul>
<li>在「设置」中「管理栏」的选项中有「安全与设置警告」，实际上没多大事，如果有强迫症，下方可以解决</li>
</ul>
<p></p>
<h3>PHP 内存限制低于建议值 512MB</h3>
<div class="custom-container tip"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8h.01"></path><path d="M11 12h1v4h1"></path></g></svg><p class="custom-container-title">TIP</p><p>宝塔php点击<strong>配置修改</strong>，编辑<code>脚本内存限制</code>,给<strong>512M</strong>即可</p>
</div><h3>PHP 的 OPcache 模块未载入。推荐开启获得更好的性能。</h3>
<div class="custom-container tip"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8h.01"></path><path d="M11 12h1v4h1"></path></g></svg><p class="custom-container-title">TIP</p><p>按照提示在php配置文件中搜索Zend ZendGuard Loader，添加：</p>
<div class="language-ini" data-ext="ini" data-title="ini"><pre class="language-ini"><code><span class="token key attr-name">zend_extension</span><span class="token punctuation">=</span><span class="token value attr-value">opcache.so</span>
</code></pre></div></div><h3>PHP 的组件 OPcache 没有正确配置。 为了提供更好的性能，我们建议在 php.ini中使用下列设置：</h3>
<div class="custom-container tip"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8h.01"></path><path d="M11 12h1v4h1"></path></g></svg><p class="custom-container-title">TIP</p><p>宝塔php点击安装<code>opcache</code>。</p>
<p></p>
</div><h3>该实例缺失了一些推荐的 PHP 模块。为提高性能和兼容性，我们强烈建议安装它们。<code>imagick</code></h3>
<div class="custom-container tip"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8h.01"></path><path d="M11 12h1v4h1"></path></g></svg><p class="custom-container-title">TIP</p><p>宝塔php点击安装<code>imagemagick</code>。</p>
<p></p>
</div><h3>内存缓存未配置，为了提升使用体验，请尽量配置内存缓存。</h3>
<div class="custom-container tip"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8h.01"></path><path d="M11 12h1v4h1"></path></g></svg><p class="custom-container-title">TIP</p><p>宝塔php点击安装<code>apcu</code> ，编辑<code>/config</code>下的<code>config.php</code>在<code>);</code>前加入以下代码：
</p>
<div class="language-php" data-ext="php" data-title="php"><pre class="language-php"><code>  <span class="token string single-quoted-string">'memcache.local'</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">'\OC\Memcache\APCu'</span><span class="token punctuation">,</span>
</code></pre></div></div><h3>Nextcloud不能执行命令更新，报错如下：OC\HintException: [0]: Memcache \OC\Memcache\APCu not available for local cache</h3>
<div class="custom-container tip"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8h.01"></path><path d="M11 12h1v4h1"></path></g></svg><p class="custom-container-title">TIP</p><p>宝塔软件商店 &gt; PHP7.X &gt; 配置文件 &gt; 末尾的地方追加入以下代码：</p>
<div class="language-php" data-ext="php" data-title="php"><pre class="language-php"><code>apc<span class="token operator">.</span>enable_cli<span class="token operator">=</span><span class="token number">1</span>
</code></pre></div><p>然后重启电脑</p>
</div><h3>您的安装没有设置默认的电话区域。这对验证配置设定中没有国家代码的电话号码而言是必需的。要允许没有国家代码的电话号码，请添加带区域相应的 ISO 3166-1 code ↗ 的“默认_电话_区域”到你的配置文件中。</h3>
<div class="custom-container tip"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8h.01"></path><path d="M11 12h1v4h1"></path></g></svg><p class="custom-container-title">TIP</p><p>编辑<code>/config</code>下的<code>config.php</code>在<code>);</code>前加入以下代码：</p>
<div class="language-php" data-ext="php" data-title="php"><pre class="language-php"><code>  <span class="token string single-quoted-string">'default_phone_region'</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">'CN'</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span><span class="token punctuation">,</span>
</code></pre></div></div><h3>该实例缺失了一些推荐的 PHP 模块。为提高性能和兼容性，我们强烈建议安装它们。gmp</h3>
<div class="custom-container tip"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8h.01"></path><path d="M11 12h1v4h1"></path></g></svg><p class="custom-container-title">TIP</p><p>宝塔php点击安装<code>gmp</code></p>
<p></p>
</div><h3>数据库中的一些列由于进行长整型转换而缺失。</h3>
<div class="custom-container tip"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8h.01"></path><path d="M11 12h1v4h1"></path></g></svg><p class="custom-container-title">TIP</p><p>cd到nextcloud目录，执行</p>
<div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token parameter variable">-u</span> www php occ db:convert-filecache-bigint
</code></pre></div></div><h3>数据库丢失了一些索引。</h3>
<div class="custom-container tip"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8h.01"></path><path d="M11 12h1v4h1"></path></g></svg><p class="custom-container-title">TIP</p><p>cd到nextcloud目录，执行</p>
<div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token parameter variable">-u</span> www php occ db:add-missing-indices
</code></pre></div></div><h3>美化URL，去除入口文件index.php</h3>
<div class="custom-container tip"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8h.01"></path><path d="M11 12h1v4h1"></path></g></svg><p class="custom-container-title">TIP</p><p>使用config.php+OCC命令生成<code>.htaccess</code>。编辑<code>/config/config.php</code>添加规则：</p>
<div class="language-php" data-ext="php" data-title="php"><pre class="language-php"><code><span class="token string single-quoted-string">'htaccess.RewriteBase'</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">'/'</span><span class="token punctuation">,</span>
</code></pre></div><p>然后使用occ命令生成.htaccess文件：</p>
<div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token parameter variable">-u</span> www php occ maintenance:update:htaccess
</code></pre></div></div><h3>通过 HTTP 访问网站不安全。强烈建议您将服务器设置成要求使用HTTPS 协议</h3>
<div class="custom-container tip"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8h.01"></path><path d="M11 12h1v4h1"></path></g></svg><p class="custom-container-title">TIP</p><p>去证书网站申请证书即可。</p>
</div><h3>HTTP的请求头 "Strict-Transport-Security" 未设置为至少 "15552000" 秒。为了提高安全性，建议参照security tips 中的说明启用HSTS。</h3>
<div class="custom-container tip"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8h.01"></path><path d="M11 12h1v4h1"></path></g></svg><p class="custom-container-title">TIP</p><p>在站点配置文件里面添加如下代码，然后重启Apache即可。</p>
<div class="language-text" data-ext="text" data-title="text"><pre class="language-text"><code>Header always set Strict-Transport-Security "max-age=63072000; includeSubdomains; preload"
</code></pre></div></div><h2>安装后无法挂载外部共享目录</h2>
<ol>
<li>安装PHP smbclient模块</li>
<li>在php.ini里面启用smb模块</li>
</ol>
<div class="language-text" data-ext="text" data-title="text"><pre class="language-text"><code>vim /usr/local/php/etc/php.ini
//文件最后添加如下内容：
[smb]
extension=/usr/local/php/lib/php/extensions/no-debug-non-zts-20160303/smbclient.so
</code></pre></div><h2>性能优化</h2>
<h3>定时任务配置为 'Cron'</h3>
<div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token parameter variable">-u</span> www <span class="token function">crontab</span> <span class="token parameter variable">-e</span>
<span class="token comment"># 添加</span>
*/5 * * * * php <span class="token parameter variable">-f</span> /站点的绝对路径/cron.php
<span class="token comment"># 这是我添加的，你们可以进行参考</span>
*/5 * * * * php <span class="token parameter variable">-f</span> /www/wwwroot/cloud.vlssu.com/cron.php
lnmp restart
</code></pre></div><div class="custom-container danger"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M10 10l4 4m0-4l-4 4"></path></g></svg><p class="custom-container-title">无法正常运行</p><ul>
<li>如果你是宝塔，那么大概率会出现这个问题，修复也很简单，原因是你根本登录不了<code>www</code>用户</li>
<li>当你输入<code>cat /etc/passwd | grep www</code>你会发现是<code>/sbin /nologin</code></li>
<li>你知道替换为<code>/bin/bash</code></li>
</ul>
<div class="language-text" data-ext="text" data-title="text"><pre class="language-text"><code># 进入该文件中
vi /etc/passwd
# 找到www那条，进行修改，将/sbin /nologin替换为/bin/bash
www:x:1001:1001::/home/www:/bin/bash
</code></pre></div></div>]]></content>
    <category term="教程"/>
    <published>2020-02-27T00:00:00.000Z</published>
  </entry>
  <entry>
    <title type="text">翼龙面板汉化版(宝塔)搭建教程</title>
    <id>https://vlssu.github.io/blogs/deploy/pterodactyl.html</id>
    <link href="https://vlssu.github.io/blogs/deploy/pterodactyl.html"/>
    <updated>2024-02-13T09:09:57.000Z</updated>
    <summary type="html"><![CDATA[<p>::: theorem
我参与了此项目的汉化，而我是负责面板的开发版汉化（此开发版非比开发版），如果上游仓库更新，这里会同步更新，当然，我在使用过程中出现问题我也会第一时间去修复这些。现阶段更新频率降低（毕竟能汉化的基本汉化完了）。
::: right
详情请参阅<a href="https://pterodactyl.top" target="_blank" rel="noopener noreferrer">翼龙中国文档</a>
:::</p>
<h2>选择服务器操作系统</h2>
<p>翼龙可在多种操作系统上运行，因此请选择最适合您使用的操作系统。</p>
<div class="custom-container warning"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8v4"></path><path d="M12 16h.01"></path></g></svg><p class="custom-container-title">WARNING</p><p>由于与 Docker 不兼容，翼龙不支持大多数 OpenVZ 系统。如果您计划在基于 OpenVZ 的系统上运行此软件，您将很大概率不会成功。<br>
不过翼龙面板前端就没那么需求了，只要阁下前端服务器能装 <code>BT-Panel</code>，和 <code>LNMP</code> 或者 <code>LAMP</code>，就可以用来搭建翼龙面板前端了。一般服务器均能满足前端的搭建要求。</p>
</div>]]></summary>
    <content type="html"><![CDATA[<p>::: theorem
我参与了此项目的汉化，而我是负责面板的开发版汉化（此开发版非比开发版），如果上游仓库更新，这里会同步更新，当然，我在使用过程中出现问题我也会第一时间去修复这些。现阶段更新频率降低（毕竟能汉化的基本汉化完了）。
::: right
详情请参阅<a href="https://pterodactyl.top" target="_blank" rel="noopener noreferrer">翼龙中国文档</a>
:::</p>
<h2>选择服务器操作系统</h2>
<p>翼龙可在多种操作系统上运行，因此请选择最适合您使用的操作系统。</p>
<div class="custom-container warning"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8v4"></path><path d="M12 16h.01"></path></g></svg><p class="custom-container-title">WARNING</p><p>由于与 Docker 不兼容，翼龙不支持大多数 OpenVZ 系统。如果您计划在基于 OpenVZ 的系统上运行此软件，您将很大概率不会成功。<br>
不过翼龙面板前端就没那么需求了，只要阁下前端服务器能装 <code>BT-Panel</code>，和 <code>LNMP</code> 或者 <code>LAMP</code>，就可以用来搭建翼龙面板前端了。一般服务器均能满足前端的搭建要求。</p>
</div><p>| 操作系统 | 版本 |     支持状况      | 注意事项                                                       |
|</p>
]]></content>
    <category term="教程"/>
    <published>2022-07-07T00:00:00.000Z</published>
  </entry>
  <entry>
    <title type="text">翼龙面板汉化版docker一键部署</title>
    <id>https://vlssu.github.io/blogs/deploy/pterodactyl_docker.html</id>
    <link href="https://vlssu.github.io/blogs/deploy/pterodactyl_docker.html"/>
    <updated>2024-04-18T00:46:39.000Z</updated>
    <summary type="html"><![CDATA[<p>翼龙面板运行在您自己的 Web 服务器上。为了运行和使用这个面板，您需要对您的服务器具有 root 访问权限。</p>
<p>您需要了解如何阅读文档以使用此面板。我们花了很多时间详细介绍如何安装或升级我们的软件；
所以你也要花点时间去阅读而不是复制粘贴，然后在事情不起作用时候而抱怨。
此面板不作为运行服务器的拖放服务存在。
这是一个高度复杂的系统，需要多个依赖项，并且使用搭建他的网站管理人员需要付出一些时间学习如何使用它。<strong>如果您希望能够在不了解基本 linux 系统管理的情况下安装它，您现在应该停下来然后出门左拐。</strong></p>
<h2>选择服务器操作系统</h2>]]></summary>
    <content type="html"><![CDATA[<p>翼龙面板运行在您自己的 Web 服务器上。为了运行和使用这个面板，您需要对您的服务器具有 root 访问权限。</p>
<p>您需要了解如何阅读文档以使用此面板。我们花了很多时间详细介绍如何安装或升级我们的软件；
所以你也要花点时间去阅读而不是复制粘贴，然后在事情不起作用时候而抱怨。
此面板不作为运行服务器的拖放服务存在。
这是一个高度复杂的系统，需要多个依赖项，并且使用搭建他的网站管理人员需要付出一些时间学习如何使用它。<strong>如果您希望能够在不了解基本 linux 系统管理的情况下安装它，您现在应该停下来然后出门左拐。</strong></p>
<h2>选择服务器操作系统</h2>
<p>翼龙可在多种操作系统上运行，因此请选择最适合您使用的操作系统。</p>
<div class="custom-container warning"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8v4"></path><path d="M12 16h.01"></path></g></svg><p class="custom-container-title">WARNING</p><p>Pterodactyl 不支持大多数 OpenVZ 系统，因为它与 Docker 不兼容。如果你计划在基于 OpenVZ 的系统上运行这个软件，你很可能不会成功。
不过本页的教程并不会有太多的限制，只要阁下前端服务器能装 <code>Docker</code> 和 <code>Docker Compose</code>，就可以采用本页教程来搭建翼龙面板前端了。一般服务器均能满足前端的搭建要求。
只要能装 <strong>Docker Compose</strong> 并运行，就没有系统的限制。</p>
</div><h2>安装 Docker</h2>
<p>如需快速安装 Docker 社区版，您可以执行以下命令：</p>
<div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">curl</span> <span class="token parameter variable">-sSL</span> https://get.docker.com/ <span class="token operator">|</span> <span class="token assign-left variable">CHANNEL</span><span class="token operator">=</span>stable <span class="token function">bash</span>
<span class="token comment"># 如果速度过慢可以尝试阿里云源</span>
<span class="token function">curl</span> <span class="token parameter variable">-sSL</span> https://get.docker.com/ <span class="token operator">|</span> <span class="token assign-left variable">CHANNEL</span><span class="token operator">=</span>stable <span class="token function">bash</span> <span class="token parameter variable">-s</span> <span class="token function">docker</span> <span class="token parameter variable">--mirror</span> Aliyun
</code></pre></div><p>如果您希望手动安装，请参考官方 Docker 文档了解如何在您的服务器上安装 Docker 社区版。下面列出了一些常用系统支持的快速链接。</p>
<ul>
<li><a href="https://docs.docker.com/install/linux/docker-ce/ubuntu/#install-docker-ce" target="_blank" rel="noopener noreferrer">Ubuntu</a></li>
<li><a href="https://docs.docker.com/install/linux/docker-ce/centos/#install-docker-ce" target="_blank" rel="noopener noreferrer">CentOS</a></li>
<li><a href="https://docs.docker.com/install/linux/docker-ce/debian/#install-docker-ce" target="_blank" rel="noopener noreferrer">Debian</a></li>
</ul>
<div class="custom-container warning"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8v4"></path><path d="M12 16h.01"></path></g></svg><p class="custom-container-title">检查你的内核</p><p>请注意，某些主机安装了不支持 docker 重要功能的修改内核。 请通过运行 <code>uname -r</code> 检查您的内核。 如果您的内核以 <code>-xxxx-grs-ipv6-64</code> 或 <code>-xxxx-mod-std-ipv6-64</code> 结尾，您可能使用的是不受支持的内核。 查看我们的 <a href="/daemon/0.6/kernel_modifications.html" target="_blank">内核修改</a> 指南了解详细信息。</p>
</div><h3>在启动时启动 Docker</h3>
<p>如果您使用的是带有 systemd 的操作系统（Ubuntu 16+、Debian 8+、CentOS 7+），请运行以下命令以在您启动机器时启动 Docker。</p>
<div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code>systemctl <span class="token builtin class-name">enable</span> <span class="token parameter variable">--now</span> <span class="token function">docker</span>
</code></pre></div><h2>安装 Docker Compose</h2>
<p>虽然 <code>yum</code> <code>apt</code> 有快速安装的软件包，但版本一般不是最新的。最新发行的版本地址：<a href="https://github.com/docker/compose/releases%E3%80%82" target="_blank" rel="noopener noreferrer">https://github.com/docker/compose/releases。</a></p>
<p>运行以下命令来下载 Docker Compose 的当前稳定版本：</p>
<div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">curl</span> <span class="token parameter variable">-L</span> <span class="token string">"https://github.com/docker/compose/releases/latest/download/docker-compose-<span class="token variable"><span class="token variable">$(</span><span class="token function">uname</span> <span class="token parameter variable">-s</span><span class="token variable">)</span></span>-<span class="token variable"><span class="token variable">$(</span><span class="token function">uname</span> <span class="token parameter variable">-m</span><span class="token variable">)</span></span>"</span> <span class="token parameter variable">-o</span> /usr/local/bin/docker-compose
<span class="token comment"># 若阁下在上条指令上无法正常拉取压缩包或者拉取缓慢 可使用 gh-proxy 提供的CF反向代理来拉取</span>
<span class="token function">curl</span> <span class="token parameter variable">-L</span> <span class="token string">"https://mirror.ghproxy.com/https://github.com/docker/compose/releases/latest/download/docker-compose-<span class="token variable"><span class="token variable">$(</span><span class="token function">uname</span> <span class="token parameter variable">-s</span><span class="token variable">)</span></span>-<span class="token variable"><span class="token variable">$(</span><span class="token function">uname</span> <span class="token parameter variable">-m</span><span class="token variable">)</span></span>"</span> <span class="token parameter variable">-o</span> /usr/local/bin/docker-compose
<span class="token comment"># 将可执行权限应用于二进制文件并创建软链</span>
<span class="token function">chmod</span> +x /usr/local/bin/docker-compose
<span class="token function">ln</span> <span class="token parameter variable">-s</span> /usr/local/bin/docker-compose /usr/bin/docker-compose
</code></pre></div><h2>下载文件</h2>
<p>在进行此步骤之前，我们要为 <code>docker-compose.yml</code> 创建一个放置目录。<br>
此过程的第一步是创建面板所在的文件夹，然后进入新创建的文件夹中。以下是如何执行此操作的示例。</p>
<div class="custom-container warning"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8v4"></path><path d="M12 16h.01"></path></g></svg><p class="custom-container-title">WARNING</p><p>以下命令使用的路径仅为示例，阁下大可自己自定义路径，但是我在此提醒您，若您不用我示例使用的路径，请务必记住自己设置的程序所在的目录，并在后续各种涉及到程序运行目录的地方灵活操作！</p>
</div><div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">mkdir</span> <span class="token parameter variable">-p</span> /var/www/pterodactyl
<span class="token builtin class-name">cd</span> /var/www/pterodactyl
</code></pre></div><p>在为面板创建好它的放置目录后，我们将使用 <code>curl</code> 命令，从 Github 拉取翼龙中国汉化完成的 <code>docker-compose.yml</code> 文件并赋予该文件的可执行权限。</p>
<div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">curl</span> <span class="token parameter variable">-Lo</span> docker-compose.yml https://raw.githubusercontent.com/pterodactyl-china/panel/1.0-develop/docker-compose.example.yml
<span class="token comment"># 将可执行权限应用于yml文件</span>
<span class="token function">chmod</span> +x docker-compose.yml
</code></pre></div><h3>环境变量</h3>
<p>当您不提供自己的 <code>.env</code> 文件时，有多个环境变量可以配置面板，有关每个可用选项的详细信息</p>
<p>在 <code>docker-compose.yml</code> 文件中可以设置，具体变量的详细信息可查看 在 <a href="https://github.com/pterodactyl-china/panel/blob/1.0-develop/.github/docker/README.md" target="_blank" rel="noopener noreferrer">GitHub 仓库中提供的文档</a> 或查看 <a href="https://gitee.com/vlssu/pterodactyl-panel/blob/1.0-develop/.github/docker/README.md" target="_blank" rel="noopener noreferrer">Gitee 镜像仓库中提供的文档(可能不是最新的)</a></p>
<p>如果你想变更数据的存储目录，可以自行查看文件，如果你并不会或不懂，请不要更改</p>
<h2>部署运行</h2>
<p>在设置完环境变量，我们就可以通过 Docker Compose 使用 <code>docker-compose.yml</code> 文件来启动面板了</p>
<div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># 在后台执行该服务</span>
<span class="token comment"># -d 参数是让该程序在后台执行，如果你需要排查错误等情况你可以去除该参数</span>
<span class="token function">docker-compose</span> up <span class="token parameter variable">-d</span>
</code></pre></div><h3>添加首位用户</h3>
<p>您需要为面板创建一个管理用户，以便您可以登录面板。 为此，请运行以下命令。 并保证账户密码满足以下要求：8 个字符，大小写混合，至少一个数字。(此指令需在上文中含有 <code>docker-compose.yml</code> 的同级目录中执行）</p>
<div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">docker-compose</span> <span class="token builtin class-name">exec</span> panel php artisan p:user:make
</code></pre></div><p>现在，你已经全部设置完毕，直接输入你的网站地址，即可访问翼龙面板</p>
]]></content>
    <category term="教程"/>
    <published>2023-10-03T00:00:00.000Z</published>
  </entry>
  <entry>
    <title type="text">如果yutto搭建下载bilibili视频</title>
    <id>https://vlssu.github.io/blogs/deploy/yutto.html</id>
    <link href="https://vlssu.github.io/blogs/deploy/yutto.html"/>
    <updated>2024-04-10T14:53:24.000Z</updated>
    <summary type="html"><![CDATA[<div class="custom-container tip"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8h.01"></path><path d="M11 12h1v4h1"></path></g></svg><p class="custom-container-title">TIP</p><p>我看到一个下载的bilibili视频的程序，贼好用但是需要Python3.9，就是我上一篇文章不是写了Python3.9的安装教程吗。其实最主要是Python安装有点反人类，至少在win上面，所以我只能在我习惯的linux上部署了。</p>
</div>]]></summary>
    <content type="html"><![CDATA[<div class="custom-container tip"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8h.01"></path><path d="M11 12h1v4h1"></path></g></svg><p class="custom-container-title">TIP</p><p>我看到一个下载的bilibili视频的程序，贼好用但是需要Python3.9，就是我上一篇文章不是写了Python3.9的安装教程吗。其实最主要是Python安装有点反人类，至少在win上面，所以我只能在我习惯的linux上部署了。</p>
</div><p>::: theorem yutto
一个可爱且任性的 B 站视频下载器（bilili2.x）
::: right
来自 <a href="https://github.com/SigureMo/yutto" target="_blank" rel="noopener noreferrer">Github</a>
:::</p>
<p><a href="/blogs/tech-sharing/linux/python3.9.html" target="_blank"><strong>[在Ubuntu如何安装Python3.9（Ubuntu 20.04）]</strong></a></p>
<h2>安装yutto</h2>
<div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code>pip <span class="token function">install</span> <span class="token parameter variable">--pre</span> yutto
<span class="token comment"># 一半系统预装python都是3.8，所以想要调用3.9（更高版本以此类推）需要使用以下命令</span>
<span class="token comment"># pip3.9 install --pre yutto</span>
<span class="token comment"># 用于加速的</span>
pip <span class="token function">install</span> uvloop
</code></pre></div><h3>记得安装一下ffmpeg</h3>
<div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">apt</span> <span class="token function">install</span> ffmpeg
</code></pre></div><details class="custom-container details"><summary class="custom-container-title">yutto</summary><h4>最大并行 worker 数量</h4>
<ul>
<li>参数 <code>-n</code> 或 <code>--num-workers</code></li>
<li>默认值 <code>8</code></li>
</ul>
<p>与 bilili 不同的是，yutto 并不是使用多线程实现并行下载，而是使用协程实现的，本参数限制的是最大的并行 Worker 数量。</p>
<h4>指定视频清晰度等级</h4>
<ul>
<li>参数 <code>-q</code> 或 <code>--video-quality</code></li>
<li>可选值 <code>125 | 120 | 116 | 112 | 80 | 74 | 64 | 32 | 16</code></li>
<li>默认值 <code>125</code></li>
</ul>
<p>清晰度对应关系如下</p>
<!-- prettier-ignore -->
<table>
<thead>
<tr>
<th style="text-align:center">code</th>
<th style="text-align:center">清晰度</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">125</td>
<td style="text-align:center">HDR 真彩</td>
</tr>
<tr>
<td style="text-align:center">120</td>
<td style="text-align:center">4K 超清</td>
</tr>
<tr>
<td style="text-align:center">116</td>
<td style="text-align:center">1080P 60帧</td>
</tr>
<tr>
<td style="text-align:center">112</td>
<td style="text-align:center">1080P 高码率</td>
</tr>
<tr>
<td style="text-align:center">80</td>
<td style="text-align:center">1080P 高清</td>
</tr>
<tr>
<td style="text-align:center">74</td>
<td style="text-align:center">720P 60帧</td>
</tr>
<tr>
<td style="text-align:center">64</td>
<td style="text-align:center">720P 高清</td>
</tr>
<tr>
<td style="text-align:center">32</td>
<td style="text-align:center">480P 清晰</td>
</tr>
<tr>
<td style="text-align:center">16</td>
<td style="text-align:center">360P 流畅</td>
</tr>
</tbody>
</table>
<p>并不是说指定某个清晰度就一定会下载该清晰度的视频，yutto 只会尽可能满足你的要求，如果不存在指定的清晰度，yutto 就会按照默认的清晰度搜索机制进行调节，比如指定清晰度为 <code>80</code>，<strong>首先会依次降清晰度搜索</strong> <code>74</code>、<code>64</code>、<code>32</code>、<code>16</code>，如果依然找不到合适的则<strong>继续升清晰度搜索</strong> <code>112</code>、<code>116</code>、<code>120</code>、<code>125</code>。</p>
<h4>指定音频码率等级</h4>
<ul>
<li>参数 <code>-aq</code> 或 <code>--audio-quality</code></li>
<li>可选值 <code>30280 | 30232 | 30216</code></li>
<li>默认值 <code>30280</code></li>
</ul>
<p>码率对应关系如下</p>
<!-- prettier-ignore -->
<table>
<thead>
<tr>
<th style="text-align:center">code</th>
<th style="text-align:center">码率</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">30280</td>
<td style="text-align:center">320kbps</td>
</tr>
<tr>
<td style="text-align:center">30232</td>
<td style="text-align:center">128kbps</td>
</tr>
<tr>
<td style="text-align:center">30216</td>
<td style="text-align:center">64kbps</td>
</tr>
</tbody>
</table>
<p>清晰度自动调节机制与视频清晰度一致，也采用先降后升的匹配机制。</p>
<h4>指定视频编码</h4>
<ul>
<li>参数 <code>--vcodec</code></li>
<li>下载编码可选值 <code>"hevc" | "avc"</code></li>
<li>保存编码可选值 FFmpeg 所有可用的视频编码器</li>
<li>默认值 <code>"avc:copy"</code></li>
</ul>
<p>该参数略微复杂，前半部分表示在下载时<strong>优先</strong>选择哪一种编码的视频流，后半部分则表示在合并时如何编码视频流，两者使用 <code>:</code> 分隔。</p>
<p>值得注意的是，前半的下载编码只是优先下载的编码而已，如果不存在该编码，则仍会像视频清晰度调节机制一样自动选择其余编码。</p>
<p>而后半部分的参数如果设置成非 <code>copy</code> 的值则可以确保在下载完成后对其进行重新编码，而且不止支持 <code>hevc</code> 与 <code>avc</code>，只要你的 FFmpeg 支持的视频编码器，它都可以完成。</p>
<h4>指定音频编码</h4>
<ul>
<li>参数 <code>--acodec</code></li>
<li>下载编码可选值 <code>"mp4a"</code></li>
<li>保存编码可选值 FFmpeg 所有可用的音频编码器</li>
<li>默认值 <code>"mp4a:copy"</code></li>
</ul>
<p>详情同视频编码。</p>
<h4>仅下载视频流</h4>
<ul>
<li>参数 <code>--video-only</code></li>
<li>默认值 <code>False</code></li>
</ul>
<h4>仅下载音频流</h4>
<ul>
<li>参数 <code>--audio-only</code></li>
<li>默认值 <code>False</code></li>
</ul>
<p>仅下载其中的音频流，保存为 <code>.aac</code> 文件。</p>
<p>值得注意的是，在不选择视频流时，嵌入字幕、弹幕功能将无法工作。</p>
<h4>弹幕格式选择</h4>
<ul>
<li>参数 <code>-df</code> 或 <code>--danmaku-format</code></li>
<li>可选值 <code>"ass" | "xml" | "protobuf"</code></li>
<li>默认值 <code>"ass"</code></li>
</ul>
<p>B 站提供了 <code>xml</code> 与 <code>protobuf</code> 两种弹幕数据接口，yutto 会自动下载 <code>xml</code> 格式弹幕并转换为 <code>ass</code> 格式，如果你不喜欢 yutto 自动转换的效果，可以选择输出格式为 <code>xml</code> 或 <code>protobuf</code>，手动通过一些工具进行转换，比如 yutto 和 bilili 所使用的 <a href="https://github.com/ShigureLab/biliass" target="_blank" rel="noopener noreferrer">biliass</a>，或者使用 <a href="https://tiansh.github.io/us-danmaku/bilibili/" target="_blank" rel="noopener noreferrer">us-danmaku</a> 进行在线转换。</p>
<p>如果你不想下载弹幕，只需要使用参数 <code>--no-danmaku</code> 即可。</p>
<h4>下载块大小</h4>
<ul>
<li>参数 <code>-bs</code> 或 <code>--block-size</code></li>
<li>默认值 <code>0.5</code></li>
</ul>
<p>以 MiB 为单位，为分块下载时各块大小，不建议更改。</p>
<h4>强制覆盖已下载文件</h4>
<ul>
<li>参数 <code>-w</code> 或 <code>--overwrite</code></li>
<li>默认值 <code>False</code></li>
</ul>
<h4>代理设置</h4>
<ul>
<li>参数 <code>-x</code> 或 <code>--proxy</code></li>
<li>可选值 <code>"auto" | "no" | &lt;https?://url/to/proxy/server&gt;</code></li>
<li>默认值 <code>"auto"</code></li>
</ul>
<p>设置代理服务器，默认是从环境变量读取，<code>no</code> 则为不设置代理，设置其它 http/https url 则将其作为代理服务器。</p>
<h4>存放根目录</h4>
<ul>
<li>参数 <code>-d</code> 或 <code>--dir</code></li>
<li>默认值 <code>"./"</code></li>
</ul>
<h4>存放子路径模板</h4>
<ul>
<li>参数 <code>-tp</code> 或 <code>--subpath-template</code></li>
<li>可选参数变量 <code>title | id | name | username | fav_title</code> （以后可能会有更多）</li>
<li>默认值 <code>"{auto}"</code></li>
</ul>
<p>通过配置子路径模板可以灵活地控制视频存放位置。</p>
<p>默认情况是由 yutto 自动控制存放位置的。比如下载单个视频时默认就是直接存放在设定的根目录，不会创建一层容器目录，此时自动选择了 <code>{name}</code> 作为模板；而批量下载时则会根据视频层级生成多级目录，比如番剧会是 <code>{title}/{name}</code>，首先会在设定根目录里生成一个番剧名的目录，其内才会存放各个番剧剧集视频，这样方便了多个不同番剧的管理。当然，如果你仍希望将番剧直接存放在设定根目录下的话，可以修改该参数值为 <code>{name}</code>即可。</p>
<p>另外，该功能语法由 Python format 函数模板语法提供，所以也支持一些高级的用法，比如 <code>{id:0&gt;3}{name}</code>。</p>
<p>值得注意的是，并不是所有变量在各种场合下都会提供，比如 <code>username</code> 变量当前仅在 UP 主全部投稿视频/收藏夹才提供，在其它情况下不应使用它。</p>
<h4>url 别名文件路径</h4>
<ul>
<li>参数 <code>-af</code> 或 <code>--alias-file</code></li>
<li>默认值 <code>None</code></li>
</ul>
<p>指定别名文件路径，别名文件中存放一个别名与其对应的 url，使用空格或者 <code>=</code> 分隔，示例如下：</p>
<div class="language-text" data-ext="text" data-title="text"><pre class="language-text"><code>rimuru1=https://www.bilibili.com/bangumi/play/ss25739/
rimuru2=https://www.bilibili.com/bangumi/play/ss36170/
rimuru-nikki=https://www.bilibili.com/bangumi/play/ss38221/
</code></pre></div><p>比如将上述内容存储到 <code>~/.yutto_alias</code>，则通过以下命令即可解析该文件：</p>
<div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code>yutto rimuru1 <span class="token parameter variable">--batch</span> --alias-file<span class="token operator">=</span><span class="token string">'~/.yutto_alias'</span>
</code></pre></div><p>当参数值为 <code>-</code> 时，会从标准输入中读取：</p>
<div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">cat</span> ~/.yutto_alias <span class="token operator">|</span> yutto rimuru-nikki <span class="token parameter variable">--batch</span> --alias-file -
</code></pre></div><h4>Cookies 设置</h4>
<ul>
<li>参数 <code>-c</code> 或 <code>--sessdata</code></li>
<li>默认值 <code>""</code></li>
</ul>
<p>设置 Cookies 后你才可以下载更高清晰度以及更多的剧集，当你传入你的大会员 <code>SESSDATA</code> 时（当然前提是你是大会员），你就可以下载大会员可访问的资源咯。</p>
<details><summary> SESSDATA 获取方式 </summary>
<p>这里用 Chrome 作为示例，其它浏览器请尝试类似方法。</p>
<p>首先，用你的帐号登录 B 站，然后随便打开一个 B 站网页，比如<a href="https://www.bilibili.com/" target="_blank" rel="noopener noreferrer">首页</a>。</p>
<p>按 F12 打开开发者工具，切换到 Network 栏，刷新页面，此时第一个加载的资源应该就是当前页面的 html，选中该资源，在右侧 「Request Headers」 中找到 「cookie」，在其中找到类似于 <code>SESSDATA=d8bc7493%2C2843925707%2C08c3e*81;</code> 的一串字符串，复制这里的 <code>d8bc7493%2C2843925707%2C08c3e*81</code>，这就是你需要的 <code>SESSDATA</code>。</p>
</details>
<p>另外，由于 SESSDATA 中可能有特殊符号，所以传入时你可能需要使用双引号来包裹</p>
<div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code>yutto <span class="token operator">&lt;</span>url<span class="token operator">&gt;</span> <span class="token parameter variable">-c</span> <span class="token string">"d8bc7493%2C2843925707%2C08c3e*81"</span>
</code></pre></div><p>当然，示例里的 SESSDATA 是无效的，请使用自己的 SESSDATA。</p>
<h4>不下载弹幕</h4>
<ul>
<li>参数 <code>--no-danmaku</code></li>
<li>默认值 <code>False</code></li>
</ul>
<h4>不下载字幕</h4>
<ul>
<li>参数 <code>--no-subtitle</code></li>
<li>默认值 <code>False</code></li>
</ul>
<h4>不显示颜色</h4>
<ul>
<li>参数 <code>--no-color</code></li>
<li>默认值 <code>False</code></li>
</ul>
<h4>启用 Debug 模式</h4>
<ul>
<li>参数 <code>--debug</code></li>
<li>默认值 <code>False</code></li>
</ul>
</details><details class="custom-container details"><summary class="custom-container-title">批量参数</summary><p>有些参数是只有批量下载时才可以使用的</p>
<h4>启用批量下载</h4>
<ul>
<li>参数 <code>-b</code> 或 <code>--batch</code></li>
<li>默认值 <code>False</code></li>
</ul>
<p>只需要 <code>yutto --batch &lt;url&gt;</code> 即可启用批量下载功能。</p>
<h4>选集</h4>
<ul>
<li>
<p>参数 <code>-p</code> 或 <code>--episodes</code></p>
</li>
<li>
<p>默认值 <code>^~$</code></p>
</li>
<li>
<p>参数 <code>-p</code> 或 <code>--episodes</code></p>
</li>
<li>
<p>默认值 <code>^~$</code>（也即全选）</p>
</li>
</ul>
<p>也就是选集咯，其语法是这样的</p>
<ul>
<li><code>&lt;p1&gt;</code> 单独下某一剧集
<ul>
<li>支持负数来选择倒数第几话</li>
<li>此外还可以使用 <code>^</code> 与 <code>$</code> 来分别代表 <code>1</code> 与 <code>-1</code></li>
</ul>
</li>
<li><code>&lt;p_start&gt;~&lt;p_end&gt;</code> 使用 <code>~</code> 可以连续选取</li>
<li><code>&lt;p1&gt;,&lt;p2&gt;,&lt;p3&gt;,...,&lt;pn&gt;</code> 使用 <code>,</code> 可以不连续选取</li>
</ul>
<p>emmm，直接看的话大概并不能知道我在说什么，所以我们通过几个小例子来了解其语法</p>
<div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># 假设要下载一个具有 24 话的番剧</span>
<span class="token comment"># 如果我们只想下载第 3 话，只需要这样</span>
yutto <span class="token operator">&lt;</span>url<span class="token operator">&gt;</span> <span class="token parameter variable">-b</span> <span class="token parameter variable">-p</span> <span class="token number">3</span>
<span class="token comment"># 那如果我想下载第 5 话到第 7 话呢，使用 `~` 可以连续选中</span>
yutto <span class="token operator">&lt;</span>url<span class="token operator">&gt;</span> <span class="token parameter variable">-b</span> <span class="token parameter variable">-p</span> <span class="token number">5</span>~7
<span class="token comment"># 那我想下载第 12 话和第 17 话又要怎么办？此时只需要 `,` 就可以将多个不连续的选集一起选中</span>
yutto <span class="token operator">&lt;</span>url<span class="token operator">&gt;</span> <span class="token parameter variable">-b</span> <span class="token parameter variable">-p</span> <span class="token number">12,17</span>
<span class="token comment"># 那我突然又想将刚才那些都选中了呢？还是使用 `,` 呀，将它们连在一起即可</span>
yutto <span class="token operator">&lt;</span>url<span class="token operator">&gt;</span> <span class="token parameter variable">-b</span> <span class="token parameter variable">-p</span> <span class="token number">3,5</span>~7,12,17
<span class="token comment"># 嗯，你已经把基本用法都了解过了，很简单吧～</span>
<span class="token comment"># 下面是一些语法糖，不了解也完全不会影响任何功能哒～</span>
<span class="token comment"># 那如果我只知道我想下载倒数第 3 话，而不想算倒数第三话是第几话应该怎么办？</span>
<span class="token comment"># 此时可以用负数哒～不过要注意的是，开头如果是 `-` 的话前面应该使用 `=`</span>
yutto <span class="token operator">&lt;</span>url<span class="token operator">&gt;</span> <span class="token parameter variable">-b</span> <span class="token parameter variable">-p</span><span class="token operator">=</span>-3
<span class="token comment"># 那么如果想下载最后一话你可能会想到 `-p=-1` 对吧？不过我内置了两个符号分别代表第一话（^）和最后一话（$）</span>
<span class="token comment"># 像下面这样就可以直接下载最后一话啦～</span>
yutto <span class="token operator">&lt;</span>url<span class="token operator">&gt;</span> <span class="token parameter variable">-b</span> <span class="token parameter variable">-p</span> $
<span class="token comment"># 所有语法都了解完啦，我们看一个稍微复杂的例子</span>
yutto <span class="token operator">&lt;</span>url<span class="token operator">&gt;</span> <span class="token parameter variable">-b</span> <span class="token parameter variable">-p</span> ^~3,10,12~14,16,-4~$
<span class="token comment"># 很明显，上面的例子就是下载前 3 话、第 10 话、第 12 到 14 话、第 16 话以及后 4 话</span>
</code></pre></div><p>下面是一些要注意的问题</p>
<ol>
<li>这里使用的序号是视频的顺序序号，而不是番剧所标注的<code>第 n 话</code>，因为有可能会出现 <code>第 x.5 话</code> 等等的特殊情况，此时一定要按照顺序自行计数。</li>
<li>参数值里一定不要加空格</li>
<li>参数值开头为 <code>-</code> 时前面应该使用 <code>=</code> 而非空格</li>
</ol>
<h4>同时下载附加剧集</h4>
<ul>
<li>参数 <code>-s</code> 或 <code>--with-section</code></li>
<li>默认值 <code>False</code></li>
</ul>
</details>]]></content>
    <category term="教程"/>
    <published>2021-08-23T00:00:00.000Z</published>
  </entry>
  <entry>
    <title type="text">Centos7上yum安装chrome</title>
    <id>https://vlssu.github.io/blogs/share/linux/chrome.html</id>
    <link href="https://vlssu.github.io/blogs/share/linux/chrome.html"/>
    <updated>2023-10-02T17:17:23.000Z</updated>
    <summary type="html"><![CDATA[<ol>
<li>配置yum源（root用户）
在目录 <code>/etc/yum.repos.d/</code> 下新建文件 <code>google-chrome.repo</code></li>
</ol>
<div class="language-text" data-ext="text" data-title="text"><pre class="language-text"><code>vim /etc/yum.repos.d/google-chrome.repo
</code></pre></div><p>写入如下内容:</p>
<div class="language-text" data-ext="text" data-title="text"><pre class="language-text"><code>[google-chrome]
name=google-chrome
baseurl=&lt;http://dl.google.com/linux/chrome/rpm/stable/$basearch&gt;
enabled=1
gpgcheck=1
gpgkey=&lt;https://dl-ssl.google.com/linux/linux_signing_key.pub&gt;
</code></pre></div>]]></summary>
    <content type="html"><![CDATA[<ol>
<li>配置yum源（root用户）
在目录 <code>/etc/yum.repos.d/</code> 下新建文件 <code>google-chrome.repo</code></li>
</ol>
<div class="language-text" data-ext="text" data-title="text"><pre class="language-text"><code>vim /etc/yum.repos.d/google-chrome.repo
</code></pre></div><p>写入如下内容:</p>
<div class="language-text" data-ext="text" data-title="text"><pre class="language-text"><code>[google-chrome]
name=google-chrome
baseurl=&lt;http://dl.google.com/linux/chrome/rpm/stable/$basearch&gt;
enabled=1
gpgcheck=1
gpgkey=&lt;https://dl-ssl.google.com/linux/linux_signing_key.pub&gt;
</code></pre></div><div class="custom-container tip"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8h.01"></path><path d="M11 12h1v4h1"></path></g></svg><p class="custom-container-title">TIP</p><p>1、按ESC退出编辑模式（回到命令模式）
2、输入 :wq!后按回车退出</p>
</div><ol start="2">
<li>安装chrome浏览器</li>
</ol>
<div class="language-text" data-ext="text" data-title="text"><pre class="language-text"><code>yum -y install google-chrome-stable --nogpgcheck
</code></pre></div><p><a href="https://download-chromium.appspot.com/?platform=Linux_x64&amp;type=snapshots" target="_blank" rel="noopener noreferrer">https://download-chromium.appspot.com/?platform=Linux_x64&amp;type=snapshots</a></p>
]]></content>
    <category term="Linux小知识"/>
    <published>2022-04-24T00:00:00.000Z</published>
  </entry>
  <entry>
    <title type="text">在Linux中安装Docker及Docker Compose</title>
    <id>https://vlssu.github.io/blogs/share/linux/docker.html</id>
    <link href="https://vlssu.github.io/blogs/share/linux/docker.html"/>
    <updated>2023-11-21T09:52:34.000Z</updated>
    <summary type="html"><![CDATA[<h2>安装 Docker</h2>
<div class="custom-container tip"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8h.01"></path><path d="M11 12h1v4h1"></path></g></svg><p class="custom-container-title">官方的一键脚本安装法</p>
</div>]]></summary>
    <content type="html"><![CDATA[<h2>安装 Docker</h2>
<div class="custom-container tip"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8h.01"></path><path d="M11 12h1v4h1"></path></g></svg><p class="custom-container-title">官方的一键脚本安装法</p>
</div><h3>Ubuntu</h3>
<div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">apt-get</span> update
<span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> docker.io
</code></pre></div><p>启动 Docker 服务（重要）</p>
<div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">service</span> <span class="token function">docker</span> start
</code></pre></div><br>
<h3>Centos</h3>
<p>Docker 要求 CentOS 系统的内核版本高于 3.10 ，通过 <code>uname -r</code> 命令查看你当前的内核版本。</p>
<div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code>yum update <span class="token parameter variable">-y</span>
yum <span class="token parameter variable">-y</span> <span class="token function">install</span> <span class="token function">docker</span>
</code></pre></div><p>启动 Docker 服务（重要）</p>
<div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">service</span> <span class="token function">docker</span> start
</code></pre></div><br>
<h3>Arch Linux</h3>
<div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># 安装 Docker</span>
pacman <span class="token parameter variable">-S</span> <span class="token function">docker</span>
<span class="token comment"># 启动 Docker</span>
systemctl start <span class="token function">docker</span>
<span class="token comment"># 开机启动 Docker</span>
systemctl <span class="token builtin class-name">enable</span> <span class="token function">docker</span>
<span class="token comment"># 关掉开机启动 Docker</span>
systemclt disable <span class="token function">docker</span>
</code></pre></div><p><br><br></p>
<h3>给予当前用户Docker权限 （强烈建议）</h3>
<div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment">#添加docker用户组</span>
<span class="token function">sudo</span> <span class="token function">groupadd</span> <span class="token function">docker</span>
<span class="token comment">#将当前用户加入该用户组</span>
<span class="token function">sudo</span> <span class="token function">usermod</span> <span class="token parameter variable">-aG</span> <span class="token function">docker</span> <span class="token environment constant">$USER</span>
</code></pre></div><p>可能需要重新登陆后生效。</p>
<h3>检查 Docker 环境是否正确（可选）</h3>
<p>查看是否已经安装，配好PATH路径，一般而言自动配好了。MCSManager 需要 Docker 命令必须能够执行，否则无法正确使用。</p>
<p>输出版本号即为正确。</p>
<div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">docker</span> version
</code></pre></div><h3>检查 Docker 是否能够运行（可选）</h3>
<p>运行 Hello world 程序（需要联网下载）。输出内容包含有 "Hello from Docker!" 则代表运行成功代表无问题。</p>
<div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">docker</span> run hello-world
</code></pre></div><h3>配置国内镜像源（可选，强烈建议做）</h3>
<div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">vi</span> /etc/docker/daemon.json 

<span class="token punctuation">{</span> 
<span class="token string">"registry-mirrors"</span><span class="token builtin class-name">:</span> <span class="token punctuation">[</span><span class="token string">"https://registry.docker-cn.com"</span><span class="token punctuation">]</span> 
<span class="token punctuation">}</span>
</code></pre></div><p>重启服务。</p>
<div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">service</span> <span class="token function">docker</span> restart
</code></pre></div><h3>开机自启docker</h3>
<div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code>systemctl <span class="token builtin class-name">enable</span> docker.service
<span class="token comment"># 设置开机自启</span>
systemctl disable docker.service
<span class="token comment"># 关闭开机自启</span>
</code></pre></div><h2>卸载 Docker</h2>
<ol>
<li>卸载docker</li>
</ol>
<div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># 搜索已经安装的docker 安装包</span>
yum list installed<span class="token operator">|</span><span class="token function">grep</span> <span class="token function">docker</span>  
<span class="token comment"># 删除安装包</span>
yum <span class="token parameter variable">-y</span> remove docker*
<span class="token comment"># 删除docker 镜像</span>
<span class="token function">rm</span> <span class="token parameter variable">-rf</span> /var/lib/docker
</code></pre></div><ol start="2">
<li>再次check docker是否已经卸载成功</li>
</ol>
<div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code>yum list installed<span class="token operator">|</span><span class="token function">grep</span> <span class="token function">docker</span> 或者 <span class="token function">rpm</span> -qa<span class="token operator">|</span><span class="token function">grep</span> <span class="token function">docker</span>  
</code></pre></div>]]></content>
    <category term="Linux小知识"/>
    <published>2020-03-03T00:00:00.000Z</published>
  </entry>
  <entry>
    <title type="text">在Linux上安装 Go</title>
    <id>https://vlssu.github.io/blogs/share/linux/go.html</id>
    <link href="https://vlssu.github.io/blogs/share/linux/go.html"/>
    <updated>2023-10-02T17:17:23.000Z</updated>
    <summary type="html"><![CDATA[<h3>下载 Go 压缩包</h3>
<p>在写这篇文章的时候，Go 的最新版为 1.18。在我们下载安装包时，请浏览<a href="https://yq.aliyun.com/go/articleRenderRedirect?url=https%3A%2F%2Fgolang.org%2Fdl%2F" target="_blank" rel="noopener noreferrer">Go 官方下载页面</a>,并且检查一下是否有新的版本可用。</p>
<p>以 root 或者其他 sudo 用户身份运行下面的命令，下载并且解压 Go 二进制文件到<code>/usr/local</code>目录：</p>]]></summary>
    <content type="html"><![CDATA[<h3>下载 Go 压缩包</h3>
<p>在写这篇文章的时候，Go 的最新版为 1.18。在我们下载安装包时，请浏览<a href="https://yq.aliyun.com/go/articleRenderRedirect?url=https%3A%2F%2Fgolang.org%2Fdl%2F" target="_blank" rel="noopener noreferrer">Go 官方下载页面</a>,并且检查一下是否有新的版本可用。</p>
<p>以 root 或者其他 sudo 用户身份运行下面的命令，下载并且解压 Go 二进制文件到<code>/usr/local</code>目录：</p>
<div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">wget</span> <span class="token parameter variable">-c</span> https://dl.google.com/go/go1.18.linux-amd64.tar.gz <span class="token parameter variable">-O</span> - <span class="token operator">|</span> <span class="token function">sudo</span> <span class="token function">tar</span> <span class="token parameter variable">-xz</span> <span class="token parameter variable">-C</span> /usr/local
</code></pre></div><h3>调整环境变量</h3>
<p>通过将 Go 目录添加到<code>$PATH</code>环境变量，系统将会知道在哪里可以找到 Go 可执行文件。</p>
<p>这个可以通过添加下面的行到<code>/etc/profile</code>文件（系统范围内安装）或者<code>$HOME/.profile</code>文件（当前用户安装）：</p>
<div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token builtin class-name">export</span> <span class="token assign-left variable"><span class="token environment constant">PATH</span></span><span class="token operator">=</span><span class="token environment constant">$PATH</span>:/usr/local/go/bin
<span class="token comment"># 保存文件，并且重新加载新的PATH 环境变量到当前的 shell 会话：</span>
<span class="token builtin class-name">source</span> ~/.profile
</code></pre></div><h3>验证 Go 安装过程</h3>
<p>通过打印 Go 版本号，验证安装过程。</p>
<div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code>go version
<span class="token comment"># 输出应该像下面这样：</span>
go version go1.18 linux/amd64
</code></pre></div>]]></content>
    <category term="Linux小知识"/>
    <published>2022-04-03T00:00:00.000Z</published>
  </entry>
  <entry>
    <title type="text">Linux常用指令指令</title>
    <id>https://vlssu.github.io/blogs/share/linux/instruction.html</id>
    <link href="https://vlssu.github.io/blogs/share/linux/instruction.html"/>
    <updated>2023-10-02T17:17:23.000Z</updated>
    <summary type="html"><![CDATA[<p>我会尽量将linux相关、实用的指令放在这里(算作笔记吧)，让我以后记不得指令时来着看看，如果有什么补充指令也可以评论告诉我哦，我会添加在正文里的</p>
<h2>复制指令</h2>
<div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">cp</span> <span class="token punctuation">[</span>options….<span class="token punctuation">]</span> source<span class="token punctuation">(</span>s<span class="token punctuation">)</span> destination
</code></pre></div>]]></summary>
    <content type="html"><![CDATA[<p>我会尽量将linux相关、实用的指令放在这里(算作笔记吧)，让我以后记不得指令时来着看看，如果有什么补充指令也可以评论告诉我哦，我会添加在正文里的</p>
<h2>复制指令</h2>
<div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">cp</span> <span class="token punctuation">[</span>options….<span class="token punctuation">]</span> source<span class="token punctuation">(</span>s<span class="token punctuation">)</span> destination
</code></pre></div>]]></content>
    <category term="Linux小知识"/>
    <published>2020-05-06T00:00:00.000Z</published>
  </entry>
  <entry>
    <title type="text">如何在Linux系统中安装Java8</title>
    <id>https://vlssu.github.io/blogs/share/linux/java8.html</id>
    <link href="https://vlssu.github.io/blogs/share/linux/java8.html"/>
    <updated>2023-10-02T17:17:23.000Z</updated>
    <summary type="html"><![CDATA[<h2>Centos</h2>
<p>使用<code>yum</code>安装<code>java8</code>。</p>
<ol>
<li>查看<code>java</code>版本库</li>
</ol>
<div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code>yum search <span class="token function">java</span> <span class="token operator">|</span> <span class="token function">grep</span> jdk
<span class="token comment"># 这里选择Java8</span>
yum <span class="token function">install</span> java-1.8.0-openjdk java-1.8.0-openjdk-devel
</code></pre></div>]]></summary>
    <content type="html"><![CDATA[<h2>Centos</h2>
<p>使用<code>yum</code>安装<code>java8</code>。</p>
<ol>
<li>查看<code>java</code>版本库</li>
</ol>
<div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code>yum search <span class="token function">java</span> <span class="token operator">|</span> <span class="token function">grep</span> jdk
<span class="token comment"># 这里选择Java8</span>
yum <span class="token function">install</span> java-1.8.0-openjdk java-1.8.0-openjdk-devel
</code></pre></div><details class="custom-container details"><summary class="custom-container-title">在新的编译版本可以不用配置了，但旧版可能还是需要配置</summary><p>安装完毕后如下图，需复制图中箭头指向的名称，<code>java8</code>完整版本名称。后面设置环境变量会用到。</p>
<p></p>
<ol start="2">
<li>查看<code>java8</code>安装位置 # (Centos)</li>
</ol>
<p>通过此方法安装的java放在固定位置</p>
<div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code>ll /usr/lib/jvm
</code></pre></div><p></p>
<ol start="3">
<li>设置环境变量 # (Centos)</li>
</ol>
<div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">vi</span> /etc/profile
</code></pre></div><p>编辑该文件，在末尾加上如下内容：（jdk版本需自行填写，上面复制的版本）</p>
<div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment">#set java environment</span>
<span class="token assign-left variable">JAVA_HOME</span><span class="token operator">=</span>/user/lib/jvm/java-1.8.0-openjdk-1.8.0.232.b09-0.el7_7.x86_64
<span class="token assign-left variable">JRE_HOME</span><span class="token operator">=</span><span class="token variable">$JAVA_HOME</span>/jre
<span class="token assign-left variable">CLASS_PATH</span><span class="token operator">=</span>.:<span class="token variable">$JAVA_HOME</span>/lib/dt.jar:<span class="token variable">$JAVA_HOME</span>/lib/tools.jar:<span class="token variable">$JRE_HOME</span>/lib
<span class="token assign-left variable"><span class="token environment constant">PATH</span></span><span class="token operator">=</span><span class="token environment constant">$PATH</span><span class="token builtin class-name">:</span><span class="token variable">$JAVA_HOME</span>/bin:<span class="token variable">$JRE_HOME</span>/bin
<span class="token builtin class-name">export</span> JAVA_HOME JRE_HOME CLASS_PATH <span class="token environment constant">PATH</span>
</code></pre></div><p>按“i”键进行编辑，退出先按“ESC”然后“:”</p>
<ul>
<li>:q 是直接退出</li>
<li>:wq 保存后退出</li>
<li>:q! – 不保存内容， 强制退出</li>
</ul>
<ol start="4">
<li>刷新配置，使其生效 # (Centos)</li>
</ol>
<div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token builtin class-name">source</span> /etc/profile
</code></pre></div></details><ol start="5">
<li>查看<code>java</code>版本</li>
</ol>
<div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">java</span> <span class="token parameter variable">-version</span>
</code></pre></div><p>如下图则安装成功。</p>
<p></p>
<h2>Ubuntu</h2>
<ol>
<li>安装<code>java8</code></li>
</ol>
<div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">apt</span> <span class="token function">install</span> openjdk-8-jdk
</code></pre></div><ol start="2">
<li>如果我们在服务器上安装了多个Java版本，我们可以使用<b>update-alternatives</b>系统更改默认版本</li>
</ol>
<div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">sudo</span> update-alternatives <span class="token parameter variable">--config</span> <span class="token function">java</span>
</code></pre></div><p>要维持当前值[*]请按&lt;回车键&gt;，或者键入选择的编号：<br>
在出现提示时输入号码并按Enter键。</p>
<ol start="3">
<li>查看<code>java</code>版本</li>
</ol>
<div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">java</span> <span class="token parameter variable">-version</span>
</code></pre></div><h2>Debian</h2>
<ol>
<li>首先去官网去下载所需要的jdk包 <a href="http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html" target="_blank" rel="noopener noreferrer">点击我跳转</a></li>
</ol>
<p></p>
<p>没有的注册一个就好了，下载过程可能有些缓慢，慢慢等待就好</p>
<details class="custom-container details"><summary class="custom-container-title">博主的一些小提示</summary><ul>
<li>上面的方法是下载到本地再上传到服务器，这个方法速度很慢且中间需要你再手动上传到服务器</li>
<li>在你点击登录时会直接帮你跳转进行下载，他会给你一个链接，你只要把链接复制下来使用wget即可</li>
</ul>
<div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">wget</span> https://download.oracle.com/otn/java/jdk/8u261-b12/a4634525489241b9a9e1aa73d9e118e6/jdk-8u261-linux-x64.tar.gz?AuthParam<span class="token operator">=</span>1601534459_d2b72ea23c956e47cd64c8b8dc5d868b
<span class="token comment"># 需要注意此链接不是永久性的，原因自行网上查阅</span>
<span class="token function">mv</span> jdk-8u261-linux-x64.tar.gz?AuthParam<span class="token operator">=</span>1601534459_d2b72ea23c956e47cd64c8b8dc5d868b jdk-8u261-linux-x64.tar.gz
<span class="token comment"># 再将名称进行更改成正常的名称</span>
</code></pre></div></details><ol start="2">
<li>解压并放置所需目录中</li>
</ol>
<div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">mkdir</span> /usr/lib/jvm
<span class="token comment"># 创建目录</span>
<span class="token function">tar</span> zxvf jdk-8u261-linux-x64.tar.gz <span class="token parameter variable">-C</span> /usr/lib/jvm
<span class="token comment"># 解压至上面的目录中[请注意文件名称，需自行修改]</span>
</code></pre></div><ol start="3">
<li>设置环境变量</li>
</ol>
<div class="language-text" data-ext="text" data-title="text"><pre class="language-text"><code>nano ~/.bashrc
</code></pre></div><p>编辑该文件，在末尾加上如下内容：（jdk版本需自行填写，上面我所说的地方）</p>
<div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token builtin class-name">export</span> <span class="token assign-left variable">JAVA_HOME</span><span class="token operator">=</span>/usr/lib/jvm/jdk1.8.0_261
<span class="token builtin class-name">export</span> <span class="token assign-left variable">JRE_HOME</span><span class="token operator">=</span><span class="token variable">${JAVA_HOME}</span>/jre
<span class="token builtin class-name">export</span> <span class="token assign-left variable">CLASSPATH</span><span class="token operator">=</span>.:<span class="token variable">${JAVA_HOME}</span>/lib:<span class="token variable">${JRE_HOME}</span>/lib
<span class="token builtin class-name">export</span> <span class="token assign-left variable"><span class="token environment constant">PATH</span></span><span class="token operator">=</span><span class="token variable">${JAVA_HOME}</span>/bin:<span class="token environment constant">$PATH</span>
</code></pre></div><p>直接就可以编辑，<code>Ctrl+X</code>退出，它会提示是否需要保存，按<code>Y</code>即可，再按回车即可完成</p>
<ol start="4">
<li>查看<code>java</code>版本</li>
</ol>
<div class="custom-container tip"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8h.01"></path><path d="M11 12h1v4h1"></path></g></svg><p class="custom-container-title">重要！</p><p>请退出终端重新进入终端即可生效/查看<code>java</code>，或者你重启服务器是一个操作</p>
<div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">java</span> <span class="token parameter variable">-version</span>
</code></pre></div></div>]]></content>
    <category term="Linux小知识"/>
    <published>2020-04-21T00:00:00.000Z</published>
  </entry>
  <entry>
    <title type="text">Linux系统如何安装node管理器</title>
    <id>https://vlssu.github.io/blogs/share/linux/node.html</id>
    <link href="https://vlssu.github.io/blogs/share/linux/node.html"/>
    <updated>2023-10-02T17:17:23.000Z</updated>
    <summary type="html"><![CDATA[<ol>
<li>安装github</li>
</ol>
<div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code>yum <span class="token function">install</span> <span class="token function">git</span> <span class="token parameter variable">-y</span> <span class="token comment"># (Centos)</span>
<span class="token function">apt</span> <span class="token function">install</span> <span class="token function">git</span> <span class="token comment"># (Ubuntu)</span>
</code></pre></div>]]></summary>
    <content type="html"><![CDATA[<ol>
<li>安装github</li>
</ol>
<div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code>yum <span class="token function">install</span> <span class="token function">git</span> <span class="token parameter variable">-y</span> <span class="token comment"># (Centos)</span>
<span class="token function">apt</span> <span class="token function">install</span> <span class="token function">git</span> <span class="token comment"># (Ubuntu)</span>
</code></pre></div><ol start="2">
<li>安装node.js管理器等组件</li>
</ol>
<div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">git</span> clone https://github.com/creationix/nvm.git ~/nvm
<span class="token comment"># 设置nvm 自动运行</span>
<span class="token builtin class-name">echo</span> <span class="token string">"source ~/nvm/nvm.sh"</span> <span class="token operator">&gt;&gt;</span> ~/.bashrc
<span class="token builtin class-name">source</span> ~/.bashrc
<span class="token comment"># 查看所有版本(部分环境可能不支持最高版本)</span>
nvm list-remote
<span class="token comment"># 安装npm的最新版本</span>
nvm <span class="token function">install</span> stable
<span class="token comment"># 使用最新版本</span>
nvm use stable
</code></pre></div><h2>使用国内镜像</h2>
<ul>
<li>对于国内而言，访问外网是很困难的，这会导致访问速度很慢，而国内镜像就很重要了</li>
</ul>
<h3>node 国内镜像</h3>
<div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token builtin class-name">export</span> <span class="token assign-left variable">NVM_NODEJS_ORG_MIRROR</span><span class="token operator">=</span>https://npmmirror.com/mirrors/node
</code></pre></div><h3>npm 国内镜像</h3>
<div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">npm</span> config <span class="token builtin class-name">set</span> registry https://registry.npmmirror.com
</code></pre></div><h3>npm WIN 国内镜像源</h3>
<div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">npm</span> config <span class="token builtin class-name">set</span> registry https://registry.npmmirror.com <span class="token parameter variable">--global</span>
<span class="token function">npm</span> config <span class="token builtin class-name">set</span> disturl https://npmmirror.com/mirrors/node <span class="token parameter variable">--global</span>
</code></pre></div>]]></content>
    <category term="Linux小知识"/>
    <published>2020-05-03T00:00:00.000Z</published>
  </entry>
  <entry>
    <title type="text">在Ubuntu如何安装Python3.9（Ubuntu 20.04）</title>
    <id>https://vlssu.github.io/blogs/share/linux/python3.9.html</id>
    <link href="https://vlssu.github.io/blogs/share/linux/python3.9.html"/>
    <updated>2023-10-02T17:17:23.000Z</updated>
    <summary type="html"><![CDATA[<p>由于现在新项目都需要3.9，3.8及一下都不支持，然后我由想在win上直接弄，方便，所以需要在Ubuntu 20.04单独安装Python3.9环境教程。</p>
<blockquote>
<p>这玩意比win环境的<code>Python</code>好使多了</p>
</blockquote>
<h2>简洁安装</h2>
<div class="language-text" data-ext="text" data-title="text"><pre class="language-text"><code>sudo apt update
sudo apt install software-properties-common
</code></pre></div>]]></summary>
    <content type="html"><![CDATA[<p>由于现在新项目都需要3.9，3.8及一下都不支持，然后我由想在win上直接弄，方便，所以需要在Ubuntu 20.04单独安装Python3.9环境教程。</p>
<blockquote>
<p>这玩意比win环境的<code>Python</code>好使多了</p>
</blockquote>
<h2>简洁安装</h2>
<div class="language-text" data-ext="text" data-title="text"><pre class="language-text"><code>sudo apt update
sudo apt install software-properties-common
</code></pre></div><blockquote>
<p>安装需要的源，然后我们添加到列表包。</p>
</blockquote>
<div class="language-text" data-ext="text" data-title="text"><pre class="language-text"><code>sudo add-apt-repository ppa:deadsnakes/ppa
</code></pre></div><blockquote>
<p>中途会提示你要按键盘上的回车键，然后你需要等会一会，他可能会卡一下</p>
</blockquote>
<blockquote>
<p>然后我们直接安装</p>
</blockquote>
<div class="language-text" data-ext="text" data-title="text"><pre class="language-text"><code>sudo apt install python3.9
</code></pre></div><blockquote>
<p>然后我们检查版本</p>
</blockquote>
<div class="language-text" data-ext="text" data-title="text"><pre class="language-text"><code>python3.9 --version
</code></pre></div><blockquote>
<p>注意，之后所有指令都是按照这个后面带3.9的</p>
</blockquote>
<h3>安装pip</h3>
<blockquote>
<p>记得root一下</p>
</blockquote>
<div class="language-text" data-ext="text" data-title="text"><pre class="language-text"><code>curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py
python3.9 get-pip.py
</code></pre></div><h2>下载源码编译安装</h2>
<h3>一、安装环境编译包</h3>
<div class="language-text" data-ext="text" data-title="text"><pre class="language-text"><code>sudo apt update
sudo apt install build-essential zlib1g-dev libncurses5-dev libgdbm-dev libnss3-dev libssl-dev libreadline-dev libffi-dev libsqlite3-dev wget libbz2-dev
</code></pre></div><h3>二、下载最新python软件包</h3>
<div class="language-text" data-ext="text" data-title="text"><pre class="language-text"><code>cd /opt
sudo wget https://www.python.org/ftp/python/3.9.6/Python-3.9.6.tgz
</code></pre></div><h3>三、编译安装</h3>
<div class="language-text" data-ext="text" data-title="text"><pre class="language-text"><code>cd Python3.9.6/

./configure --prefix=/usr/local/python3  # pip3使用ssl

#编译
make

#安装
sudo make install
</code></pre></div>]]></content>
    <category term="Linux小知识"/>
    <published>2021-08-21T00:00:00.000Z</published>
  </entry>
  <entry>
    <title type="text">如何关闭Linux里面的SElinux</title>
    <id>https://vlssu.github.io/blogs/share/linux/selinux.html</id>
    <link href="https://vlssu.github.io/blogs/share/linux/selinux.html"/>
    <updated>2023-10-02T17:17:23.000Z</updated>
    <summary type="html"><![CDATA[<h2>临时生效</h2>
<p>命令临时生效：</p>
<div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code>setenforce <span class="token number">0</span> <span class="token punctuation">(</span>临时生效可以直接用setenforce <span class="token number">0</span> <span class="token punctuation">)</span>
            <span class="token number">1</span> 启用
            <span class="token number">0</span> 告警，不启用
</code></pre></div>]]></summary>
    <content type="html"><![CDATA[<h2>临时生效</h2>
<p>命令临时生效：</p>
<div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code>setenforce <span class="token number">0</span> <span class="token punctuation">(</span>临时生效可以直接用setenforce <span class="token number">0</span> <span class="token punctuation">)</span>
            <span class="token number">1</span> 启用
            <span class="token number">0</span> 告警，不启用
</code></pre></div><h2>永久生效</h2>
<h3>查看SElinux状态</h3>
<div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code>getenforce

//Enforcing - 开启模式
//Permissive - 临时关闭模式
//Disabled - 永久关闭模式
</code></pre></div><h3>永久关闭</h3>
<div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">vi</span> /etc/sysconfig/selinux
<span class="token assign-left variable">SELINUX</span><span class="token operator">=</span>enforcing 改为 <span class="token assign-left variable">SELINUX</span><span class="token operator">=</span>disabled
:wq    //保存
</code></pre></div><p><strong>更改好后重启服务器</strong></p>
]]></content>
    <category term="Linux小知识"/>
    <published>2020-03-05T00:00:00.000Z</published>
  </entry>
  <entry>
    <title type="text">如何开官方bds服务器</title>
    <id>https://vlssu.github.io/blogs/share/minecraft/bds-server.html</id>
    <link href="https://vlssu.github.io/blogs/share/minecraft/bds-server.html"/>
    <updated>2023-10-02T17:17:23.000Z</updated>
    <summary type="html"><![CDATA[<h2>前期需要软件</h2>
<ol>
<li>远程SSH控制台软件（本教程使用 Remote Terminal 此为win10商店软件）<a href="https://www.lanzoui.com/i88wyvi" target="_blank" rel="noopener noreferrer">[点我下载(此软件为Xshell)]</a></li>
<li>支持Sftp的FTP软件（本教程使用 FileZilla）<a href="https://www.lanzoui.com/i88wyqd" target="_blank" rel="noopener noreferrer">[点我下载]</a></li>
<li>服务端（本教程使用 官方bds服务端）</li>
<li>Centos或Ubuntu主机一台 （教程使用 centos7.9，但建议直接使用Ubuntu）</li>
</ol>]]></summary>
    <content type="html"><![CDATA[<h2>前期需要软件</h2>
<ol>
<li>远程SSH控制台软件（本教程使用 Remote Terminal 此为win10商店软件）<a href="https://www.lanzoui.com/i88wyvi" target="_blank" rel="noopener noreferrer">[点我下载(此软件为Xshell)]</a></li>
<li>支持Sftp的FTP软件（本教程使用 FileZilla）<a href="https://www.lanzoui.com/i88wyqd" target="_blank" rel="noopener noreferrer">[点我下载]</a></li>
<li>服务端（本教程使用 官方bds服务端）</li>
<li>Centos或Ubuntu主机一台 （教程使用 centos7.9，但建议直接使用Ubuntu）</li>
</ol>
<h2>注意事项</h2>
<ol>
<li>极力推荐Ubuntu系统，Centos需要另需环境。</li>
<li>不支持 <strong>Windows Server 2012</strong> 及以下版本，要使用 <strong>Windows 10</strong> （可行）或者 <strong>Windows Server 2016</strong> 及以上版本运行</li>
<li>我的世界基岩版端口为 <strong>UDP协议的19132</strong> 端口，如果使用其他端口请在配置文件中设置成其他端口</li>
<li>请开放端口为 <strong>UDP协议的19132</strong> 端口，基岩版需要他进行通信(<strong>列如阿里云、腾讯云需去安全组进行开放端口</strong>) [若是虚拟机请改成其他端口，VPS运营商一般是不会给你常用端口的]</li>
</ol>
<h2>Windows开服</h2>
<ol>
<li>首先我们去Minecraft官方下载最新服务端</li>
</ol>
<ul>
<li><a href="https://www.minecraft.net/zh-hans/download/server/bedrock/" target="_blank" rel="noopener noreferrer">[前往官网]</a></li>
<li>点击左边的<strong>Windows版</strong>并<strong>同意协议</strong>下载
</li>
</ul>
<ol start="2">
<li>解压后双击「bedrock_server.exe」文件即可</li>
<li>下面就是需要内网穿透软件等来实现了(需要UDP协议)，但这个最好去找ECS或VPS租用服务器比较好</li>
</ol>
<h2>Centos开服</h2>
<ol>
<li>首先我们去Minecraft官方下载最新服务端</li>
</ol>
<ul>
<li><a href="https://www.minecraft.net/zh-hans/download/server/bedrock/" target="_blank" rel="noopener noreferrer">[前往官网]</a></li>
<li>点击右边的<strong>Ubuntu版</strong>并<strong>同意协议</strong>下载
</li>
</ul>
<ol start="2">
<li>我们需要安装一些环境解压和下载所需程序</li>
</ol>
<div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code>yum <span class="token function">install</span> <span class="token function">wget</span> <span class="token function">unzip</span> <span class="token parameter variable">-y</span>
</code></pre></div><ol start="3">
<li>将我们<strong>第一步</strong>下载的整合包下载下来并解压</li>
</ol>
<div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">wget</span> <span class="token parameter variable">-c</span> https://minecraft.azureedge.net/bin-linux/bedrock-server-1.18.12.01.zip
<span class="token comment"># 注意这可能不是最新的，具体怎么获得链接可以查看我第一步</span>
<span class="token function">unzip</span> <span class="token parameter variable">-q</span> bedrock-server-1.18.12.01.zip <span class="token parameter variable">-d</span> /opt/bds
<span class="token comment"># 解压文件名请注意刚才的下载链接后缀</span>
<span class="token comment"># 解压文件至 /opt/bds 目录下</span>
</code></pre></div><ol start="4">
<li>下载Docker来作为环境依赖</li>
</ol>
<div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code>yum <span class="token function">install</span> <span class="token parameter variable">-y</span> yum-utils device-mapper-persistent-data lvm2
<span class="token comment"># 下载所需环境包</span>
yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo
yum <span class="token function">install</span> docker-ce docker-ce-cli containerd.io <span class="token parameter variable">-y</span>
<span class="token comment"># 使用阿里云Docker镜像源安装docker</span>
systemctl start docker.service
<span class="token comment"># 启动Docker</span>
<span class="token function">docker</span> pull ubuntu
<span class="token comment"># 拉取ubutu的镜像，如果不放心可以运行 </span>
<span class="token function">docker</span> images
<span class="token comment"># 来查看是否拉取</span>
<span class="token function">docker</span> run <span class="token parameter variable">-dit</span> <span class="token parameter variable">-p</span> <span class="token number">19132</span>:19132/udp <span class="token parameter variable">-v</span> /opt/bds:/opt/bds <span class="token parameter variable">--name</span><span class="token operator">=</span>bds <span class="token parameter variable">--restart</span><span class="token operator">=</span>always ubuntu:latest /bin/bash
<span class="token comment"># 使用Ubuntu镜像创建一个名为 bds 的容器并映射 /opt/bds 目录</span>
<span class="token function">docker</span> <span class="token function">ps</span>
<span class="token comment"># 查看是否正常运行</span>
</code></pre></div><ol start="5">
<li>进入Docker容器的终端进行接下来的操作</li>
</ol>
<div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">docker</span> <span class="token builtin class-name">exec</span> <span class="token parameter variable">-it</span> bds /bin/bash
</code></pre></div><ol start="6">
<li>启动服务器</li>
</ol>
<div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> /opt/bds
<span class="token comment"># cd到第2步解压的位置</span>
<span class="token assign-left variable">LD_LIBRARY_PATH</span><span class="token operator">=</span>. ./bedrock_server
<span class="token comment"># 运行启动指令</span>
</code></pre></div><h2>Ubuntu开服</h2>
<ol>
<li>首先我们去Minecraft官方下载最新服务端</li>
</ol>
<ul>
<li><a href="https://www.minecraft.net/zh-hans/download/server/bedrock/" target="_blank" rel="noopener noreferrer">[前往官网]</a></li>
<li>点击右边的<strong>Ubuntu版</strong>并<strong>同意协议</strong>下载
</li>
</ul>
<ol start="2">
<li>我们需要安装一些环境解压和下载所需程序</li>
</ol>
<div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">apt-get</span> update <span class="token comment">#先更新系统(如果出现问题安装失败的话)</span>
<span class="token function">apt-get</span> <span class="token function">install</span> <span class="token function">zip</span> <span class="token function">unzip</span> <span class="token function">wget</span> <span class="token parameter variable">-y</span>
</code></pre></div><ol start="3">
<li>将我们<strong>第一步</strong>下载的整合包下载下来并解压</li>
</ol>
<div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">wget</span> <span class="token parameter variable">-c</span> https://minecraft.azureedge.net/bin-linux/bedrock-server-1.18.12.01.zip
<span class="token comment"># 注意这可能不是最新的，具体怎么获得链接可以查看我第一步</span>
<span class="token function">unzip</span> <span class="token parameter variable">-q</span> bedrock-server-1.18.12.01.zip
<span class="token comment"># 解压文件名请注意刚才的下载链接后缀</span>
</code></pre></div><ol start="4">
<li>启动服务器</li>
</ol>
<div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code>./bedrock_server
</code></pre></div><h3>保持后台运行</h3>
<p>先<code>stop</code>关闭服务器，我们使用screen软件来让服务器保持后台运行。</p>
<div class="language-text" data-ext="text" data-title="text"><pre class="language-text"><code>apt install screen
# 创建一个名为 bds 的窗口
screen -S bds
# 在此新终端窗口内启动服务器
./bedrock_server
</code></pre></div>]]></content>
    <category term="教程"/>
    <published>2020-04-05T00:00:00.000Z</published>
  </entry>
  <entry>
    <title type="text">制作我的世界纯净/插件/模组服务端</title>
    <id>https://vlssu.github.io/blogs/share/minecraft/java-server.html</id>
    <link href="https://vlssu.github.io/blogs/share/minecraft/java-server.html"/>
    <updated>2023-10-02T17:17:23.000Z</updated>
    <summary type="html"><![CDATA[<h2>本教程所需条件</h2>
<h3>下载对应的服务端核心</h3>
<ul>
<li><a href="https://getbukkit.org/download/spigot" target="_blank" rel="noopener noreferrer">Spigot</a> [可以装插件]</li>
<li><a href="https://papermc.io/downloads" target="_blank" rel="noopener noreferrer">paper</a> [可以装插件]</li>
<li><a href="https://files.minecraftforge.net" target="_blank" rel="noopener noreferrer">Forge</a> [可以装MOD]</li>
</ul>]]></summary>
    <content type="html"><![CDATA[<h2>本教程所需条件</h2>
<h3>下载对应的服务端核心</h3>
<ul>
<li><a href="https://getbukkit.org/download/spigot" target="_blank" rel="noopener noreferrer">Spigot</a> [可以装插件]</li>
<li><a href="https://papermc.io/downloads" target="_blank" rel="noopener noreferrer">paper</a> [可以装插件]</li>
<li><a href="https://files.minecraftforge.net" target="_blank" rel="noopener noreferrer">Forge</a> [可以装MOD]</li>
</ul>
<h3>JAVA8下载</h3>
<ul>
<li>Linux系统可以参考我的上期教程<a href="/blogs/share/linux/node.html#%E5%AE%89%E8%A3%85java8" target="_blank"><strong>[我的世界MCSM面板搭建]</strong></a></li>
<li>Win系统下载最新的JAVA8地址 <a href="https://en.vessoft.com/software/windows/download/java" target="_blank" rel="noopener noreferrer">[点我下载]</a></li>
</ul>
<h2>配置服务器</h2>
<h3>插件端</h3>
<ul>
<li>本教程使用<strong>Spigot</strong>核心，其他核心原理基本一样</li>
</ul>
<ol>
<li>下载服务端核心</li>
</ol>
<ul>
<li><a href="https://getbukkit.org/download/spigot" target="_blank" rel="noopener noreferrer">Spigot</a></li>
<li><a href="https://yivesmirror.com/downloads/paper" target="_blank" rel="noopener noreferrer">paper</a></li>
</ul>
<ol start="2">
<li>新建「记事本」，在记事本中输入以下内容并改名为<code>.bat</code>后缀后启动。</li>
</ol>
<ul>
<li>注意<code>Minecraft_Server.jar</code>换成你下载下来的核心文件名。</li>
<li>第一次可能会有点慢，他需要加载文件等</li>
</ul>
<div class="language-bat" data-ext="bat" data-title="bat"><pre class="language-bat"><code>java -Xmx1024M -jar Minecraft_Server.jar nogui
</code></pre></div><p>当他自动关闭窗口文件夹呈现以下<br>
</p>
<ol start="3">
<li>编辑「eula.txt」文件，将<code>eula=false</code>设置为<code>eula=true</code></li>
</ol>
<p></p>
<ol start="4">
<li>在此双击运行<code>.bat</code>文件，但你看到下面的视图，那么就代表你成功了！</li>
</ol>
<p></p>
<ol start="5">
<li>在<code>server.properties</code>文件中你可能有些需要改的地方(改完记得重启)</li>
</ol>
<div class="language-properties" data-ext="properties" data-title="properties"><pre class="language-properties"><code><span class="token key attr-name">gamemode</span><span class="token punctuation">=</span><span class="token value attr-value">survival  //游戏模式 0=生存 1=创造 2=冒险 3=旁观</span>
<span class="token key attr-name">difficulty</span><span class="token punctuation">=</span><span class="token value attr-value">easy  //难度0=和平 1=简单 2=普通 3=困难</span>
<span class="token key attr-name">max-players</span><span class="token punctuation">=</span><span class="token value attr-value">20  //服务器最大玩家数限制</span>
<span class="token key attr-name">server-port</span><span class="token punctuation">=</span><span class="token value attr-value">25565  //服务器端口</span>
<span class="token key attr-name">online-mode</span><span class="token punctuation">=</span><span class="token value attr-value">true  //在线（正版）验证[默认启用]</span>
</code></pre></div><h4>给服务器加插件</h4>
<ol>
<li>去插件网站下载你需要的插件。</li>
</ol>
<ul>
<li><a href="https://dev.bukkit.org" target="_blank" rel="noopener noreferrer">bukkit</a></li>
<li><a href="https://www.spigotmc.org" target="_blank" rel="noopener noreferrer">spigotmc</a></li>
</ul>
<ol start="2">
<li>下载你需要的插件放入<code>plugins</code>，就可以了，对于怎么配置插件，在<code>plugins</code>文件夹中，会有与插件相同名字的文件夹，那里面的<code>config.yml</code>文件就是插件的配置文件，这里不过多讲述了，毕竟这个帮不了什么。</li>
</ol>
<h3>MOD端</h3>
<ol>
<li>首先去Forge官网，下载核心，这里以1.12.2版本作为示范。</li>
</ol>
<ul>
<li><a href="https://files.minecraftforge.net" target="_blank" rel="noopener noreferrer">Forge</a></li>
</ul>
<p>
</p>
<ol start="2">
<li>下载官方核心去<a href="https://minecraft-zh.gamepedia.com/Java%E7%89%88%E7%89%88%E6%9C%AC%E8%AE%B0%E5%BD%95" target="_blank" rel="noopener noreferrer">我的世界Wiki百科</a>中选择你的想要的版本点击他后右侧下载服务端</li>
</ol>
<p>
</p>
<ol start="3">
<li>将下载好的forge和服务端放在同一个目录下，修改服务端的文件名.</li>
</ol>
<div class="language-text" data-ext="text" data-title="text"><pre class="language-text"><code>minecraft_server.xxx.jar   //xxx为版本号
</code></pre></div><ul>
<li>并新建「记事本」，在记事本中输入以下内容并改名为<code>.bat</code>后缀后启动。</li>
<li><strong>安装过程中会下载一些依赖库，由于某些原因可能会下载失败，多安装几次就行</strong></li>
</ul>
<div class="language-bat" data-ext="bat" data-title="bat"><pre class="language-bat"><code>java -jar forge安装包文件名.jar --install
</code></pre></div><p>
</p>
<p>但他可能直接关闭窗口，查看<code>forge-xxx-installer.jar.log</code>文件日志的最后一行是否是<code>The server installed successfully, you should now be able to run the file forge</code>,是的话，就证明你安装成功了。</p>
<div class="custom-container tip"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8h.01"></path><path d="M11 12h1v4h1"></path></g></svg><p class="custom-container-title">来自博主的热心帮助</p><ul>
<li><strong>在这里<code>libraries</code>依赖库可以下载我下载好的<a href="https://vlssu.lanzoui.com/b0f1ate3i" target="_blank" rel="noopener noreferrer">[蓝奏云下载地址]</a>（可省去大把时间）【注意这个只支持20年4月12日左右的依赖】</strong></li>
<li>因尝试无法全版本通用，最好挂梯子下（并结合日志将未下载成功的单独下）</li>
</ul>
</div><ol start="4">
<li>编辑「记事本」，在记事本中输入以下内容后启动。</li>
</ol>
<ul>
<li>你可能注意到多出了一个核心将下面的<code>forge-xxx.jar</code>替换成多出来的那个核心文件名。</li>
<li>注意，一开始下的<strong>installer</strong>文件没有用了，多来的<code>forge-xxx.jar</code>是Forge服务器真正的核心</li>
<li>第一次可能会有点慢，他需要加载文件等</li>
</ul>
<div class="language-bat" data-ext="bat" data-title="bat"><pre class="language-bat"><code>java -Xmx3G -jar forge-xxx.jar nogui
</code></pre></div><p>当他自动关闭窗口文件夹呈现以下<br>
</p>
<ol start="5">
<li>编辑「eula.txt」文件，将<code>eula=false</code>设置为<code>eula=true</code></li>
</ol>
<p></p>
<ol start="6">
<li>在此双击运行<code>.bat</code>文件，但你看到下面的视图，那么就代表你成功了！</li>
</ol>
<p></p>
<ol start="7">
<li>在<code>server.properties</code>文件中你可能有些需要改的地方(改完记得重启)</li>
</ol>
<div class="language-properties" data-ext="properties" data-title="properties"><pre class="language-properties"><code><span class="token key attr-name">gamemode</span><span class="token punctuation">=</span><span class="token value attr-value">survival  //游戏模式 0=生存 1=创造 2=冒险 3=旁观</span>
<span class="token key attr-name">difficulty</span><span class="token punctuation">=</span><span class="token value attr-value">easy  //难度0=和平 1=简单 2=普通 3=困难</span>
<span class="token key attr-name">max-players</span><span class="token punctuation">=</span><span class="token value attr-value">20  //服务器最大玩家数限制</span>
<span class="token key attr-name">server-port</span><span class="token punctuation">=</span><span class="token value attr-value">25565  //服务器端口</span>
<span class="token key attr-name">online-mode</span><span class="token punctuation">=</span><span class="token value attr-value">true  //在线（正版）验证[默认启用]</span>
</code></pre></div><h4>给服务器加MOD</h4>
<ol>
<li>去MOD网站下载你需要的MOD。</li>
</ol>
<ul>
<li><a href="https://www.curseforge.com/minecraft/modpacks" target="_blank" rel="noopener noreferrer">curseforge</a></li>
</ul>
<ol start="2">
<li>下载你需要的插件放入<code>mods</code>，就可以了，对于怎么配置<strong>MOD</strong>呢，在<code>config</code>文件夹中，会有与MOD相同名字的文件或文件夹，当然你也可以不用配置默认即可，这里不过多讲述了，毕竟这个帮不了什么。</li>
</ol>
<h3>Fabric端</h3>
<ol>
<li>首先去Fabric官网，下载核心，这里以1.15.2版本作为示范。</li>
</ol>
<ul>
<li><a href="https://fabricmc.net/use/" target="_blank" rel="noopener noreferrer">Fabric</a></li>
</ul>
<p></p>
<ol start="2">
<li>下载官方核心去<a href="https://minecraft-zh.gamepedia.com/Java%E7%89%88%E7%89%88%E6%9C%AC%E8%AE%B0%E5%BD%95" target="_blank" rel="noopener noreferrer">我的世界Wiki百科</a>中选择你的想要的版本点击他后右侧下载服务端</li>
</ol>
<p>
</p>
<ol start="3">
<li>将下载好的Fabric和服务端放在同一个目录下，<strong>服务端的文件名不可修改</strong>.</li>
</ol>
<ul>
<li>双击<strong>fabric-installer-xxx.jar</strong>  //xxx为版本号</li>
<li>选择服务端并点击「安装」</li>
</ul>
<p></p>
<ul>
<li>他会下载所需依赖，安装完成后他会弹出窗口
<ul>
<li>第一个是下载纯净服务端(由于网络问题不可能会下载成功，这就是为什么之前让你们提前下载服务端)</li>
<li>第二个是生成启动的bat或sh文件(这就舍去你的麻烦事了)</li>
</ul>
</li>
</ul>
<p></p>
<ol start="4">
<li>
<p>启动服务器，对于说一句他启动的是<code>fabric-server-launch.jar</code>，面板用户启动这个这个核心。</p>
</li>
<li>
<p>编辑「eula.txt」文件，将<code>eula=false</code>设置为<code>eula=true</code></p>
</li>
</ol>
<p></p>
<ol start="6">
<li>在此双击运行<code>.bat</code>文件，但你看到下面的视图，那么就代表你成功了！</li>
</ol>
<p></p>
<ol start="7">
<li>在<code>server.properties</code>文件中你可能有些需要改的地方(改完记得重启)</li>
</ol>
<div class="language-properties" data-ext="properties" data-title="properties"><pre class="language-properties"><code><span class="token key attr-name">gamemode</span><span class="token punctuation">=</span><span class="token value attr-value">survival  //游戏模式 0=生存 1=创造 2=冒险 3=旁观</span>
<span class="token key attr-name">difficulty</span><span class="token punctuation">=</span><span class="token value attr-value">easy  //难度0=和平 1=简单 2=普通 3=困难</span>
<span class="token key attr-name">max-players</span><span class="token punctuation">=</span><span class="token value attr-value">20  //服务器最大玩家数限制</span>
<span class="token key attr-name">server-port</span><span class="token punctuation">=</span><span class="token value attr-value">25565  //服务器端口</span>
<span class="token key attr-name">online-mode</span><span class="token punctuation">=</span><span class="token value attr-value">true  //在线（正版）验证[默认启用]</span>
</code></pre></div><h4>给服务器加MOD</h4>
<ol>
<li>去MOD网站下载你需要的MOD。</li>
</ol>
<ul>
<li><a href="https://www.curseforge.com/minecraft/modpacks" target="_blank" rel="noopener noreferrer">curseforge</a></li>
</ul>
<ol start="2">
<li>下载你需要的插件放入<code>mods</code>，就可以了，对于怎么配置<strong>MOD</strong>呢，在<code>config</code>文件夹中，会有与MOD相同名字的文件或文件夹，当然你也可以不用配置默认即可，这里不过多讲述了，毕竟这个帮不了什么。</li>
</ol>
]]></content>
    <category term="教程"/>
    <published>2020-02-14T00:00:00.000Z</published>
  </entry>
  <entry>
    <title type="text">我的世界MCSM8面板搭建</title>
    <id>https://vlssu.github.io/blogs/share/minecraft/mcsm.html</id>
    <link href="https://vlssu.github.io/blogs/share/minecraft/mcsm.html"/>
    <updated>2023-10-02T17:17:23.000Z</updated>
    <summary type="html"><![CDATA[<div class="custom-container tip"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8h.01"></path><path d="M11 12h1v4h1"></path></g></svg><p class="custom-container-title">TIP</p><ol>
<li>windows虽然图形UI很不错但性能优化不理想</li>
<li>Centos、Ubuntu操作方面会指令话，大大节省时间</li>
</ol>
</div>]]></summary>
    <content type="html"><![CDATA[<div class="custom-container tip"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8h.01"></path><path d="M11 12h1v4h1"></path></g></svg><p class="custom-container-title">TIP</p><ol>
<li>windows虽然图形UI很不错但性能优化不理想</li>
<li>Centos、Ubuntu操作方面会指令话，大大节省时间</li>
</ol>
</div><!-- more -->
<p>::: theorem 新的MCSManager 9.0
分布式，高扩展性，开箱即用，支持 Minecraft 和其他游戏的服务端管理面板
::: right
跳转至MCSManager 9.0文章 <a href="/blogs/share/minecraft/mcsm9.html" target="_blank">师叔の小窝</a>
:::</p>
<div class="custom-container tip"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8h.01"></path><path d="M11 12h1v4h1"></path></g></svg><p class="custom-container-title">TIP</p><p>如果你并不想去学习如何自己搭建，可以使用源作者的安装指令（我的脚本没必要了）</p>
<details class="custom-container details"><summary class="custom-container-title">Linux</summary><p>安装成功后，使用 <code>systemctl start mcsm</code> 命令即可启动面板</p>
<div class="language-text" data-ext="text" data-title="text"><pre class="language-text"><code>wget -qO- https://gitee.com/Suwingser/MCSManager-installer/raw/master/install.sh | bash
</code></pre></div></details></div><h2>前期需要软件</h2>
<ol>
<li>远程SSH控制台软件（本教程使用 Remote Terminal 此为win10商店软件）<a href="https://www.lanzoui.com/i88wyvi" target="_blank" rel="noopener noreferrer">[点我下载(此软件为Xshell)]</a></li>
<li>支持Sftp的FTP软件（本教程使用 FileZilla）<a href="https://www.lanzoui.com/i88wyqd" target="_blank" rel="noopener noreferrer">[点我下载]</a></li>
<li>服务端（本教程使用 Spigot）</li>
<li>Centos或Ubuntu主机一台 （教程使用 centos7.7）</li>
</ol>
<h2>注意事项</h2>
<ol>
<li>极力推荐Centos系统，Ubuntu系统未经博主测试</li>
<li>未标注哪个系统指令则两者都可适用</li>
<li>若标题注释了哪个系统那只能适用那个系统或另一个系统不需要输此指令</li>
</ol>
<h2>环境部署</h2>
<h3>系统更新</h3>
<ul>
<li>首先你要确保你的系统是最新的</li>
</ul>

<h3>安装node.js</h3>
<ul>
<li><strong>若发现国内下载很慢可以参考这篇来使用国内镜像部署</strong><a href="/blogs/share/linux/node.html" target="_blank"><strong>[Linux系统如何安装node管理器]</strong></a></li>
</ul>
<ol>
<li>安装Git</li>
</ol>

<ol start="2">
<li>安装node.js管理器等组件</li>
</ol>
<div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">git</span> clone https://github.com/creationix/nvm.git ~/nvm
<span class="token comment"># 设置nvm 自动运行</span>
<span class="token builtin class-name">echo</span> <span class="token string">"source ~/nvm/nvm.sh"</span> <span class="token operator">&gt;&gt;</span> ~/.bashrc
<span class="token builtin class-name">source</span> ~/.bashrc
<span class="token comment"># 安装npm的v13版本</span>
nvm <span class="token function">install</span> v14.17.4
<span class="token comment"># 使用v13版本</span>
nvm use v14.17.4
<span class="token comment"># 安装npm最新版本并使用最新版本 //由于面板问题无法使用最新的</span>
<span class="token comment"># nvm install stable &amp;&amp; nvm use stable</span>
</code></pre></div><h4>请关闭终端重新打开或重新连接终端 再依次执行以下命令（重要！）</h4>
<h3>安装java8</h3>
<ul>
<li>如果要看更精细的步骤可以看这个文章 <a href="/blogs/share/linux/java8.html" target="_blank">[如何在Linux系统中安装Java8]</a></li>
</ul>

<h3>安装MCSM</h3>
<ul>
<li>克隆<strong>MCSManager</strong>并安装依赖</li>
</ul>
<div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># 克隆目录</span>
<span class="token function">git</span> clone <span class="token parameter variable">-b</span> v8.7.0 https://github.com/suwings/mcsmanager.git
<span class="token comment"># cd至目录</span>
<span class="token builtin class-name">cd</span> mcsmanager/
<span class="token comment"># 安装依赖库</span>
<span class="token function">npm</span> <span class="token function">install</span>
<span class="token comment"># 启动面板</span>
<span class="token function">sudo</span> <span class="token function">npm</span> start     <span class="token comment"># 如果已是root可不用输sudo</span>
</code></pre></div><div class="custom-container warning"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8v4"></path><path d="M12 16h.01"></path></g></svg><p class="custom-container-title">注！启动面板注意事项</p><div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># 每次重启或关闭后需要重新CD到项目目录才能继续执行指令</span>
<span class="token builtin class-name">cd</span> mcsmanager/
<span class="token comment"># 启动面板</span>
<span class="token function">sudo</span> <span class="token function">npm</span> start     <span class="token comment"># 如果已是root可不用输sudo</span>
</code></pre></div><p>我以为这是常识，是我错了(我被小白所折服，哎)</p>
</div><h2>保持后台运行</h2>
<p>先<code>Ctrl+C</code>关闭面板，我们使用<code>screen</code>软件来让面板保持后台运行。</p>
<div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code>yum <span class="token function">install</span> <span class="token function">screen</span> <span class="token comment"># (Centos)</span>
<span class="token function">apt</span> <span class="token function">install</span> <span class="token function">screen</span> <span class="token comment"># (Ubuntu)</span>
<span class="token comment"># 创建一个名为 mcsm 的窗口</span>
<span class="token function">screen</span> <span class="token parameter variable">-S</span> mcsm
<span class="token comment"># 在此新终端窗口内启动面板</span>
<span class="token function">sudo</span> <span class="token function">npm</span> start <span class="token comment">#或 sudo node app.js</span>
</code></pre></div><p>直接断开终端连接即可，面板将保持后台运行。</p>
<p><b>若要重新控制，请输入命令即可：</b></p>
<div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">screen</span> <span class="token parameter variable">-r</span> mcsm
</code></pre></div><h2>端口开放</h2>
<p>面板需要 23333（主功能） 端口与 20010 - 20200（FTP功能）端口区间。</p>
<p>如果你使用阿里云，腾讯云或者服务商，<b>请进入控制台到防火墙安全组策略，放行以上端口。</b></p>
<p>如果依然无法访问，请关闭系统自带防火墙：</p>
<div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># 关闭防火墙，依次执行</span>
systemctl stop firewalld.service
systemctl disable firewalld.service
</code></pre></div><h2>修改站点配置文件</h2>
<p>在根目录的<code>./property.js</code>自带汉化，用户可自行修改</p>
<h2>默认账户</h2>
<p>现在，访问 http://你的ip:23333/ 即可进入面板。</p>
<div class="language-text" data-ext="text" data-title="text"><pre class="language-text"><code># 开头带“#”为最高管理员权限（注意，管理员与管理员之间账号可互删）不带“#”为用户账户
默认账号：#master
默认密码: 123456
</code></pre></div><p>请及时修改密码。</p>
<h2>FTP连接</h2>
<h3>连接主机时</h3>
<p></p>
<h3>连接面板的FTP时</h3>
<p></p>
<p></p>
<h2>服务端</h2>
<ul>
<li><a href="https://getbukkit.org/download/spigot" target="_blank" rel="noopener noreferrer">Spigot</a> [可以装插件]</li>
<li><a href="https://papermc.io/downloads" target="_blank" rel="noopener noreferrer">paper</a> [可以装插件]</li>
<li><a href="https://files.minecraftforge.net" target="_blank" rel="noopener noreferrer">Forge</a> [可以装MOD]</li>
</ul>
<h2>服务器插件/MOD</h2>
<ul>
<li><a href="https://dev.bukkit.org" target="_blank" rel="noopener noreferrer">bukkit</a> [下载插件]</li>
<li><a href="https://www.spigotmc.org" target="_blank" rel="noopener noreferrer">spigotmc</a> [下载插件]</li>
<li><a href="https://www.curseforge.com/minecraft/modpacks" target="_blank" rel="noopener noreferrer">curseforge</a> [下载MOD]</li>
</ul>
<h2>计划任务项目</h2>
<div class="language-text" data-ext="text" data-title="text"><pre class="language-text"><code>列如设置在每日凌晨3点执行一次：
* * 3 * * *

如果是想每隔3个小时执行一次：
* * */3 * * *

如果设置3月20号凌晨1点10分执行，并将执行次数设置为1。
* 10 1 20 3 *

具体使用方法如下：

* * * * * *
┬ ┬ ┬ ┬ ┬ ┬
│ │ │ │ │ │
│ │ │ │ │ └ 星期几（0-7）（0或7是星期日）
│ │ │ │ └───── 月（1-12）
│ │ │ └────────── 每月的某日（1-31）
│ │ └─────────────── 小时（0-23）
│ └──────────────────── 分钟（0-59）
└───────────────────────── 秒（0-59，可选）
</code></pre></div><h2>Docker 启动 Minecraft 服务端</h2>
<ul>
<li>如何安装Docker参考我这篇文章<a href="/blogs/share/linux/docker.html" target="_blank">[在Linux中安装Docker]</a></li>
</ul>
<h3>关闭SElinux</h3>
<ul>
<li>临时关闭SElinux</li>
</ul>
<div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code>setenforce <span class="token number">0</span>
</code></pre></div><ul>
<li>SElinux系统默认开启，如果不关闭会导致<code>Docker</code>无法访问项目目录</li>
<li>如何关闭Linux里面SElinux参考我这篇文章<a href="/blogs/share/linux/selinux.html" target="_blank">[如何关闭Linux里面的SElinux]</a></li>
</ul>
<h3>创建Docker</h3>
<ol>
<li>使用<code>#master</code>账号登录</li>
<li>进入 <code>服务端管理</code></li>
<li>选择中上方的 <code>创建虚拟镜像</code> 中创建 Docker 镜像。</li>
<li>默认情况下，无需修改。点击 <code>创建镜像</code></li>
<li>最后。等待，速度与你网络有关，<code>任务结果列表</code> 显示成功则成功。</li>
</ol>
<h3>创建服务端</h3>
<p>创建服务端十分简单，点击“引导创建服务端”即可。</p>
<p>通过里面的指引，创建你的 MC 服务器，稍后可以通过文件在线管理上传你的核心文件。</p>
<h3>此端的 Docker 配置</h3>
<ol>
<li>创建好服务端之后，点击这个服务器实例的【参数】然后到【docker 配置】</li>
<li>勾上【此服务端启用 Docker 容器】选择框</li>
<li>在【端口限制】中填写“25565:25565”即可，此意是开放 25565 端口。冒号两边一般情况下保持一致即可。</li>
<li>保存</li>
</ol>
<h3>最后的操作</h3>
<ol>
<li>回到服务端管理界面</li>
<li>点击【管理】进入【文件在线管理】，上传你的核心文件。</li>
<li>你已经给你的 Minecraft 服务端配置好了 Docker，现在只需要上传核心文件，然后启动就行啦！</li>
</ol>
<ul>
<li>启动时，Docker 容器会自动加载你的 Minecraft 服务端，保证安全性，稳定性。</li>
</ul>
<h3>写在最后</h3>
<p>Docker 相关命令：</p>
<div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">docker</span> <span class="token function">ps</span> <span class="token comment"># 查看当前 Docker 进程</span>
<span class="token function">docker</span> images <span class="token comment"># 查看当前 Docker 有哪些镜像（包括运行和未运行的）</span>
<span class="token function">docker</span> <span class="token function">kill</span> mcsd <span class="token comment"># 强制杀死当前 Docker ，包括你的 Minecraft 服务端（失去控制时使用）</span>
</code></pre></div>]]></content>
    <category term="教程"/>
    <published>2019-12-12T00:00:00.000Z</published>
  </entry>
  <entry>
    <title type="text">我的世界新版MCSM9面板搭建</title>
    <id>https://vlssu.github.io/blogs/share/minecraft/mcsm9.html</id>
    <link href="https://vlssu.github.io/blogs/share/minecraft/mcsm9.html"/>
    <updated>2023-10-02T17:17:23.000Z</updated>
    <summary type="html"><![CDATA[<div class="custom-container tip"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8h.01"></path><path d="M11 12h1v4h1"></path></g></svg><p class="custom-container-title">TIP</p><ul>
<li>一个终端控制多台服务器</li>
<li>站点服务器不再占用过高</li>
</ul>
</div>]]></summary>
    <content type="html"><![CDATA[<div class="custom-container tip"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8h.01"></path><path d="M11 12h1v4h1"></path></g></svg><p class="custom-container-title">TIP</p><ul>
<li>一个终端控制多台服务器</li>
<li>站点服务器不再占用过高</li>
</ul>
</div><!-- more -->
<p>::: theorem 过时的MCSManager 8.0
我们以前常用的独立式MCSM面板
::: right
跳转至MCSManager 8.0文章 <a href="/blogs/share/minecraft/mcsm.html" target="_blank">师叔の小窝</a>
:::</p>
<h2>Linux</h2>
<div class="custom-container tip"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8h.01"></path><path d="M11 12h1v4h1"></path></g></svg><p class="custom-container-title">TIP</p><p>如果你并不想去学习如何自己搭建，可以使用源作者的安装指令（我的脚本没必要了）</p>
<details class="custom-container details"><summary class="custom-container-title">Linux</summary><p>安装成功后，使用 <code>systemctl start mcsm-{(web, daemon)}</code> 命令即可启动面板</p>
<div class="language-text" data-ext="text" data-title="text"><pre class="language-text"><code>wget -qO- https://gitee.com/mcsmanager/script/raw/master/setup.sh | bash
</code></pre></div></details></div><h2>前期需要软件</h2>
<ol>
<li>远程SSH控制台软件（本教程使用 Remote Terminal 此为win10商店软件）<a href="https://vlssu.lanzoui.com/i88wyvi" target="_blank" rel="noopener noreferrer">[点我下载(此软件为Xshell)]</a></li>
<li>支持Sftp的FTP软件（本教程使用 FileZilla）<a href="https://www.lanzoui.com/i88wyqd" target="_blank" rel="noopener noreferrer">[点我下载]</a></li>
<li>服务端（本教程使用 Spigot）</li>
<li>Centos或Ubuntu主机一台 （教程使用 centos7.9）</li>
</ol>
<h2>注意事项</h2>
<ol>
<li>极力推荐Centos系统，Ubuntu系统未经博主测试</li>
<li>未标注哪个系统指令则两者都可适用</li>
<li>若标题注释了哪个系统那只能适用那个系统或另一个系统不需要输此指令</li>
</ol>
<h2>环境部署</h2>
<h3>系统更新</h3>
<ul>
<li>首先你要确保你的系统是最新的</li>
</ul>

<h3>安装node.js</h3>
<ul>
<li><strong>若发现国内下载很慢可以参考这篇来使用国内镜像部署</strong><a href="/blogs/share/linux/node.html" target="_blank"><strong>[Linux系统如何安装node管理器]</strong></a></li>
</ul>
<ol>
<li>安装Git</li>
</ol>

<ol start="2">
<li>安装node.js管理器等组件</li>
</ol>
<div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">git</span> clone https://github.com/creationix/nvm.git ~/nvm
<span class="token comment"># 设置nvm 自动运行</span>
<span class="token builtin class-name">echo</span> <span class="token string">"source ~/nvm/nvm.sh"</span> <span class="token operator">&gt;&gt;</span> ~/.bashrc
<span class="token builtin class-name">source</span> ~/.bashrc
<span class="token comment"># 安装npm的v16版本</span>
nvm <span class="token function">install</span> v16.14.0
<span class="token comment"># 使用v13版本</span>
nvm use v16.14.0
<span class="token comment"># 安装npm最新版本并使用最新版本 //建议使用稳定版而不是最新测试版</span>
<span class="token comment"># nvm install stable &amp;&amp; nvm use stable</span>
</code></pre></div><h4>请关闭终端重新打开或重新连接终端 再依次执行以下命令（重要！）</h4>
<h3>安装java</h3>
<ul>
<li>如果要看更精细的步骤可以看这个文章 <a href="/blogs/share/linux/java8.html" target="_blank">[如何在Linux系统中安装Java8]</a></li>
</ul>

<h3>安装MCSM</h3>
<div class="custom-container tip"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8h.01"></path><path d="M11 12h1v4h1"></path></g></svg><p class="custom-container-title">克隆**MCSManager前端**并安装依赖</p><div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># 下载面板端（Web）程序 并重命名为 web</span>
<span class="token function">git</span> clone https://github.com/MCSManager/MCSManager-Web-Production.git web
<span class="token comment"># 进入 web 文件夹中</span>
<span class="token builtin class-name">cd</span> web
<span class="token comment"># 安装依赖库</span>
<span class="token function">npm</span> <span class="token function">install</span> <span class="token parameter variable">--registry</span><span class="token operator">=</span>https://registry.npm.taobao.org
</code></pre></div></div><div class="custom-container tip"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8h.01"></path><path d="M11 12h1v4h1"></path></g></svg><p class="custom-container-title">克隆**MCSManager后端**并安装依赖</p><div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># 下载守护进程（Daemon）程序</span>
<span class="token function">git</span> clone https://github.com/MCSManager/MCSManager-Daemon-Production.git daemon
<span class="token comment"># 进入 daemon 文件夹中</span>
<span class="token builtin class-name">cd</span> daemon
<span class="token comment"># 安装依赖库</span>
<span class="token function">npm</span> <span class="token function">install</span> <span class="token parameter variable">--registry</span><span class="token operator">=</span>https://registry.npm.taobao.org
</code></pre></div><p>| 访问地址 | localhost:24444 |
| :</p>
</div>]]></content>
    <category term="教程"/>
    <published>2022-02-01T00:00:00.000Z</published>
  </entry>
  <entry>
    <title type="text">我的世界离线用户联机</title>
    <id>https://vlssu.github.io/blogs/share/minecraft/netplus.html</id>
    <link href="https://vlssu.github.io/blogs/share/minecraft/netplus.html"/>
    <updated>2023-10-02T17:17:23.000Z</updated>
    <summary type="html"><![CDATA[<ul>
<li>VlssuSkin皮肤站一开始本用于我服后来公开化，也希望大家来使用我的皮肤站</li>
<li>NetPlus是我接触的内网穿透项目，他可以让玩家在没有公网的基础上与朋友联机</li>
<li>离线版是无法使用客户端自带联机的，而皮肤站解决了这个问题</li>
</ul>
]]></summary>
    <content type="html"><![CDATA[<ul>
<li>VlssuSkin皮肤站一开始本用于我服后来公开化，也希望大家来使用我的皮肤站</li>
<li>NetPlus是我接触的内网穿透项目，他可以让玩家在没有公网的基础上与朋友联机</li>
<li>离线版是无法使用客户端自带联机的，而皮肤站解决了这个问题</li>
</ul>
<!-- more -->
<h2>如何注册皮肤站</h2>
<p>我们皮肤站地址<a href="https://skin.vlssu.com/" target="_blank" rel="noopener noreferrer">https://skin.vlssu.com</a></p>
<ol>
<li>首先进入皮肤站</li>
</ol>
<p></p>
<ol start="2">
<li>进行注册</li>
</ol>
<p>理论上所有邮箱你都可以用来注册，但我们为了方便管理，请尽量用QQ邮箱</p>
<p><strong>注意！！</strong> 正版无需注册，直接输入正版账户就完成了注册（并且皮肤、ID都会帮你配置好）</p>
<p></p>
<ol start="3">
<li>你需要验证邮箱，否则你将无法使用账户</li>
</ol>
<p></p>
<ol start="4">
<li>你的ID已在你注册时填写过了，你也可以按需求去皮肤库选皮肤或自己上传皮肤</li>
</ol>
<div class="custom-container tip"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8h.01"></path><path d="M11 12h1v4h1"></path></g></svg><p class="custom-container-title">TIP</p><p>那么这部分就讲完了，如果你需要皮肤站的详细说明，那么你可以去<a href="https://skin.vlssu.com/manual/" target="_blank" rel="noopener noreferrer"><strong>皮肤站用户使用手册</strong></a>去查看更详细的内容</p>
</div><h2>如何配置客户端</h2>
<ul>
<li>首先就是我们要注册皮肤站  <a href="https://skin.vlssu.com/auth/register" target="_blank" rel="noopener noreferrer"><strong>点击这里去皮肤站</strong></a></li>
<li>在你注册完之后会进入<a href="http://skin.vlssu.com/user" target="_blank" rel="noopener noreferrer"><strong>用户中心</strong></a></li>
<li>再根据下面相应客户端配置</li>
</ul>
<h4>我们皮肤站的认证服务器地址(给不认真看的人看的)</h4>
<div class="language-text" data-ext="text" data-title="text"><pre class="language-text"><code>https://skin.vlssu.com/api/yggdrasil
</code></pre></div><h3>HMCL-原版配置方案</h3>
<p>以下以 HMCL 3 为例，演示在 Minecraft 客户端中使用 Yggdrasil。</p>
<ol>
<li>打开 HMCL 3 的「新建游戏账户」界面，选择登陆方式为「外置登录（authlib-injector）」。
如果这是你第一次打开 HMCL，这个界面将会在启动时弹出。</li>
</ol>
<p></p>
<ol start="2">
<li>点击「认证服务器」旁的加号「+」，输入 VlssuSkin 的 Yggdrasil API 地址，点击「下一步」，等待识别出 VlssuSkin 的 Yggdrasil 后点击「完成」。
如果你曾经添加过 VlssuSkin 的 Yggdrasil，你也可以在「认证服务器」菜单中直接选择 VlssuSkin。</li>
</ol>
<p>

</p>
<ol start="3">
<li>在「认证服务器」菜单中选择 VlssuSkin，填写你的邮箱和密码。「用户名」即为你在 VlssuSkin 的账号的邮箱。
如果你只添加了一个认证服务器，那么 HMCL 3 会默认选中那个唯一的认证服务器。</li>
</ol>
<p></p>
<ol start="4">
<li>设置完成啦！你可以启动游戏了。</li>
</ol>
<h3>正版启动器示例</h3>
<p>以下以 Minecraft Launcher 为例，演示在 Minecraft 客户端中使用 Yggdrasil。</p>
<ol>
<li>首先你得是正版，然后再皮肤站绑定正版，如发现进不去，可以去皮肤站的<a href="https://skin.vlssu.com/user/profile" target="_blank" rel="noopener noreferrer">个人资料</a>右上角进行更新<strong>UUID</strong></li>
</ol>
<p></p>
<ol start="2">
<li>需要先下载<code>authlib-injector.jar</code><a href="https://authlib-injector.yushi.moe/~download/" target="_blank" rel="noopener noreferrer">【点击下载】</a><a href="https://www.lanzoui.com/i4mzbqd" target="_blank" rel="noopener noreferrer">【备用下载】</a>并放在你的游戏文件的根目录也就是<code>.minecraft</code>文件夹里（实际随你放哪）</li>
</ol>
<p></p>
<ol start="3">
<li>然后打开正版启动器的JVM参数进行设置</li>
</ol>
<div class="language-text" data-ext="text" data-title="text"><pre class="language-text"><code>-javaagent:{绝对位置\authlib-injector.jar}=https://skin.vlssu.com/api/yggdrasil
</code></pre></div><ul>
<li>这是我的参数，仅供参考</li>
</ul>
<div class="language-text" data-ext="text" data-title="text"><pre class="language-text"><code>-javaagent:C:\Users\cmy13\AppData\Roaming\.minecraft\authlib-injector.jar=https://skin.vlssu.com/api/yggdrasil -Xmx8G -XX:+UnlockExperimentalVMOptions -XX:+UseG1GC -XX:G1NewSizePercent=20 -XX:G1ReservePercent=20 -XX:MaxGCPauseMillis=50 -XX:G1HeapRegionSize=32M
</code></pre></div><p></p>
<ol start="4">
<li>设置完成啦！你可以启动游戏了</li>
</ol>
<h2>在服务端使用</h2>
<p>VlssuSkin 提供 Yggdrasil 验证鉴权服务，你可以配合 <a href="https://github.com/yushijinhun/authlib-injector" target="_blank" rel="noopener noreferrer">authlib-injector</a> 来实现 Minecraft 服务器外置登录，并在不安装皮肤 Mod 的情况下加载来自 VlssuSkin 的材质。</p>
<p>你可以在 <a href="https://authlib-injector.yushi.moe/~download/" target="_blank" rel="noopener noreferrer">https://authlib-injector.yushi.moe/~download/</a> 下载到最新版本的 authlib-injector。</p>
<h3>Yggdrasil API 地址</h3>
<p>VlssuSkin 的 Yggdrasil API 的地址是：</p>
<div class="language-text" data-ext="text" data-title="text"><pre class="language-text"><code>https://skin.vlssu.com/api/yggdrasil
</code></pre></div><h3>在服务器中配置</h3>
<p>请先将服务器配置文件（一般为 server.propties）中 <code>online-mode</code> 一项的值设为 <code>true</code>，然后在你的服务端的启动指令的 <code>-jar</code> 参数前添加如下参数：</p>
<div class="language-text" data-ext="text" data-title="text"><pre class="language-text"><code>-javaagent:{path/to/authlib-injector.jar}=https://skin.vlssu.com/api/yggdrasil
</code></pre></div><p>其中 <code>{path/to/authlib-injector.jar}</code> 为指向 authlib-injector 的路径。</p>
<div class="custom-container tip"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8h.01"></path><path d="M11 12h1v4h1"></path></g></svg><p class="custom-container-title">TIP</p><p>如果你使用 BungeeCord，你需要在所有服务端（包括 BungeeCord 和所有子服）中加载 authlib-injector（方法见上），但只有 BungeeCord 打开 <code>online-mode</code>，其他服务端应该关闭 <code>online-mode</code>。</p>
</div><h2>使用客户端联机</h2>
<ol>
<li>使用「<a href="#%E5%A6%82%E4%BD%95%E9%85%8D%E7%BD%AE%E5%AE%A2%E6%88%B7%E7%AB%AF">外置登录</a>」进入游戏</li>
<li>首先进入存档后，打开「游戏菜单」的界面，点击菜单中的「对局域网开放」</li>
<li>你可以先设置其他玩家进入你服务器是什么模式，也可以设置他们是否能使用作弊指令</li>
<li>点击界面中的「创建一个局域网世界」，聊天栏会出现在你电脑上开放的<strong>联机端口</strong></li>
</ol>
<p>

</p>
<ol start="5">
<li>将你开放的端口写入下面一个环节中的「内网端口」中，然后就可以复制地址让你的好友进入你的世界啦。<br>
<strong>记住一定要使用「外置登录」哦</strong></li>
</ol>
<h2>如何使用NetPlus映射</h2>
<p><a href="https://jq.qq.com/?_wv=1027&amp;k=5vvZx5E" target="_blank" rel="noopener noreferrer">加入群聊【NetPlus·端口映射官方群】</a></p>
<ol>
<li>打开 NetPlus 软件进入「映射管理」去「设置」映射信息</li>
</ol>
<p>
2. 设置映射信息</p>
<ul>
<li>映射名称可以随便填，但要注意不可重复</li>
<li>内网IP一般默认即可，推荐「127.0.0.1」</li>
<li>内网端口根据游戏的不同设置不同的端口
<ul>
<li>JAVA版一般默认为25565，但如果是客户端会随机端口根据提示输入相应端口</li>
</ul>
</li>
<li>映射节点推荐使用「自动优选」来自动设置延迟最低的节点
<ul>
<li>也可以自己选一个节点来照顾不同地区的用户</li>
<li>如果出现节点未显示的情况可以「刷新节点」将节点刷新出来</li>
</ul>
</li>
<li>最后保存节点就大功告成了</li>
</ul>
<p></p>
]]></content>
    <category term="教程"/>
    <published>2020-02-25T00:00:00.000Z</published>
  </entry>
  <entry>
    <title type="text">使用 vuepress 搭建我的博客</title>
    <id>https://vlssu.github.io/blogs/share/node/vuepress-blog-on-github.html</id>
    <link href="https://vlssu.github.io/blogs/share/node/vuepress-blog-on-github.html"/>
    <updated>2023-10-02T17:17:23.000Z</updated>
    <summary type="html"><![CDATA[<div class="custom-container tip"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8h.01"></path><path d="M11 12h1v4h1"></path></g></svg><p class="custom-container-title">前言</p><p>嗯～, 没错, 博客又迎来一次重大的更新, 采用 vuepress 这一静态博客解决方案，并使用魔改主题。这篇会从搭建博客到部署上线进行较详细的介绍</p>
</div>]]></summary>
    <content type="html"><![CDATA[<div class="custom-container tip"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8h.01"></path><path d="M11 12h1v4h1"></path></g></svg><p class="custom-container-title">前言</p><p>嗯～, 没错, 博客又迎来一次重大的更新, 采用 vuepress 这一静态博客解决方案，并使用魔改主题。这篇会从搭建博客到部署上线进行较详细的介绍</p>
</div><!-- more -->
<!--
<video src="https://imguss.vlssu.com/video/Genshin_Ayaka.mp4" 
width="100%" 
controls="controls"></video>
-->
<h2>开始你的博客</h2>
<h3>前期准备</h3>
<p><a href="https://vuepress.vuejs.org/zh/plugin/" target="_blank" rel="noopener noreferrer">VuePress 官方文档</a>, 不管怎样这份文档多多少少都得阅读一遍吧</p>
<p><a href="https://vuepress-theme-reco.recoluan.com/" target="_blank" rel="noopener noreferrer">vuepress-theme-reco 博客主题文档</a>, 如果你用的博客主题和我的一样的话, 这份文档也该阅读一遍吧, 如果不是的话或是你找到了更加优秀主题的话请你私信给我</p>
<h3>安装博客主题 CLI</h3>
<div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">npm</span> i <span class="token parameter variable">-g</span> vuepress <span class="token comment"># 如果可以的话, 建议您 vuepress 可以全局安装一下依赖, 当然不装也没啥大问题</span>
<span class="token function">npm</span> <span class="token function">install</span> @vuepress-reco/theme-cli <span class="token parameter variable">-g</span>
</code></pre></div><h3>创建一份基础的 DEMO</h3>
<p>命令行会已一问一答的方式指引你创建一份新的博客, 按照提示进行配置即可</p>
<div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code>theme-cli init my-blog
</code></pre></div><h3>安装依赖</h3>
<div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> my-blog
<span class="token function">npm</span> <span class="token function">install</span>
</code></pre></div><h3>预览</h3>
<p>这一步可分为开发模式预览和线上模式预览。 开发模式预览指未发布前自己个儿边写博文边看效果（PS：可自动刷新浏览器）；线上模式预览指准备发布了,打包之后查看线上的效果</p>
<h4>开发模式预览</h4>
<div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">npm</span> dev <span class="token comment"># 打开浏览器即可浏览, 网址: 127.0.0.1:8080 </span>
<span class="token function">yarn</span> dev <span class="token comment"># 我个人喜欢用 yarn</span>
</code></pre></div><h2>定制化魔改主题</h2>
<p>这个具体内容可以去<a href="https://www.zealsay.com/blogs/tec/2020/20201223.html" target="_blank" rel="noopener noreferrer">[作者博客参考使用]</a></p>
<h3>安装依赖</h3>
<div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># 先在自己的项目中安装依赖</span>
<span class="token function">yarn</span> <span class="token function">add</span> <span class="token parameter variable">-D</span> glob mime path qiniu aos vue-class-component
</code></pre></div><h3>迁移文件</h3>
<p>下载项目文件</p>
<div class="language-text" data-ext="text" data-title="text"><pre class="language-text"><code>https://gitee.com/GodLikeZeal/vuepress_blog
</code></pre></div><p>目录结构，深色重点观察</p>
<div class="language-text" data-ext="text" data-title="text"><pre class="language-text"><code>.
├── vuepress_blog
│   ├── .vuepress 
│   │   ├── components 
│   │   ├── theme 
│   │   │   └── Layout.vue
│   │   ├── public 
│   │   ├── styles 
│   │   │   ├── index.styl
│   │   │   └── palette.styl
│   │   ├── templates 
│   │   │   ├── dev.html
│   │   │   └── ssr.html
│   │   ├── config.js (重要)
│   │   └── enhanceApp.js 
│   │ 
│   ├── README.md
│   ├── blogs
│   │   └── README.md
│ 
└── package.json
</code></pre></div><h3>theme</h3>
<p>将<code>vuepress_blog/.vuepress/theme</code>文件夹放在你的项目文件夹中 列如<code>./docs/.vuepress/theme</code></p>
<p>那么这个文件就好了</p>
<h3>config.js</h3>
<p>在原有的基础上添加以下加重部分</p>
<div class="language-javascript" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token string-property property">"themeConfig"</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token string-property property">"socials"</span><span class="token operator">:</span><span class="token punctuation">{</span>
        <span class="token string-property property">"github"</span><span class="token operator">:</span> <span class="token string">"https://github.com/vlssu"</span><span class="token punctuation">,</span> <span class="token comment">//github</span>
        <span class="token string-property property">"gitlub"</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token comment">//gitlub</span>
        <span class="token string-property property">"gitee"</span><span class="token operator">:</span> <span class="token string">"https://gitee.com/vlssu"</span><span class="token punctuation">,</span> <span class="token comment">//gitee</span>
        <span class="token string-property property">"jianshu"</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token comment">//简书</span>
        <span class="token string-property property">"zhihu"</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token comment">//知乎</span>
        <span class="token string-property property">"toutiao"</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token comment">//知乎</span>
        <span class="token string-property property">"juejin"</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token comment">//掘金</span>
        <span class="token string-property property">"segmentfault"</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token comment">//思否</span>
        <span class="token string-property property">"csdn"</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token comment">//CSDN</span>
        <span class="token string-property property">"wechat"</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token comment">//微信</span>
        <span class="token string-property property">"qq"</span><span class="token operator">:</span> <span class="token string">"1305300729"</span> <span class="token comment">//QQ </span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token string-property property">"mottos"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>
      <span class="token string-property property">"zh"</span><span class="token operator">:</span> <span class="token string">"愿你保持初心和善良,笑里尽是温暖与坦荡。"</span><span class="token punctuation">,</span>
      <span class="token string-property property">"en"</span><span class="token operator">:</span> <span class="token string">"May you keep your original heart and kindness, and smile with warmth and magnanimity."</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span>
        <span class="token string-property property">"zh"</span><span class="token operator">:</span> <span class="token string">"年轻就是无限的可能。"</span><span class="token punctuation">,</span>
        <span class="token string-property property">"en"</span><span class="token operator">:</span> <span class="token string">"Youth means limitless possibilities."</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span>
        <span class="token string-property property">"zh"</span><span class="token operator">:</span> <span class="token string">"真正的梦就是现实的彼岸。"</span><span class="token punctuation">,</span>
        <span class="token string-property property">"en"</span><span class="token operator">:</span> <span class="token string">"Real dream is the other shore of reality."</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span>
        <span class="token string-property property">"zh"</span><span class="token operator">:</span> <span class="token string">"不为模糊不清的未来担忧，只为清清楚楚的现在努力。"</span><span class="token punctuation">,</span>
        <span class="token string-property property">"en"</span><span class="token operator">:</span> <span class="token string">"Don't worry about the vague future, just strive for the clear present."</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span>
        <span class="token string-property property">"zh"</span><span class="token operator">:</span> <span class="token string">"与其装腔作势企图影响别人，不如咬牙切齿狠命修理自己。"</span><span class="token punctuation">,</span>
        <span class="token string-property property">"en"</span><span class="token operator">:</span> <span class="token string">"Rather than pretending to influence others, it's better to grind your teeth and repair yourself."</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
        <span class="token string-property property">"zh"</span><span class="token operator">:</span> <span class="token string">"上天是公平的，只要努力就会有收获，否则就是你不够努力。"</span><span class="token punctuation">,</span>
        <span class="token string-property property">"en"</span><span class="token operator">:</span> <span class="token string">"God is fair, as long as effort will include results, otherwise is you hard enough."</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span>
        <span class="token string-property property">"zh"</span><span class="token operator">:</span> <span class="token string">"人生没有后悔，我们只能尽力去不让自己后悔。"</span><span class="token punctuation">,</span>
        <span class="token string-property property">"en"</span><span class="token operator">:</span> <span class="token string">"Life without regret, we can only do our best to not to regret."</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token string-property property">"covers"</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token string">'https://imguss.vlssu.com/banner/bannerpixiv7.jpg'</span><span class="token punctuation">,</span>
    <span class="token string">'https://imguss.vlssu.com/banner/bannerpixiv1.jpg'</span><span class="token punctuation">,</span>
    <span class="token string">'https://imguss.vlssu.com/banner/bannerpixiv2.jpg'</span><span class="token punctuation">,</span>
    <span class="token string">'https://imguss.vlssu.com/banner/bannerpixiv3.jpg'</span><span class="token punctuation">,</span>
    <span class="token string">'https://imguss.vlssu.com/banner/bannerpixiv4.jpg'</span><span class="token punctuation">,</span>
    <span class="token string">'https://imguss.vlssu.com/banner/bannerpixiv5.jpg'</span><span class="token punctuation">,</span>
    <span class="token string">'https://imguss.vlssu.com/banner/bannerpixiv6.jpg'</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token string-property property">"info"</span><span class="token operator">:</span> <span class="token string">"随便写写"</span><span class="token punctuation">,</span>
    <span class="token string-property property">"codeTheme"</span><span class="token operator">:</span> <span class="token string">"tomorrow"</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre></div><h3>文章封面设置</h3>
<p>cover</p>
<p>封面图片配置，如果不配置，则默认展示首页的背景图片。</p>
<div class="language-markdown" data-ext="md" data-title="md"><pre class="language-markdown"><code></code></pre></div>]]></content>
    <category term="node"/>
    <published>2021-08-11T00:00:00.000Z</published>
  </entry>
  <entry>
    <title type="text">Markdown基本语法</title>
    <id>https://vlssu.github.io/blogs/share/vuepress/markdown.html</id>
    <link href="https://vlssu.github.io/blogs/share/vuepress/markdown.html"/>
    <updated>2023-10-02T17:17:23.000Z</updated>
    <summary type="html"><![CDATA[<h2>一、标题</h2>
<p>在想要设置为标题的文字前面加<code>#</code>来表示</p>
<p>一个<code>#</code>是一级标题，二个<code>#</code>是二级标题，以此类推。支持六级标题。</p>
<div class="custom-container tip"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8h.01"></path><path d="M11 12h1v4h1"></path></g></svg><p class="custom-container-title">示例</p><div class="language-text" data-ext="text" data-title="text"><pre class="language-text"><code># 这是一级标题
## 这是二级标题
### 这是三级标题
#### 这是四级标题
##### 这是五级标题
###### 这是六级标题
</code></pre></div></div>]]></summary>
    <content type="html"><![CDATA[<h2>一、标题</h2>
<p>在想要设置为标题的文字前面加<code>#</code>来表示</p>
<p>一个<code>#</code>是一级标题，二个<code>#</code>是二级标题，以此类推。支持六级标题。</p>
<div class="custom-container tip"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8h.01"></path><path d="M11 12h1v4h1"></path></g></svg><p class="custom-container-title">示例</p><div class="language-text" data-ext="text" data-title="text"><pre class="language-text"><code># 这是一级标题
## 这是二级标题
### 这是三级标题
#### 这是四级标题
##### 这是五级标题
###### 这是六级标题
</code></pre></div></div><details class="custom-container details"><summary class="custom-container-title">效果</summary><h1>这是一级标题</h1>
<h2>这是二级标题</h2>
<h3>这是三级标题</h3>
<h4>这是四级标题</h4>
<h5>这是五级标题</h5>
<h6>这是六级标题</h6>
</details><h2>二、字体</h2>
<ol>
<li>加粗 要加粗的文字左右分别用两个*号包起来，例：<code>**加粗**</code></li>
<li>斜体 要倾斜的文字左右分别用一个*号包起来，例：<code>*斜体*</code></li>
<li>斜体加粗 要倾斜和加粗的文字左右分别用三个*号包起来，例：<code>***斜体加粗***</code></li>
<li>删除线 要加删除线的文字左右分别用两个~~号包起来，例：<code>~~删除线~~ </code></li>
</ol>
<div class="custom-container tip"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8h.01"></path><path d="M11 12h1v4h1"></path></g></svg><p class="custom-container-title">示例</p><div class="language-text" data-ext="text" data-title="text"><pre class="language-text"><code>**这是加粗的文字**
*这是倾斜的文字*
***这是斜体加粗的文字***
~~这是加删除线的文字~~
</code></pre></div></div><details class="custom-container details"><summary class="custom-container-title">效果</summary><p><strong>这是加粗的文字</strong>
<em>这是倾斜的文字</em>
<em><strong>这是斜体加粗的文字</strong></em>
<s>这是加删除线的文字</s></p>
</details><ol start="5">
<li>字体、字号、颜色</li>
</ol>
<div class="custom-container tip"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8h.01"></path><path d="M11 12h1v4h1"></path></g></svg><p class="custom-container-title">示例</p><div class="language-text" data-ext="text" data-title="text"><pre class="language-text"><code>&lt;font face="黑体"&gt;我是黑体字&lt;/font&gt;
&lt;font face="微软雅黑"&gt;我是微软雅黑&lt;/font&gt;
&lt;font face="STCAIYUN"&gt;我是华文彩云&lt;/font&gt;
&lt;font color=#0099ff size=12 face="黑体"&gt;黑体&lt;/font&gt;
&lt;font color=gray size=5&gt;gray&lt;/font&gt;
&lt;font color=#00ffff size=3&gt;null&lt;/font&gt;
</code></pre></div></div><details class="custom-container details"><summary class="custom-container-title">效果</summary></details><h2>三、引用</h2>
<p>在引用的文字前加&gt;即可。引用也可以嵌套，如加两个<code>&gt;&gt;</code>三个<code>&gt;&gt;&gt;</code>n个...</p>
<div class="custom-container tip"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8h.01"></path><path d="M11 12h1v4h1"></path></g></svg><p class="custom-container-title">示例</p><div class="language-text" data-ext="text" data-title="text"><pre class="language-text"><code>&gt;这是引用的内容
&gt;&gt;这是引用的内容
&gt;&gt;&gt;&gt;这是引用的内容
</code></pre></div></div><details class="custom-container details"><summary class="custom-container-title">效果</summary><blockquote>
<p>这是引用的内容</p>
<blockquote>
<p>这是引用的内容</p>
<blockquote>
<blockquote>
<p>这是引用的内容</p>
</blockquote>
</blockquote>
</blockquote>
</blockquote>
</details><h2>四、分割线</h2>
<p>三个或者三个以上的 <code>-</code> 或者 <code>*</code> 都可以。</p>
<div class="custom-container tip"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8h.01"></path><path d="M11 12h1v4h1"></path></g></svg><p class="custom-container-title">示例</p><div class="language-text" data-ext="text" data-title="text"><pre class="language-text"><code></code></pre></div></div>]]></content>
    <category term="VuePress"/>
    <published>2020-12-15T00:00:00.000Z</published>
  </entry>
  <entry>
    <title type="text">Docker 软链接及迁移数据</title>
    <id>https://vlssu.github.io/blogs/notes/230831.html</id>
    <link href="https://vlssu.github.io/blogs/notes/230831.html"/>
    <updated>2023-10-02T17:17:23.000Z</updated>
    <summary type="html"><![CDATA[<h2>首次部署时</h2>
<div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">mkdir</span> <span class="token parameter variable">-p</span> /data/docker /var/lib/docker
<span class="token function">ln</span> <span class="token parameter variable">-s</span> /data/docker /var/lib/docker
</code></pre></div>]]></summary>
    <content type="html"><![CDATA[<h2>首次部署时</h2>
<div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">mkdir</span> <span class="token parameter variable">-p</span> /data/docker /var/lib/docker
<span class="token function">ln</span> <span class="token parameter variable">-s</span> /data/docker /var/lib/docker
</code></pre></div><h2>已有数据迁移时</h2>
<ol>
<li>暂停docker服务</li>
</ol>
<div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code>systemctl stop <span class="token function">docker</span>

<span class="token comment"># 查看dokcer服务是否停止完毕</span>
systemctl status <span class="token function">docker</span>
<span class="token function">ps</span> <span class="token parameter variable">-fe</span> <span class="token operator">|</span> <span class="token function">grep</span> <span class="token function">docker</span>
</code></pre></div><ol start="2">
<li>拷贝/var/lib目录到挂载目录</li>
</ol>
<p>挂载目录以<code>/data</code>为例</p>
<div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">cp</span> <span class="token parameter variable">-r</span> /var/lib/docker /data/docker
</code></pre></div><ol start="3">
<li>备份原有数据</li>
</ol>
<div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">mv</span> /var/lib/docker /var/lib/docker_bk
</code></pre></div><ol start="4">
<li>创建软链接</li>
</ol>
<div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">ln</span> <span class="token parameter variable">-s</span> /data/docker /var/lib/docker

<span class="token comment"># 查看软链接是否生效</span>
ll /var/lib/docker
</code></pre></div><ol start="5">
<li>启动docker服务</li>
</ol>
<div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code>systemctl start <span class="token function">docker</span>
</code></pre></div><ol start="6">
<li>查看容器是否正常拉起</li>
</ol>
<div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">docker</span> <span class="token function">ps</span>
</code></pre></div><ol start="7">
<li>删掉备份目录</li>
</ol>
<p>如果迁移成功，可以删除备份的目录</p>
<div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">rm</span> <span class="token parameter variable">-rf</span> /var/lib/docker_bk
</code></pre></div>]]></content>
    <category term="笔记"/>
    <published>2023-08-31T00:00:00.000Z</published>
  </entry>
  <entry>
    <title type="text">使用CDN后 Apache 获取访问用户的真实 IP</title>
    <id>https://vlssu.github.io/blogs/notes/220301.html</id>
    <link href="https://vlssu.github.io/blogs/notes/220301.html"/>
    <updated>2023-10-02T17:17:23.000Z</updated>
    <summary type="html"><![CDATA[<p>当网站启用 CDN 会给获取访客 IP 带来障碍，由于多了个代理流程，故日志记录 IP 变为 CDN 的 IP。基于 Apache 的网站要解决这个问题，需要使用以下模块通过 HTTP 标头里的 <code>X_FORWARDED_FOR</code> 字段获取访客 IP</p>
<ul>
<li>mod_remoteip</li>
<li>mod_rpaf</li>
</ul>
<h2>mod_remoteip 模块</h2>
<h3>Apache 2.4</h3>
<p><code>Apache 2.4</code> 开始自带此模块，可用下面命令检查。</p>
<div class="language-httpd" data-ext="httpd" data-title="httpd"><pre class="language-httpd"><code># 查询 Apache 版本
/etc/init.d/httpd -v

# 查询 Apache 编译信息（可查看 httpd.conf 配置文件等路径，之后修改要知道）
/etc/init.d/httpd -V

# 列出 Apache 加载模块（里面有 remoteip_module 就说明已启用 mod_remoteip 模块）
/etc/init.d/httpd -t -D DUMP_MODULES

# 查看 Apache 选项帮助
/etc/init.d/httpd -h
</code></pre></div>]]></summary>
    <content type="html"><![CDATA[<p>当网站启用 CDN 会给获取访客 IP 带来障碍，由于多了个代理流程，故日志记录 IP 变为 CDN 的 IP。基于 Apache 的网站要解决这个问题，需要使用以下模块通过 HTTP 标头里的 <code>X_FORWARDED_FOR</code> 字段获取访客 IP</p>
<ul>
<li>mod_remoteip</li>
<li>mod_rpaf</li>
</ul>
<h2>mod_remoteip 模块</h2>
<h3>Apache 2.4</h3>
<p><code>Apache 2.4</code> 开始自带此模块，可用下面命令检查。</p>
<div class="language-httpd" data-ext="httpd" data-title="httpd"><pre class="language-httpd"><code># 查询 Apache 版本
/etc/init.d/httpd -v

# 查询 Apache 编译信息（可查看 httpd.conf 配置文件等路径，之后修改要知道）
/etc/init.d/httpd -V

# 列出 Apache 加载模块（里面有 remoteip_module 就说明已启用 mod_remoteip 模块）
/etc/init.d/httpd -t -D DUMP_MODULES

# 查看 Apache 选项帮助
/etc/init.d/httpd -h
</code></pre></div><div class="custom-container tip"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8h.01"></path><path d="M11 12h1v4h1"></path></g></svg><p class="custom-container-title">TIP</p><p>有些情况可能是安装了模块，但默认没有启用。这样可以通过查看 <code>httpd.conf</code> 配置文件确认，里面有下面这行则表示已安装 <code>mod_remoteip</code> 模块，取消行注释即可使之启用。</p>
<div class="language-text" data-ext="text" data-title="text"><pre class="language-text"><code>#LoadModule remoteip_module modules/mod_remoteip.so
</code></pre></div></div><h3>Apache 2.2.x</h3>
<p><code>Apache 2.2.x</code> 版本没有自带该模块，需要手动安装。首先下载这个基于 <code>Apache 2.4.1</code> 移植的 <code>mod_remoteip</code> 模块文件。如果是 <code>Apache</code> 高版本安装则下载对应版本（版本不同安装可能会报错）。</p>
<div class="language-text" data-ext="text" data-title="text"><pre class="language-text"><code>wget &lt;https://raw.githubusercontent.com/ttkzw/mod_remoteip-httpd22/master/mod_remoteip.c&gt;
</code></pre></div><p>安装 <code>httpd-devel</code> 和 <code>gcc</code> 编译器以便稍后可以通过 <code>apxs</code> 扩展工具安装 <code>Apache</code> 模块。</p>
<div class="language-text" data-ext="text" data-title="text"><pre class="language-text"><code>yum -y install httpd-devel gcc gcc-c++
</code></pre></div><p>运行下面命令安装 <code>mod_remoteip</code> 模块（其中参数选项含义可查阅此文档）。</p>
<div class="language-text" data-ext="text" data-title="text"><pre class="language-text"><code>apxs -i -a -c mod_remoteip.c
</code></pre></div><h2>创建 httpd-remoteip.conf 配置文件</h2>
<p>在 <code>Apache</code> 扩展目录下创建 <code>remoteip</code> 配置文件。之前有介绍如何查看 <code>Apache</code> 目录路径。</p>
<div class="language-text" data-ext="text" data-title="text"><pre class="language-text"><code>vi /www/server/apache/conf/extra/httpd-remoteip.conf
</code></pre></div><p>使用 <code>RemoteIPProxiesHeader</code> 从指定字段获取信任 CDN IP，这样不用设置指定代理 IP。更多 <code>Apache mod_remoteip</code> 选项参数介绍可参考<a href="https://httpd.apache.org/docs/2.4/mod/mod_remoteip.html" target="_blank" rel="noopener noreferrer">[这个文档]</a></p>
<div class="language-text" data-ext="text" data-title="text"><pre class="language-text"><code>RemoteIPHeader X-Forwarded-For
RemoteIPProxiesHeader X-Forwarded-By
</code></pre></div><h3>编辑 httpd.conf 配置文件</h3>
<p>先确认 <code>httpd.conf</code> 里已设置加载 <code>mod_remoteip</code> 模块，参数如下。</p>
<div class="language-text" data-ext="text" data-title="text"><pre class="language-text"><code>LoadModule remoteip_module modules/mod_remoteip.so
</code></pre></div><p>在其下面添加一句，以链接上步创建的 <code>mod_remoteip</code> 配置文件。</p>
<div class="language-text" data-ext="text" data-title="text"><pre class="language-text"><code>Include conf/extra/httpd-remoteip.conf
</code></pre></div><p>再在文件里修改记录日志格式，使之记录访客 IP。搜索下面两行内容。</p>
<div class="language-text" data-ext="text" data-title="text"><pre class="language-text"><code>LogFormat "%h %l %u %t \"%r\" %&gt;s %b \"%{Referer}i\" \"%{User-Agent}i\"" combined
LogFormat "%h %l %u %t \"%r\" %&gt;s %b" common
</code></pre></div><p>将里面的 %h 改为 %a（完整格式选项可查看此文档），修改后的内容如下。</p>
<div class="language-text" data-ext="text" data-title="text"><pre class="language-text"><code>LogFormat "%a %l %u %t \"%r\" %&gt;s %b \"%{Referer}i\" \"%{User-Agent}i\"" combined
LogFormat "%a %l %u %t \"%r\" %&gt;s %b" common
</code></pre></div><p>保存文件修改，<code>/etc/init.d/httpd restart</code> 重启服务生效。</p>
<h2>CloudFlare</h2>
<p>在 <code>Apache</code> 扩展目录下创建 <code>remoteip</code> 配置文件。之前有介绍如何查看 <code>Apache</code> 目录路径。</p>
<div class="language-text" data-ext="text" data-title="text"><pre class="language-text"><code>vi /www/server/apache/conf/extra/httpd-remoteip.conf
</code></pre></div><p>内容如下。首行指定代理 IP <code>Header</code>名，次行设置信任的 IP 地址和范围（多个用空格隔开。CloudFlare CDN IP 列表可<a href="https://www.cloudflare.com/ips/" target="_blank" rel="noopener noreferrer">在这获取</a>）</p>
<div class="language-text" data-ext="text" data-title="text"><pre class="language-text"><code>RemoteIPHeader X-Forwarded-For
RemoteIPInternalProxy 173.245.48.0/20 103.21.244.0/22 ...
</code></pre></div><p>如果要添加的 CDN IP 太多，可用 <code>RemoteIPInternalProxyList</code> 指向一个 IP 列表文件（里面用空格或换行分隔）。</p>
<div class="language-text" data-ext="text" data-title="text"><pre class="language-text"><code>RemoteIPHeader X-Forwarded-For
RemoteIPInternalProxyList conf/cloudflare_ip.lst
</code></pre></div><p>如果用这种方式可以使用下面的脚本</p>
<details class="custom-container details"><summary class="custom-container-title">自动更新</summary><div class="language-text" data-ext="text" data-title="text"><pre class="language-text"><code># !/usr/bin/env bash

echo "# CloudFlare Proxy IP;" &gt; /usr/local/apache/conf/cloudflare_ip.lst;
for i in `curl https://www.cloudflare.com/ips-v4`; do
    echo "$i" &gt;&gt; /usr/local/apache/conf/cloudflare_ip.lst;
done
for i in `curl https://www.cloudflare.com/ips-v6`; do
    echo "$i" &gt;&gt; /usr/local/apache/conf/cloudflare_ip.lst;
done
echo "# End;" &gt;&gt; /usr/local/apache/conf/cloudflare_ip.lst;
</code></pre></div><p>创建后 <code>chmod +x ./update_cloudflare_ip.sh</code> 赋予脚本可执行权限。然后 <code>crontab -e</code> 添加定期任务，例如每月 1 号凌晨 5 点 30 运行更新。</p>
<div class="language-text" data-ext="text" data-title="text"><pre class="language-text"><code>30 5 1 ** /bin/bash /root/update_cloudflare_ip.sh 2&gt;&amp;1 &gt; /dev/null
</code></pre></div></details><p>::: right
参考 <a href="https://www.hostarr.com/apache-mod_remoteip/" target="_blank" rel="noopener noreferrer">主机指南</a>
:::</p>
]]></content>
    <category term="笔记"/>
    <published>2022-03-01T00:00:00.000Z</published>
  </entry>
  <entry>
    <title type="text">使用CDN后 NGINX 获取访问用户的真实 IP</title>
    <id>https://vlssu.github.io/blogs/notes/220505.html</id>
    <link href="https://vlssu.github.io/blogs/notes/220505.html"/>
    <updated>2023-10-02T17:17:23.000Z</updated>
    <summary type="html"><![CDATA[<p>当网站启用 CDN 会给获取访客 IP 带来障碍，由于多了个代理流程，故日志记录 IP 变为 CDN 的 IP。基于 NGINX 的网站要解决这个问题，需要使用以下模块通过 HTTP 标头里的 <code>X_FORWARDED_FOR</code> 字段获取访客 IP</p>
<p>修改nginx.conf配置文件</p>
<div class="language-conf" data-ext="conf" data-title="conf"><pre class="language-conf"><code>http
    {
    …
    log_format  main  '$http_x_forwarded_for - $remote_user [$time_local] "$request" ' 
                    '$status $body_bytes_sent "$http_referer" ' 
                   '"$http_user_agent" ';
    …        
</code></pre></div>]]></summary>
    <content type="html"><![CDATA[<p>当网站启用 CDN 会给获取访客 IP 带来障碍，由于多了个代理流程，故日志记录 IP 变为 CDN 的 IP。基于 NGINX 的网站要解决这个问题，需要使用以下模块通过 HTTP 标头里的 <code>X_FORWARDED_FOR</code> 字段获取访客 IP</p>
<p>修改nginx.conf配置文件</p>
<div class="language-conf" data-ext="conf" data-title="conf"><pre class="language-conf"><code>http
    {
    …
    log_format  main  '$http_x_forwarded_for - $remote_user [$time_local] "$request" ' 
                    '$status $body_bytes_sent "$http_referer" ' 
                   '"$http_user_agent" ';
    …        
</code></pre></div><div class="language-conf" data-ext="conf" data-title="conf"><pre class="language-conf"><code>server
    {
        …
        set_real_ip_from 127.0.0.1; #服务器本地
        real_ip_header    X-Forwarded-For;
        real_ip_recursive on;
        …
    }
</code></pre></div><!--
https://cloud.tencent.com/developer/article/1050223
-->]]></content>
    <category term="笔记"/>
    <published>2022-05-05T00:00:00.000Z</published>
  </entry>
  <entry>
    <title type="text">修复 BTpanel(宝塔) Python 环境（SSL续订错误）</title>
    <id>https://vlssu.github.io/blogs/notes/220925.html</id>
    <link href="https://vlssu.github.io/blogs/notes/220925.html"/>
    <updated>2023-10-02T17:17:23.000Z</updated>
    <summary type="html"><![CDATA[<p>在使用宝塔的时候，Python 很容易炸，在续签ssl证书的时候尤为明显，而这些问题基本都是 Python 惹的祸</p>
<div class="custom-container tip"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8h.01"></path><path d="M11 12h1v4h1"></path></g></svg><p class="custom-container-title">TIP</p><p>在运行以下命令并不会导致数据重置等现象。但为了保险起见，建议您先备份后在执行。</p>
</div>]]></summary>
    <content type="html"><![CDATA[<p>在使用宝塔的时候，Python 很容易炸，在续签ssl证书的时候尤为明显，而这些问题基本都是 Python 惹的祸</p>
<div class="custom-container tip"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8h.01"></path><path d="M11 12h1v4h1"></path></g></svg><p class="custom-container-title">TIP</p><p>在运行以下命令并不会导致数据重置等现象。但为了保险起见，建议您先备份后在执行。</p>
</div><div class="language-text" data-ext="text" data-title="text"><pre class="language-text"><code>rm -rf /www/server/panel/pyenv
rm -rf /www/server/panel/class
curl http://download.bt.cn/install/update_panel.sh|bash
</code></pre></div><div class="custom-container tip"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8h.01"></path><path d="M11 12h1v4h1"></path></g></svg><p class="custom-container-title">小提示</p><p>当然，可以再运行一遍安装命令，放心，数据并不会覆盖，唯一覆盖的就是<strong>面板密码</strong>和<strong>面板首页的应用快捷入口</strong>变了。这些倒是小问题，但面板修复了倒是真的呀</p>
</div><div class="language-text" data-ext="text" data-title="text"><pre class="language-text"><code>// Centos安装脚本
yum install -y wget &amp;&amp; wget -O install.sh http://download.bt.cn/install/install_6.0.sh &amp;&amp; sh install.sh ed8484bec
// Ubuntu/Deepin安装脚本
wget -O install.sh http://download.bt.cn/install/install-ubuntu_6.0.sh &amp;&amp; sudo bash install.sh ed8484bec
// Debian安装脚本
wget -O install.sh http://download.bt.cn/install/install-ubuntu_6.0.sh &amp;&amp; bash install.sh ed8484bec
// 万能安装脚本
if [ -f /usr/bin/curl ];then curl -sSO https://download.bt.cn/install/install_panel.sh;else wget -O install_panel.sh https://download.bt.cn/install/install_panel.sh;fi;bash install_panel.sh ed8484bec
// 国产龙芯架构安装脚本
wget -O install_panel.sh http://download.bt.cn/install/0/loongarch64/loongarch64_install_panel.sh &amp;&amp; bash install_panel.sh ed8484bec
</code></pre></div>]]></content>
    <category term="笔记"/>
    <published>2022-09-25T00:00:00.000Z</published>
  </entry>
  <entry>
    <title type="text">android stadio Gradle 编译报错</title>
    <id>https://vlssu.github.io/blogs/notes/210209.html</id>
    <link href="https://vlssu.github.io/blogs/notes/210209.html"/>
    <updated>2023-10-02T17:17:23.000Z</updated>
    <summary type="html"><![CDATA[<p>我在编译插件时一直在下载<code>fastutil-xxx.jar</code></p>
<p>原因是需要翻墙(可惜我试过了，没用)。剩下的方法就是改镜像源了，在主要编译文件，如<code>build.gradle</code>，找到主代码组里头将镜像源改了。</p>
<p>我一改完就好了，不仅不用挂梯子，甚至速度贼快</p>
<div class="language-text" data-ext="text" data-title="text"><pre class="language-text"><code>buildscript {
    
    repositories {
        maven{ url = "http://maven.aliyun.com/nexus/content/groups/public/" }
        google()
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.1.2'
        

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        maven{ url = "http://maven.aliyun.com/nexus/content/groups/public/" }
        google()
        jcenter()
    }
}
</code></pre></div>]]></summary>
    <content type="html"><![CDATA[<p>我在编译插件时一直在下载<code>fastutil-xxx.jar</code></p>
<p>原因是需要翻墙(可惜我试过了，没用)。剩下的方法就是改镜像源了，在主要编译文件，如<code>build.gradle</code>，找到主代码组里头将镜像源改了。</p>
<p>我一改完就好了，不仅不用挂梯子，甚至速度贼快</p>
<div class="language-text" data-ext="text" data-title="text"><pre class="language-text"><code>buildscript {
    
    repositories {
        maven{ url = "http://maven.aliyun.com/nexus/content/groups/public/" }
        google()
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.1.2'
        

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        maven{ url = "http://maven.aliyun.com/nexus/content/groups/public/" }
        google()
        jcenter()
    }
}
</code></pre></div>]]></content>
    <category term="笔记"/>
    <published>2021-02-09T00:00:00.000Z</published>
  </entry>
  <entry>
    <title type="text">数控编程中常用的指令（G代码、M代码）</title>
    <id>https://vlssu.github.io/blogs/notes/210913.html</id>
    <link href="https://vlssu.github.io/blogs/notes/210913.html"/>
    <updated>2023-10-02T17:17:23.000Z</updated>
    <summary type="html"><![CDATA[<p>在数控编程中，有的编程指令是不常用的，有的只适用于某些特殊的数控机床。这里只要介绍一些常用的编程指令，对于不常用的编程指令，请参考使用的数控机床编程手册。</p>
<h2>准备功能指令（G指令）</h2>
<p>准备功能指令由字符G和其后的1~3位数字组成，其主要功能是指定机床的运动方式，为数控系统的插补运算作准备。G指令的有关规定和含义见表1。</p>
<table>
<thead>
<tr>
<th style="text-align:center">G代码</th>
<th style="text-align:center">功能</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">G00</td>
<td style="text-align:center">定位（快速进给）</td>
</tr>
<tr>
<td style="text-align:center">G01</td>
<td style="text-align:center">直线插补（切削进给）</td>
</tr>
<tr>
<td style="text-align:center">G02</td>
<td style="text-align:center">圆弧插补（顺时针）</td>
</tr>
<tr>
<td style="text-align:center">G03</td>
<td style="text-align:center">圆弧插补（逆时针）</td>
</tr>
<tr>
<td style="text-align:center">G17</td>
<td style="text-align:center">XY平面选择</td>
</tr>
<tr>
<td style="text-align:center">G18</td>
<td style="text-align:center">ZX平面选择</td>
</tr>
<tr>
<td style="text-align:center">G19</td>
<td style="text-align:center">YZ平面选择</td>
</tr>
<tr>
<td style="text-align:center">G40</td>
<td style="text-align:center">取消刀具半径补偿</td>
</tr>
<tr>
<td style="text-align:center">G41</td>
<td style="text-align:center">刀具半径左补偿</td>
</tr>
<tr>
<td style="text-align:center">G42</td>
<td style="text-align:center">刀具半径右补偿</td>
</tr>
<tr>
<td style="text-align:center">G43</td>
<td style="text-align:center">取消刀具长度补偿</td>
</tr>
<tr>
<td style="text-align:center">G44</td>
<td style="text-align:center">刀具长度正偏置（刀具延长）</td>
</tr>
<tr>
<td style="text-align:center">G49</td>
<td style="text-align:center">刀具长度负偏置（刀具缩短）</td>
</tr>
<tr>
<td style="text-align:center">G54—G59</td>
<td style="text-align:center">工作坐标系</td>
</tr>
<tr>
<td style="text-align:center">G80</td>
<td style="text-align:center">固定循环取消</td>
</tr>
<tr>
<td style="text-align:center">G81</td>
<td style="text-align:center">钻孔固定循环</td>
</tr>
<tr>
<td style="text-align:center">G83</td>
<td style="text-align:center">深孔钻孔固定循环</td>
</tr>
<tr>
<td style="text-align:center">G90</td>
<td style="text-align:center">绝对坐标编程方式</td>
</tr>
<tr>
<td style="text-align:center">G91</td>
<td style="text-align:center">相对坐标编程方式</td>
</tr>
</tbody>
</table>]]></summary>
    <content type="html"><![CDATA[<p>在数控编程中，有的编程指令是不常用的，有的只适用于某些特殊的数控机床。这里只要介绍一些常用的编程指令，对于不常用的编程指令，请参考使用的数控机床编程手册。</p>
<h2>准备功能指令（G指令）</h2>
<p>准备功能指令由字符G和其后的1~3位数字组成，其主要功能是指定机床的运动方式，为数控系统的插补运算作准备。G指令的有关规定和含义见表1。</p>
<p>|	G代码	|	功能	|
|	:</p>
]]></content>
    <category term="笔记"/>
    <published>2021-09-13T00:00:00.000Z</published>
  </entry>
  <entry>
    <title type="text">MySQL 8.0数据导入5.7及以下版本</title>
    <id>https://vlssu.github.io/blogs/notes/220601.html</id>
    <link href="https://vlssu.github.io/blogs/notes/220601.html"/>
    <updated>2023-10-02T17:17:23.000Z</updated>
    <summary type="html"><![CDATA[<p>前段时间我为了尝鲜 MySQL 8.0，谁知道占内存特别多，一些低内存的想用作备用的，但是 5.7 相对于 8.0 改了字符，导致不兼容了，所以我只能去网上找了些方法</p>
<ol>
<li>8.0 于 5.7 之间的改动变化
表编码为 <code>utf8mb4_0900_ai_ci</code>
排序规则为 <code>utf8mb4</code></li>
</ol>
<p>因此打开<code>.sql</code>文件 使用<code>notpad++</code>或者<code>txt</code>都可以，进行全局替换就好</p>
<table>
<thead>
<tr>
<th style="text-align:center">原值</th>
<th style="text-align:center">替换为</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">utf8mb4_0900_ai_ci</td>
<td style="text-align:center">utf8_general_ci</td>
</tr>
<tr>
<td style="text-align:center">utf8_croatian_ci</td>
<td style="text-align:center">utf8_general_ci</td>
</tr>
<tr>
<td style="text-align:center">utf8mb4_general_ci</td>
<td style="text-align:center">utf8_general_ci</td>
</tr>
<tr>
<td style="text-align:center">utf8mb4</td>
<td style="text-align:center">utf8</td>
</tr>
</tbody>
</table>]]></summary>
    <content type="html"><![CDATA[<p>前段时间我为了尝鲜 MySQL 8.0，谁知道占内存特别多，一些低内存的想用作备用的，但是 5.7 相对于 8.0 改了字符，导致不兼容了，所以我只能去网上找了些方法</p>
<ol>
<li>8.0 于 5.7 之间的改动变化
表编码为 <code>utf8mb4_0900_ai_ci</code>
排序规则为 <code>utf8mb4</code></li>
</ol>
<p>因此打开<code>.sql</code>文件 使用<code>notpad++</code>或者<code>txt</code>都可以，进行全局替换就好</p>
<p>|原值|替换为|
|:</p>
]]></content>
    <category term="笔记"/>
    <published>2022-06-01T00:00:00.000Z</published>
  </entry>
</feed>