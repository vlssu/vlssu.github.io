import{_ as l,r as i,o as d,c as r,b as e,d as n,e as c,f as a}from"./app-0bQKjSqq.js";const o="/assets/pterodactyl_1-i5QwizVX.png",s="/assets/pterodactyl_3-s9Vg719_.jpg",p="/assets/pterodactyl_4-hxP_xoLb.png",h="/assets/pterodactyl_5-wEagjTTZ.png",u="/assets/pterodactyl_6-OV2EBRWf.png",v="/assets/pterodactyl_2-4ww8wwUZ.png",m={},b={href:"https://pterodactyl.top",target:"_blank",rel:"noopener noreferrer"},g=e("h2",{id:"选择服务器操作系统",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#选择服务器操作系统","aria-hidden":"true"},"#"),n(" 选择服务器操作系统")],-1),x=e("p",null,"翼龙可在多种操作系统上运行，因此请选择最适合您使用的操作系统。",-1),w=e("div",{class:"custom-container warning"},[e("svg",{xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},[e("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[e("circle",{cx:"12",cy:"12",r:"9"}),e("path",{d:"M12 8v4"}),e("path",{d:"M12 16h.01"})])]),e("p",{class:"custom-container-title"},"WARNING"),e("p",null,[n("由于与 Docker 不兼容，翼龙不支持大多数 OpenVZ 系统。如果您计划在基于 OpenVZ 的系统上运行此软件，您将很大概率不会成功。"),e("br"),n(" 不过翼龙面板前端就没那么需求了，只要阁下前端服务器能装 "),e("code",null,"BT-Panel"),n("，和 "),e("code",null,"LNMP"),n(" 或者 "),e("code",null,"LAMP"),n("，就可以用来搭建翼龙面板前端了。一般服务器均能满足前端的搭建要求。")])],-1),k=a(`<table><thead><tr><th style="text-align:left;">操作系统</th><th style="text-align:left;">版本</th><th style="text-align:center;">支持状况</th><th style="text-align:left;">注意事项</th></tr></thead><tbody><tr><td style="text-align:left;"><strong>Ubuntu</strong></td><td style="text-align:left;">18.04</td><td style="text-align:center;">✅</td><td style="text-align:left;">文档基于 Ubuntu 18.04 作为操作系统所编写的。</td></tr><tr><td style="text-align:left;"></td><td style="text-align:left;">20.04</td><td style="text-align:center;">✅</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;"></td><td style="text-align:left;">22.04</td><td style="text-align:center;">✅</td><td style="text-align:left;">MariaDB 无需 repo 安装脚本即可安装。</td></tr><tr><td style="text-align:left;"><strong>CentOS</strong></td><td style="text-align:left;">7</td><td style="text-align:center;">✅</td><td style="text-align:left;">需要额外的 repos。</td></tr><tr><td style="text-align:left;"></td><td style="text-align:left;">8</td><td style="text-align:center;">✅</td><td style="text-align:left;">请注意，CentOS 8 已停运。使用 Rocky 或 Alma Linux。</td></tr><tr><td style="text-align:left;"><strong>Debian</strong></td><td style="text-align:left;">10</td><td style="text-align:center;">✅</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;"></td><td style="text-align:left;">11</td><td style="text-align:center;">✅</td><td style="text-align:left;"></td></tr></tbody></table><h2 id="安装宝塔面板" tabindex="-1"><a class="header-anchor" href="#安装宝塔面板" aria-hidden="true">#</a> 安装宝塔面板</h2><p>此界面提供的安装脚本具有时间局限性，可能落后于官方最新版本，有条件的话请去宝塔官网查看</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># Centos安装脚本</span>
yum <span class="token function">install</span> <span class="token parameter variable">-y</span> <span class="token function">wget</span> <span class="token operator">&amp;&amp;</span> <span class="token function">wget</span> <span class="token parameter variable">-O</span> install.sh http://download.bt.cn/install/install_6.0.sh <span class="token operator">&amp;&amp;</span> <span class="token function">sh</span> install.sh ed8484bec

<span class="token comment"># Ubuntu/Deepin安装脚本</span>
<span class="token function">wget</span> <span class="token parameter variable">-O</span> install.sh http://download.bt.cn/install/install-ubuntu_6.0.sh <span class="token operator">&amp;&amp;</span> <span class="token function">sudo</span> <span class="token function">bash</span> install.sh ed8484bec

<span class="token comment"># Debian安装脚本</span>
<span class="token function">wget</span> <span class="token parameter variable">-O</span> install.sh http://download.bt.cn/install/install-ubuntu_6.0.sh <span class="token operator">&amp;&amp;</span> <span class="token function">bash</span> install.sh ed8484bec

<span class="token comment"># 万能安装脚本</span>
<span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token parameter variable">-f</span> /usr/bin/curl <span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">then</span> <span class="token function">curl</span> <span class="token parameter variable">-sSO</span> https://download.bt.cn/install/install_panel.sh<span class="token punctuation">;</span><span class="token keyword">else</span> <span class="token function">wget</span> <span class="token parameter variable">-O</span> install_panel.sh https://download.bt.cn/install/install_panel.sh<span class="token punctuation">;</span><span class="token keyword">fi</span><span class="token punctuation">;</span><span class="token function">bash</span> install_panel.sh ed8484bec
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="安装lnmp或lamp基础环境" tabindex="-1"><a class="header-anchor" href="#安装lnmp或lamp基础环境" aria-hidden="true">#</a> 安装LNMP或LAMP基础环境</h2><p><code>LNMP</code> 和 <code>LAMP</code> 分别代表着 <code>Linux</code> <code>Nginx\\Apache</code> <code>Mysql</code> <code>PHP</code><br> 阁下选择版本请务必保证 <code>PHP</code>版本 &gt;= <code>8.1</code>、 <code>MySQL</code>版本 &gt;= <code>5.7</code><br> 这一般会在阁下第一次登录宝塔面板时提示安装，我不在此赘述，若阁下错过提示，可点击 <code>软件商店</code> 自行安装<br> 在安装完毕后，在 <code>PHP</code> 的<strong>禁用函数</strong>里删除 <code>putenv</code>、 <code>exec</code>、 <code>proc_open</code>、 <code>shell_exec</code>，并且在扩展里安装 <code>fileinfo</code> <code>redis</code></p><h2 id="新建站点并开始构建" tabindex="-1"><a class="header-anchor" href="#新建站点并开始构建" aria-hidden="true">#</a> 新建站点并开始构建</h2><h3 id="新建站点" tabindex="-1"><a class="header-anchor" href="#新建站点" aria-hidden="true">#</a> 新建站点</h3><p>我觉得你应该会使用宝塔面板来新建一个网站</p><p><img src="`+o+`" alt="如果你看到我说明图挂了"></p><h3 id="下载并上传程序文件至网站目录" tabindex="-1"><a class="header-anchor" href="#下载并上传程序文件至网站目录" aria-hidden="true">#</a> 下载并上传程序文件至网站目录</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>https://github.com/pterodactyl-china/panel/releases/latest/download/panel.tar.gz
<span class="token comment"># 如果阁下下不动这个文件，可以使用 gh-proxy 提供的CF反向代理来下载 链接如下</span>
https://mirror.ghproxy.com/https://github.com/pterodactyl-china/panel/releases/latest/download/panel.tar.gz
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="进入网站目录解压程序文件并设置环境文件" tabindex="-1"><a class="header-anchor" href="#进入网站目录解压程序文件并设置环境文件" aria-hidden="true">#</a> 进入网站目录解压程序文件并设置环境文件</h3><p>现在所有文件都已下载，我们需要进入网站目录解压刚刚上传的 <code>panel.tar.gz</code> 压缩包</p><p>然后将 <code>.env.example</code> 文件重命名为 <code>.env</code></p><h3 id="使用-composer-安装相关依赖" tabindex="-1"><a class="header-anchor" href="#使用-composer-安装相关依赖" aria-hidden="true">#</a> 使用 Composer 安装相关依赖</h3><p>点击 网站的 <code>设置</code> ，再点击 <code>设置</code> 里的 <code>Composer</code><br><img src="`+s+'" alt="如果你看到我说明图挂了"><img src="'+p+`" alt="如果你看到我说明图挂了"></p><p>先点击 <code>升级Composer</code> 确保其为最新版本，并按红圈所示选择<br> 在 <code>补充命令</code> 中输入以下命令后点击 <code>执行</code> ，等待命令执行完成后关闭窗口即可。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>composer install --no-dev --optimize-autoloader
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,19),f=e("div",{class:"custom-container warning"},[e("svg",{xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},[e("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[e("circle",{cx:"12",cy:"12",r:"9"}),e("path",{d:"M12 8v4"}),e("path",{d:"M12 16h.01"})])]),e("p",{class:"custom-container-title"},"WARNING"),e("p",null,"在进行以下步骤之前，请阁下为面板前端新建一个数据库，我相信阁下的聪明脑袋一定会用宝塔面板新建一个数据库吧。")],-1),y=a('<h3 id="伪静态及二级目录设置" tabindex="-1"><a class="header-anchor" href="#伪静态及二级目录设置" aria-hidden="true">#</a> 伪静态及二级目录设置</h3><p>点击 网站的 <code>设置</code> ，进入设置界面 <img src="'+s+'" alt="如果你看到我说明图挂了"></p><h4 id="伪静态设置" tabindex="-1"><a class="header-anchor" href="#伪静态设置" aria-hidden="true">#</a> 伪静态设置</h4><p>点击 <code>设置</code> 里的 <code>伪静态</code><br><img src="'+h+'" alt="如果你看到我说明图挂了"></p><p>先点击左上角的伪静态模板，并使用 <code>laravel5</code> 伪静态模板 点击 <code>保存</code> 即可设置成功。</p><h4 id="二级目录设置" tabindex="-1"><a class="header-anchor" href="#二级目录设置" aria-hidden="true">#</a> 二级目录设置</h4><p>点击 <code>设置</code> 里的 <code>网站目录</code><img src="'+u+`" alt="如果你看到我说明图挂了"></p><p>点击 <code>运行目录</code> 一栏，并选择 <code>/public</code> 点击 <code>保存</code> 即可设置成功。</p><h3 id="生成app-key并进行环境配置" tabindex="-1"><a class="header-anchor" href="#生成app-key并进行环境配置" aria-hidden="true">#</a> 生成APP_KEY并进行环境配置</h3><p>现在我们要开始输入一些指令了，请阁下先记住在宝塔新建站点时设置的站点目录</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment">#进入站点目录</span>
<span class="token builtin class-name">cd</span> <span class="token punctuation">{</span>阁下在宝塔新建站点时设置的站点目录<span class="token punctuation">}</span>
<span class="token comment"># 例如 cd /www/wwwroot/pterodactyl</span>

<span class="token comment"># 注意，以下指令仅针对于第一次安装部署翼龙面板前端</span>
<span class="token comment"># 且对应数据库内无数据时执行，若阁下并非第一次安装且数据库内有数据，请忽略此指令</span>
php artisan key:generate <span class="token parameter variable">--force</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment">#下面两个指令是设置一些基础信息和数据库配置，阁下应该在此步骤之前为面板前端新建一个数据库</span>
php artisan p:environment:setup
php artisan p:environment:database

<span class="token comment"># 下面这个指令是配置面板的发件系统，如果阁下不需要可忽略</span>
<span class="token comment"># 若使用 PHP 自带的 mail 拓展 (不推荐使用), 请在执行以下指令后选择 &quot;mail&quot;。</span>
<span class="token comment"># 若使用自定义 SMTP 服务器，请在执行以下指令后选择 &quot;smtp&quot;。</span>
php artisan p:environment:mail
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>现在我们要将面板所有的核心数据写入我们之前为面板准备的数据库内。</p><p><strong>此步骤可能花费较长时间来进行执行，花费的时间取决于您的主机性能，主机与数据库主机的网络连接状态等因素。请耐心等待数据导入完成，切勿中途使用 CTRL+C 强制中断执行！</strong></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>php artisan migrate <span class="token parameter variable">--seed</span> <span class="token parameter variable">--force</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="添加首位用户" tabindex="-1"><a class="header-anchor" href="#添加首位用户" aria-hidden="true">#</a> 添加首位用户</h3><p>数据库配置完成后，您需要为面板创建一个管理用户，以便您可以登录面板。 为此，请运行以下命令。 并保证账户密码满足以下要求：8 个字符，大小写混合，至少一个数字。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>php artisan p:user:make
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="设置程序文件权限" tabindex="-1"><a class="header-anchor" href="#设置程序文件权限" aria-hidden="true">#</a> 设置程序文件权限</h3><p>我们需要进入网站目录并全选设置文件权限为 <code>755</code> 所有者为 <code>www</code></p><p><img src="`+v+`" alt="如果你看到我说明图挂了"></p><h2 id="注册队列监听服务" tabindex="-1"><a class="header-anchor" href="#注册队列监听服务" aria-hidden="true">#</a> 注册队列监听服务</h2><p>我们使用队列来使应用程序更快，并在后台处理发送电子邮件和其他操作。您需要设置工作队列以处理这些操作。</p><h3 id="crontab-定时任务设置" tabindex="-1"><a class="header-anchor" href="#crontab-定时任务设置" aria-hidden="true">#</a> Crontab 定时任务设置</h3><p>我们需要做的第一件事是创建一个新的 Cronjob，它每分钟运行一次以处理特定的任务，例如会话清理并将计划任务发送到守护进程。 您需要使用 <code>sudo crontab -e</code> 打开您的 <code>crontab</code>，然后将以下字符串以新一行粘贴进去，并保存更改。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>* * * * * php /www/wwwroot/pterodactyl/artisan schedule:run <span class="token operator">&gt;&gt;</span> /dev/null <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span><span class="token file-descriptor important">&amp;1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="创建队列监听服务" tabindex="-1"><a class="header-anchor" href="#创建队列监听服务" aria-hidden="true">#</a> 创建队列监听服务</h3><p>接下来，您需要创建一个新的 systemd 来保持我们的队列进程在后台运行。 该队列负责发送电子邮件并为翼龙面板处理许多其他后台任务。</p><p>在 <code>/etc/systemd/system</code> 文件夹中创建一个名为 <code>pteroq.service</code> 的文件，其内容如下。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code># 翼龙工作队列文件
# ----------------------------------

[Unit]
Description=Pterodactyl Queue Worker
# After=redis-server.service

[Service]
# 在某些系统上用户和组可能不同。
# 有些系统使用 \`apache\` 或 \`nginx\` 作为用户和组。
User=www
Group=www
Restart=always
ExecStart=/usr/bin/php /www/wwwroot/pterodactyl/artisan queue:work --queue=high,standard,low --sleep=3 --tries=3
StartLimitInterval=180
StartLimitBurst=30
RestartSec=5s

[Install]
WantedBy=multi-user.target
</code></pre><div class="highlight-lines"><br><br><br><br><br><div class="highlight-line"> </div><br><br><br><br><br><br><br><div class="highlight-line"> </div><br><br><br><br><br><br></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,30),_=e("div",{class:"custom-container tip"},[e("svg",{xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},[e("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[e("circle",{cx:"12",cy:"12",r:"9"}),e("path",{d:"M12 8h.01"}),e("path",{d:"M11 12h1v4h1"})])]),e("p",{class:"custom-container-title"},"CentOS"),e("p",null,[n("如果您使用的是 CentOS，则需要在 "),e("code",null,"After="),n(" 一行将 "),e("code",null,"redis-server.service"),n(" 替换为 "),e("code",null,"redis.service"),n("，以确保 "),e("code",null,"redis"),n(" 在工作队列之前启动。")])],-1),P=e("div",{class:"custom-container tip"},[e("svg",{xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},[e("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[e("circle",{cx:"12",cy:"12",r:"9"}),e("path",{d:"M12 8h.01"}),e("path",{d:"M11 12h1v4h1"})])]),e("p",{class:"custom-container-title"},"TIP"),e("p",null,[n("如果你没有使用 "),e("code",null,"redis"),n(" 做任何事情，你应该删除 "),e("code",null,"After="),n(" 一行，否则服务启动时会遇到错误。"),e("br"),n(" 如果你的面板路径并不是 "),e("code",null,"/www/wwwroot/pterodactyl/"),n("，请替换为你面板的绝对路径，否则邮件服务将无法使用。"),e("br"),n(" 如果你宝塔默认命令行使用的并不是 "),e("code",null,"8.1"),n("PHP 可以尝试使用绝对路径，将 "),e("code",null,"/usr/bin/php"),n(" 改为 "),e("code",null,"/www/server/php/81/bin/php")])],-1),C=a(`<p>如果您在系统中使用 redis，则需要确保启用它会在引导时启动。您可以通过运行以下命令来执行此操作：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> systemctl <span class="token builtin class-name">enable</span> <span class="token parameter variable">--now</span> redis-server
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>最后，启动队列监听服务并设置开启自动启动</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> systemctl <span class="token builtin class-name">enable</span> <span class="token parameter variable">--now</span> pteroq.service
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,4);function M(L,S){const t=i("ExternalLinkIcon");return d(),r("div",null,[e("p",null,[n("::: theorem 我参与了此项目的汉化，而我是负责面板的开发版汉化（此开发版非比开发版），如果上游仓库更新，这里会同步更新，当然，我在使用过程中出现问题我也会第一时间去修复这些。现阶段更新频率降低（毕竟能汉化的基本汉化完了）。 ::: right 详情请参阅"),e("a",b,[n("翼龙中国文档"),c(t)]),n(" :::")]),g,x,w,k,f,y,_,P,C])}const N=l(m,[["render",M],["__file","pterodactyl.html.vue"]]);export{N as default};
