import{_ as o,r as c,o as u,c as m,a as p,b as n,d as e,e as s,w as a,f as i}from"./app-jWkSduDP.js";const h="/assets/mcsm_1-GrXvcdBU.png",v="/assets/mcsm_2-DXyjo6xP.png",b="/assets/mcsm_3-5UgjRZCq.png",k={},g=n("div",{class:"custom-container tip"},[n("svg",{xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},[n("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[n("circle",{cx:"12",cy:"12",r:"9"}),n("path",{d:"M12 8h.01"}),n("path",{d:"M11 12h1v4h1"})])]),n("p",{class:"custom-container-title"},"TIP"),n("ol",null,[n("li",null,"windows虽然图形UI很不错但性能优化不理想"),n("li",null,"Centos、Ubuntu操作方面会指令话，大大节省时间")])],-1),f=n("div",{class:"custom-container tip"},[n("svg",{xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},[n("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[n("circle",{cx:"12",cy:"12",r:"9"}),n("path",{d:"M12 8h.01"}),n("path",{d:"M11 12h1v4h1"})])]),n("p",{class:"custom-container-title"},"TIP"),n("p",null,"如果你并不想去学习如何自己搭建，可以使用源作者的安装指令（我的脚本没必要了）"),n("details",{class:"custom-container details"},[n("summary",{class:"custom-container-title"},"Linux"),n("p",null,[e("安装成功后，使用 "),n("code",null,"systemctl start mcsm"),e(" 命令即可启动面板")]),n("div",{class:"language-text line-numbers-mode","data-ext":"text"},[n("pre",{class:"language-text"},[n("code",null,`wget -qO- https://gitee.com/Suwingser/MCSManager-installer/raw/master/install.sh | bash
`)]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"})])])])],-1),_=n("h2",{id:"前期需要软件",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#前期需要软件","aria-hidden":"true"},"#"),e(" 前期需要软件")],-1),x={href:"https://www.lanzoui.com/i88wyvi",target:"_blank",rel:"noopener noreferrer"},w={href:"https://www.lanzoui.com/i88wyqd",target:"_blank",rel:"noopener noreferrer"},j=n("li",null,"服务端（本教程使用 Spigot）",-1),C=n("li",null,"Centos或Ubuntu主机一台 （教程使用 centos7.7）",-1),M=i('<h2 id="注意事项" tabindex="-1"><a class="header-anchor" href="#注意事项" aria-hidden="true">#</a> 注意事项</h2><ol><li>极力推荐Centos系统，Ubuntu系统未经博主测试</li><li>未标注哪个系统指令则两者都可适用</li><li>若标题注释了哪个系统那只能适用那个系统或另一个系统不需要输此指令</li></ol><h2 id="环境部署" tabindex="-1"><a class="header-anchor" href="#环境部署" aria-hidden="true">#</a> 环境部署</h2><h3 id="系统更新" tabindex="-1"><a class="header-anchor" href="#系统更新" aria-hidden="true">#</a> 系统更新</h3><ul><li>首先你要确保你的系统是最新的</li></ul>',5),y=n("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[n("pre",{class:"language-bash"},[n("code",null,[e("yum update "),n("span",{class:"token parameter variable"},"-y"),e(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"})])],-1),D=n("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[n("pre",{class:"language-bash"},[n("code",null,[n("span",{class:"token function"},"apt-get"),e(" update "),n("span",{class:"token parameter variable"},"-y"),e(`
`),n("span",{class:"token function"},"apt-get"),e(" upgrade "),n("span",{class:"token parameter variable"},"-y"),e(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),S=n("h3",{id:"安装node-js",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#安装node-js","aria-hidden":"true"},"#"),e(" 安装node.js")],-1),L=n("strong",null,"若发现国内下载很慢可以参考这篇来使用国内镜像部署",-1),U=n("strong",null,"[Linux系统如何安装node管理器]",-1),E=n("ol",null,[n("li",null,"安装Git")],-1),T=n("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[n("pre",{class:"language-bash"},[n("code",null,[e("yum "),n("span",{class:"token function"},"install"),e(),n("span",{class:"token function"},"git"),e(),n("span",{class:"token parameter variable"},"-y"),e(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"})])],-1),P=n("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[n("pre",{class:"language-bash"},[n("code",null,[n("span",{class:"token function"},"apt"),e(),n("span",{class:"token function"},"install"),e(),n("span",{class:"token function"},"git"),e(),n("span",{class:"token parameter variable"},"-y"),e(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"})])],-1),B=i(`<ol start="2"><li>安装node.js管理器等组件</li></ol><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> clone https://github.com/creationix/nvm.git ~/nvm
<span class="token comment"># 设置nvm 自动运行</span>
<span class="token builtin class-name">echo</span> <span class="token string">&quot;source ~/nvm/nvm.sh&quot;</span> <span class="token operator">&gt;&gt;</span> ~/.bashrc
<span class="token builtin class-name">source</span> ~/.bashrc
<span class="token comment"># 安装npm的v13版本</span>
nvm <span class="token function">install</span> v14.17.4
<span class="token comment"># 使用v13版本</span>
nvm use v14.17.4
<span class="token comment"># 安装npm最新版本并使用最新版本 //由于面板问题无法使用最新的</span>
<span class="token comment"># nvm install stable &amp;&amp; nvm use stable</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="请关闭终端重新打开或重新连接终端-再依次执行以下命令-重要" tabindex="-1"><a class="header-anchor" href="#请关闭终端重新打开或重新连接终端-再依次执行以下命令-重要" aria-hidden="true">#</a> 请关闭终端重新打开或重新连接终端 再依次执行以下命令（重要！）</h4><h3 id="安装java8" tabindex="-1"><a class="header-anchor" href="#安装java8" aria-hidden="true">#</a> 安装java8</h3>`,4),F=n("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[n("pre",{class:"language-bash"},[n("code",null,[n("span",{class:"token comment"},"# 安装java8 按需安装，建议直接下载用绝对链接来开服"),e(`
`),n("span",{class:"token comment"},"# yum install java-1.8.0-openjdk java-1.8.0-openjdk-devel"),e(`

`),n("span",{class:"token comment"},"# 安装java17"),e(`
yum `),n("span",{class:"token function"},"install"),e(` java-17-openjdk java-17-openjdk-devel
`),n("span",{class:"token comment"},"# 查看java版本"),e(`
`),n("span",{class:"token function"},"java"),e(),n("span",{class:"token parameter variable"},"-version"),e(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),I=n("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[n("pre",{class:"language-bash"},[n("code",null,[n("span",{class:"token comment"},"# apt install openjdk-8-jdk"),e(`

`),n("span",{class:"token function"},"apt"),e(),n("span",{class:"token function"},"install"),e(` openjdk-17-jdk
`),n("span",{class:"token comment"},"# 如果我们在服务器上安装了多个Java版本，我们可以使用 update-alternatives 来更改系统默认版本"),e(`
`),n("span",{class:"token comment"},"# 要维持当前值[*]请按<回车键>，或者键入选择的编号：<br>"),e(`
`),n("span",{class:"token comment"},"# 在出现提示时输入号码并按Enter键。"),e(`

`),n("span",{class:"token comment"},"# 查看java版本"),e(`
`),n("span",{class:"token function"},"java"),e(),n("span",{class:"token parameter variable"},"-version"),e(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),G=i(`<h3 id="安装mcsm" tabindex="-1"><a class="header-anchor" href="#安装mcsm" aria-hidden="true">#</a> 安装MCSM</h3><ul><li>克隆<strong>MCSManager</strong>并安装依赖</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 克隆目录</span>
<span class="token function">git</span> clone <span class="token parameter variable">-b</span> v8.7.0 https://github.com/suwings/mcsmanager.git
<span class="token comment"># cd至目录</span>
<span class="token builtin class-name">cd</span> mcsmanager/
<span class="token comment"># 安装依赖库</span>
<span class="token function">npm</span> <span class="token function">install</span>
<span class="token comment"># 启动面板</span>
<span class="token function">sudo</span> <span class="token function">npm</span> start     <span class="token comment"># 如果已是root可不用输sudo</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3),q=n("div",{class:"custom-container warning"},[n("svg",{xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},[n("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[n("circle",{cx:"12",cy:"12",r:"9"}),n("path",{d:"M12 8v4"}),n("path",{d:"M12 16h.01"})])]),n("p",{class:"custom-container-title"},"注！启动面板注意事项"),n("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[n("pre",{class:"language-bash"},[n("code",null,[n("span",{class:"token comment"},"# 每次重启或关闭后需要重新CD到项目目录才能继续执行指令"),e(`
`),n("span",{class:"token builtin class-name"},"cd"),e(` mcsmanager/
`),n("span",{class:"token comment"},"# 启动面板"),e(`
`),n("span",{class:"token function"},"sudo"),e(),n("span",{class:"token function"},"npm"),e(" start     "),n("span",{class:"token comment"},"# 如果已是root可不用输sudo"),e(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])]),n("p",null,"我以为这是常识，是我错了(我被小白所折服，哎)")],-1),N=i(`<h2 id="保持后台运行" tabindex="-1"><a class="header-anchor" href="#保持后台运行" aria-hidden="true">#</a> 保持后台运行</h2><p>先<code>Ctrl+C</code>关闭面板，我们使用<code>screen</code>软件来让面板保持后台运行。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>yum <span class="token function">install</span> <span class="token function">screen</span> <span class="token comment"># (Centos)</span>
<span class="token function">apt</span> <span class="token function">install</span> <span class="token function">screen</span> <span class="token comment"># (Ubuntu)</span>
<span class="token comment"># 创建一个名为 mcsm 的窗口</span>
<span class="token function">screen</span> <span class="token parameter variable">-S</span> mcsm
<span class="token comment"># 在此新终端窗口内启动面板</span>
<span class="token function">sudo</span> <span class="token function">npm</span> start <span class="token comment">#或 sudo node app.js</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>直接断开终端连接即可，面板将保持后台运行。</p><p><b>若要重新控制，请输入命令即可：</b></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">screen</span> <span class="token parameter variable">-r</span> mcsm
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="端口开放" tabindex="-1"><a class="header-anchor" href="#端口开放" aria-hidden="true">#</a> 端口开放</h2><p>面板需要 23333（主功能） 端口与 20010 - 20200（FTP功能）端口区间。</p><p>如果你使用阿里云，腾讯云或者服务商，<b>请进入控制台到防火墙安全组策略，放行以上端口。</b></p><p>如果依然无法访问，请关闭系统自带防火墙：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 关闭防火墙，依次执行</span>
systemctl stop firewalld.service
systemctl disable firewalld.service
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="修改站点配置文件" tabindex="-1"><a class="header-anchor" href="#修改站点配置文件" aria-hidden="true">#</a> 修改站点配置文件</h2><p>在根目录的<code>./property.js</code>自带汉化，用户可自行修改</p><h2 id="默认账户" tabindex="-1"><a class="header-anchor" href="#默认账户" aria-hidden="true">#</a> 默认账户</h2><p>现在，访问 http://你的ip:23333/ 即可进入面板。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code># 开头带“#”为最高管理员权限（注意，管理员与管理员之间账号可互删）不带“#”为用户账户
默认账号：#master
默认密码: 123456
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>请及时修改密码。</p><h2 id="ftp连接" tabindex="-1"><a class="header-anchor" href="#ftp连接" aria-hidden="true">#</a> FTP连接</h2><h3 id="连接主机时" tabindex="-1"><a class="header-anchor" href="#连接主机时" aria-hidden="true">#</a> 连接主机时</h3><p><img src="`+h+'" alt="填写信息"></p><h3 id="连接面板的ftp时" tabindex="-1"><a class="header-anchor" href="#连接面板的ftp时" aria-hidden="true">#</a> 连接面板的FTP时</h3><p><img src="'+v+'" alt="面板连接信息页面"></p><p><img src="'+b+'" alt="FTP上添加信息"></p><h2 id="服务端" tabindex="-1"><a class="header-anchor" href="#服务端" aria-hidden="true">#</a> 服务端</h2>',24),V={href:"https://getbukkit.org/download/spigot",target:"_blank",rel:"noopener noreferrer"},O={href:"https://papermc.io/downloads",target:"_blank",rel:"noopener noreferrer"},R={href:"https://files.minecraftforge.net",target:"_blank",rel:"noopener noreferrer"},X=n("h2",{id:"服务器插件-mod",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#服务器插件-mod","aria-hidden":"true"},"#"),e(" 服务器插件/MOD")],-1),z={href:"https://dev.bukkit.org",target:"_blank",rel:"noopener noreferrer"},J={href:"https://www.spigotmc.org",target:"_blank",rel:"noopener noreferrer"},Z={href:"https://www.curseforge.com/minecraft/modpacks",target:"_blank",rel:"noopener noreferrer"},H=i(`<h2 id="计划任务项目" tabindex="-1"><a class="header-anchor" href="#计划任务项目" aria-hidden="true">#</a> 计划任务项目</h2><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>列如设置在每日凌晨3点执行一次：
* * 3 * * *

如果是想每隔3个小时执行一次：
* * */3 * * *

如果设置3月20号凌晨1点10分执行，并将执行次数设置为1。
* 10 1 20 3 *

具体使用方法如下：

* * * * * *
┬ ┬ ┬ ┬ ┬ ┬
│ │ │ │ │ │
│ │ │ │ │ └ 星期几（0-7）（0或7是星期日）
│ │ │ │ └───── 月（1-12）
│ │ │ └────────── 每月的某日（1-31）
│ │ └─────────────── 小时（0-23）
│ └──────────────────── 分钟（0-59）
└───────────────────────── 秒（0-59，可选）
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="docker-启动-minecraft-服务端" tabindex="-1"><a class="header-anchor" href="#docker-启动-minecraft-服务端" aria-hidden="true">#</a> Docker 启动 Minecraft 服务端</h2>`,3),A=i(`<h3 id="关闭selinux" tabindex="-1"><a class="header-anchor" href="#关闭selinux" aria-hidden="true">#</a> 关闭SElinux</h3><ul><li>临时关闭SElinux</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>setenforce <span class="token number">0</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,3),K=n("li",null,[e("SElinux系统默认开启，如果不关闭会导致"),n("code",null,"Docker"),e("无法访问项目目录")],-1),Q=i(`<h3 id="创建docker" tabindex="-1"><a class="header-anchor" href="#创建docker" aria-hidden="true">#</a> 创建Docker</h3><ol><li>使用<code>#master</code>账号登录</li><li>进入 <code>服务端管理</code></li><li>选择中上方的 <code>创建虚拟镜像</code> 中创建 Docker 镜像。</li><li>默认情况下，无需修改。点击 <code>创建镜像</code></li><li>最后。等待，速度与你网络有关，<code>任务结果列表</code> 显示成功则成功。</li></ol><h3 id="创建服务端" tabindex="-1"><a class="header-anchor" href="#创建服务端" aria-hidden="true">#</a> 创建服务端</h3><p>创建服务端十分简单，点击“引导创建服务端”即可。</p><p>通过里面的指引，创建你的 MC 服务器，稍后可以通过文件在线管理上传你的核心文件。</p><h3 id="此端的-docker-配置" tabindex="-1"><a class="header-anchor" href="#此端的-docker-配置" aria-hidden="true">#</a> 此端的 Docker 配置</h3><ol><li>创建好服务端之后，点击这个服务器实例的【参数】然后到【docker 配置】</li><li>勾上【此服务端启用 Docker 容器】选择框</li><li>在【端口限制】中填写“25565:25565”即可，此意是开放 25565 端口。冒号两边一般情况下保持一致即可。</li><li>保存</li></ol><h3 id="最后的操作" tabindex="-1"><a class="header-anchor" href="#最后的操作" aria-hidden="true">#</a> 最后的操作</h3><ol><li>回到服务端管理界面</li><li>点击【管理】进入【文件在线管理】，上传你的核心文件。</li><li>你已经给你的 Minecraft 服务端配置好了 Docker，现在只需要上传核心文件，然后启动就行啦！</li></ol><ul><li>启动时，Docker 容器会自动加载你的 Minecraft 服务端，保证安全性，稳定性。</li></ul><h3 id="写在最后" tabindex="-1"><a class="header-anchor" href="#写在最后" aria-hidden="true">#</a> 写在最后</h3><p>Docker 相关命令：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> <span class="token function">ps</span> <span class="token comment"># 查看当前 Docker 进程</span>
<span class="token function">docker</span> images <span class="token comment"># 查看当前 Docker 有哪些镜像（包括运行和未运行的）</span>
<span class="token function">docker</span> <span class="token function">kill</span> mcsd <span class="token comment"># 强制杀死当前 Docker ，包括你的 Minecraft 服务端（失去控制时使用）</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,13);function W(Y,$){const r=c("RouterLink"),l=c("ExternalLinkIcon"),t=c("CodeGroupItem"),d=c("CodeGroup");return u(),m("div",null,[g,p(" more "),n("p",null,[e("::: theorem 新的MCSManager 9.0 分布式，高扩展性，开箱即用，支持 Minecraft 和其他游戏的服务端管理面板 ::: right 跳转至MCSManager 9.0文章 "),s(r,{to:"/blogs/share/minecraft/mcsm9.html"},{default:a(()=>[e("师叔の小窝")]),_:1}),e(" :::")]),f,_,n("ol",null,[n("li",null,[e("远程SSH控制台软件（本教程使用 Remote Terminal 此为win10商店软件）"),n("a",x,[e("[点我下载(此软件为Xshell)]"),s(l)])]),n("li",null,[e("支持Sftp的FTP软件（本教程使用 FileZilla）"),n("a",w,[e("[点我下载]"),s(l)])]),j,C]),M,s(d,null,{default:a(()=>[s(t,{title:"Centos"},{default:a(()=>[y]),_:1}),s(t,{title:"Ubuntu"},{default:a(()=>[D]),_:1})]),_:1}),S,n("ul",null,[n("li",null,[L,s(r,{to:"/blogs/share/linux/node.html"},{default:a(()=>[U]),_:1})])]),E,s(d,null,{default:a(()=>[s(t,{title:"Centos"},{default:a(()=>[T]),_:1}),s(t,{title:"Ubuntu"},{default:a(()=>[P]),_:1})]),_:1}),B,n("ul",null,[n("li",null,[e("如果要看更精细的步骤可以看这个文章 "),s(r,{to:"/blogs/share/linux/java8.html"},{default:a(()=>[e("[如何在Linux系统中安装Java8]")]),_:1})])]),s(d,null,{default:a(()=>[s(t,{title:"Centos"},{default:a(()=>[F]),_:1}),s(t,{title:"Ubuntu"},{default:a(()=>[I]),_:1})]),_:1}),G,q,N,n("ul",null,[n("li",null,[n("a",V,[e("Spigot"),s(l)]),e(" [可以装插件]")]),n("li",null,[n("a",O,[e("paper"),s(l)]),e(" [可以装插件]")]),n("li",null,[n("a",R,[e("Forge"),s(l)]),e(" [可以装MOD]")])]),X,n("ul",null,[n("li",null,[n("a",z,[e("bukkit"),s(l)]),e(" [下载插件]")]),n("li",null,[n("a",J,[e("spigotmc"),s(l)]),e(" [下载插件]")]),n("li",null,[n("a",Z,[e("curseforge"),s(l)]),e(" [下载MOD]")])]),H,n("ul",null,[n("li",null,[e("如何安装Docker参考我这篇文章"),s(r,{to:"/blogs/share/linux/docker.html"},{default:a(()=>[e("[在Linux中安装Docker]")]),_:1})])]),A,n("ul",null,[K,n("li",null,[e("如何关闭Linux里面SElinux参考我这篇文章"),s(r,{to:"/blogs/share/linux/selinux.html"},{default:a(()=>[e("[如何关闭Linux里面的SElinux]")]),_:1})])]),Q])}const en=o(k,[["render",W],["__file","mcsm.html.vue"]]);export{en as default};
