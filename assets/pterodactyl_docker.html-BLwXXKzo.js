import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as e,b as a,o as t}from"./app-B0ruJ7sK.js";const n={};function l(r,s){return t(),e("div",null,s[0]||(s[0]=[a(`<p>翼龙面板运行在您自己的 Web 服务器上。为了运行和使用这个面板，您需要对您的服务器具有 root 访问权限。</p><p>您需要了解如何阅读文档以使用此面板。我们花了很多时间详细介绍如何安装或升级我们的软件；<br> 所以你也要花点时间去阅读而不是复制粘贴，然后在事情不起作用时候而抱怨。<br> 此面板不作为运行服务器的拖放服务存在。<br> 这是一个高度复杂的系统，需要多个依赖项，并且使用搭建他的网站管理人员需要付出一些时间学习如何使用它。<strong>如果您希望能够在不了解基本 linux 系统管理的情况下安装它，您现在应该停下来然后出门左拐。</strong></p><h2 id="选择服务器操作系统" tabindex="-1"><a class="header-anchor" href="#选择服务器操作系统"><span>选择服务器操作系统</span></a></h2><p>翼龙可在多种操作系统上运行，因此请选择最适合您使用的操作系统。</p><div class="hint-container warning"><p class="hint-container-title">注意</p><p>Pterodactyl 不支持大多数 OpenVZ 系统，因为它与 Docker 不兼容。如果你计划在基于 OpenVZ 的系统上运行这个软件，你很可能不会成功。<br> 不过本页的教程并不会有太多的限制，只要阁下前端服务器能装 <code>Docker</code> 和 <code>Docker Compose</code>，就可以采用本页教程来搭建翼龙面板前端了。一般服务器均能满足前端的搭建要求。<br> 只要能装 <strong>Docker Compose</strong> 并运行，就没有系统的限制。</p></div><h2 id="安装-docker" tabindex="-1"><a class="header-anchor" href="#安装-docker"><span>安装 Docker</span></a></h2><p>如需快速安装 Docker 社区版，您可以执行以下命令：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">curl</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -sSL</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> https://get.docker.com/</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">CHANNEL</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">stable</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> bash</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 如果速度过慢可以尝试阿里云源</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">curl</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -sSL</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> https://get.docker.com/</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">CHANNEL</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">stable</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> bash</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -s</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> docker</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --mirror</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Aliyun</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果您希望手动安装，请参考官方 Docker 文档了解如何在您的服务器上安装 Docker 社区版。下面列出了一些常用系统支持的快速链接。</p><ul><li><a href="https://docs.docker.com/install/linux/docker-ce/ubuntu/#install-docker-ce" target="_blank" rel="noopener noreferrer">Ubuntu</a></li><li><a href="https://docs.docker.com/install/linux/docker-ce/centos/#install-docker-ce" target="_blank" rel="noopener noreferrer">CentOS</a></li><li><a href="https://docs.docker.com/install/linux/docker-ce/debian/#install-docker-ce" target="_blank" rel="noopener noreferrer">Debian</a></li></ul><div class="hint-container warning"><p class="hint-container-title">检查你的内核</p><p>请注意，某些主机安装了不支持 docker 重要功能的修改内核。 请通过运行 <code>uname -r</code> 检查您的内核。 如果您的内核以 <code>-xxxx-grs-ipv6-64</code> 或 <code>-xxxx-mod-std-ipv6-64</code> 结尾，您可能使用的是不受支持的内核。 查看我们的 <a href="https://pterodactyl.top/daemon/0.6/kernel_modifications.html" target="_blank" rel="noopener noreferrer">内核修改</a> 指南了解详细信息。</p></div><h3 id="在启动时启动-docker" tabindex="-1"><a class="header-anchor" href="#在启动时启动-docker"><span>在启动时启动 Docker</span></a></h3><p>如果您使用的是带有 systemd 的操作系统（Ubuntu 16+、Debian 8+、CentOS 7+），请运行以下命令以在您启动机器时启动 Docker。</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">systemctl</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> enable</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --now</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> docker</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="安装-docker-compose" tabindex="-1"><a class="header-anchor" href="#安装-docker-compose"><span>安装 Docker Compose</span></a></h2><p>虽然 <code>yum</code> <code>apt</code> 有快速安装的软件包，但版本一般不是最新的。最新发行的版本地址：<a href="https://github.com/docker/compose/releases%E3%80%82" target="_blank" rel="noopener noreferrer">https://github.com/docker/compose/releases。</a></p><p>运行以下命令来下载 Docker Compose 的当前稳定版本：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">curl</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -L</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;https://github.com/docker/compose/releases/latest/download/docker-compose-$(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">uname</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -s</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">)-$(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">uname</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -m</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">)&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -o</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /usr/local/bin/docker-compose</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 若阁下在上条指令上无法正常拉取压缩包或者拉取缓慢 可使用 gh-proxy 提供的CF反向代理来拉取</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">curl</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -L</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;https://ghfast.top/https://github.com/docker/compose/releases/latest/download/docker-compose-$(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">uname</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -s</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">)-$(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">uname</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -m</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">)&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -o</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /usr/local/bin/docker-compose</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 将可执行权限应用于二进制文件并创建软链</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">chmod</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> +x</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /usr/local/bin/docker-compose</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">ln</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -s</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /usr/local/bin/docker-compose</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /usr/bin/docker-compose</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="下载文件" tabindex="-1"><a class="header-anchor" href="#下载文件"><span>下载文件</span></a></h2><p>在进行此步骤之前，我们要为 <code>docker-compose.yml</code> 创建一个放置目录。<br> 此过程的第一步是创建面板所在的文件夹，然后进入新创建的文件夹中。以下是如何执行此操作的示例。</p><div class="hint-container warning"><p class="hint-container-title">注意</p><p>以下命令使用的路径仅为示例，阁下大可自己自定义路径，但是我在此提醒您，若您不用我示例使用的路径，请务必记住自己设置的程序所在的目录，并在后续各种涉及到程序运行目录的地方灵活操作！</p></div><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">mkdir</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -p</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /var/www/pterodactyl</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">cd</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /var/www/pterodactyl</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>在为面板创建好它的放置目录后，我们将使用 <code>curl</code> 命令，从 Github 拉取翼龙中国汉化完成的 <code>docker-compose.yml</code> 文件并赋予该文件的可执行权限。</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">curl</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -Lo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> docker-compose.yml</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> https://raw.githubusercontent.com/pterodactyl-china/panel/1.0-develop/docker-compose.example.yml</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 将可执行权限应用于yml文件</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">chmod</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> +x</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> docker-compose.yml</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="环境变量" tabindex="-1"><a class="header-anchor" href="#环境变量"><span>环境变量</span></a></h3><p>当您不提供自己的 <code>.env</code> 文件时，有多个环境变量可以配置面板，有关每个可用选项的详细信息</p><p>在 <code>docker-compose.yml</code> 文件中可以设置，具体变量的详细信息可查看 在 <a href="https://github.com/pterodactyl-china/panel/blob/1.0-develop/.github/docker/README.md" target="_blank" rel="noopener noreferrer">GitHub 仓库中提供的文档</a> 或查看 <a href="https://gitee.com/vlssu/pterodactyl-panel/blob/1.0-develop/.github/docker/README.md" target="_blank" rel="noopener noreferrer">Gitee 镜像仓库中提供的文档(可能不是最新的)</a></p><p>如果你想变更数据的存储目录，可以自行查看文件，如果你并不会或不懂，请不要更改</p><h2 id="部署运行" tabindex="-1"><a class="header-anchor" href="#部署运行"><span>部署运行</span></a></h2><p>在设置完环境变量，我们就可以通过 Docker Compose 使用 <code>docker-compose.yml</code> 文件来启动面板了</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 在后台执行该服务</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># -d 参数是让该程序在后台执行，如果你需要排查错误等情况你可以去除该参数</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker-compose</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> up</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -d</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="添加首位用户" tabindex="-1"><a class="header-anchor" href="#添加首位用户"><span>添加首位用户</span></a></h3><p>您需要为面板创建一个管理用户，以便您可以登录面板。 为此，请运行以下命令。 并保证账户密码满足以下要求：8 个字符，大小写混合，至少一个数字。(此指令需在上文中含有 <code>docker-compose.yml</code> 的同级目录中执行）</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker-compose</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> exec</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> panel</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> php</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> artisan</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> p:user:make</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>现在，你已经全部设置完毕，直接输入你的网站地址，即可访问翼龙面板</p>`,35)]))}const o=i(n,[["render",l]]),d=JSON.parse('{"path":"/views/deploy-website/pterodactyl_docker.html","title":"翼龙面板汉化版docker一键部署","lang":"zh-CN","frontmatter":{"title":"翼龙面板汉化版docker一键部署","date":"2023-10-03T00:00:00.000Z","cover":"https://api.vlssu.com/img/?231003","tags":["Pterodactyl","翼龙","汉化"],"categories":["教程"],"star":true,"description":"翼龙面板运行在您自己的 Web 服务器上。为了运行和使用这个面板，您需要对您的服务器具有 root 访问权限。 您需要了解如何阅读文档以使用此面板。我们花了很多时间详细介绍如何安装或升级我们的软件； 所以你也要花点时间去阅读而不是复制粘贴，然后在事情不起作用时候而抱怨。 此面板不作为运行服务器的拖放服务存在。 这是一个高度复杂的系统，需要多个依赖项，并...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"翼龙面板汉化版docker一键部署\\",\\"image\\":[\\"https://api.vlssu.com/img/?231003\\"],\\"datePublished\\":\\"2023-10-03T00:00:00.000Z\\",\\"dateModified\\":\\"2025-05-11T11:04:43.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"飒爽师叔\\",\\"url\\":\\"https://blog.vlssu.com\\",\\"email\\":\\"vlssu@vlssu.com\\"}]}"],["meta",{"property":"og:url","content":"https://blog.vlssu.com/views/deploy-website/pterodactyl_docker.html"}],["meta",{"property":"og:site_name","content":"师叔の小窝"}],["meta",{"property":"og:title","content":"翼龙面板汉化版docker一键部署"}],["meta",{"property":"og:description","content":"翼龙面板运行在您自己的 Web 服务器上。为了运行和使用这个面板，您需要对您的服务器具有 root 访问权限。 您需要了解如何阅读文档以使用此面板。我们花了很多时间详细介绍如何安装或升级我们的软件； 所以你也要花点时间去阅读而不是复制粘贴，然后在事情不起作用时候而抱怨。 此面板不作为运行服务器的拖放服务存在。 这是一个高度复杂的系统，需要多个依赖项，并..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://api.vlssu.com/img/?231003"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-05-11T11:04:43.000Z"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:src","content":"https://api.vlssu.com/img/?231003"}],["meta",{"name":"twitter:image:alt","content":"翼龙面板汉化版docker一键部署"}],["meta",{"property":"article:tag","content":"汉化"}],["meta",{"property":"article:tag","content":"翼龙"}],["meta",{"property":"article:tag","content":"Pterodactyl"}],["meta",{"property":"article:published_time","content":"2023-10-03T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-05-11T11:04:43.000Z"}]]},"git":{"createdTime":1696266247000,"updatedTime":1746961483000,"contributors":[{"name":"vlssu","username":"vlssu","email":"43847794+vlssu@users.noreply.github.com","commits":6,"url":"https://github.com/vlssu"}]},"readingTime":{"minutes":4.74,"words":1423},"filePathRelative":"views/deploy-website/pterodactyl_docker.md","excerpt":"<p>翼龙面板运行在您自己的 Web 服务器上。为了运行和使用这个面板，您需要对您的服务器具有 root 访问权限。</p>\\n<p>您需要了解如何阅读文档以使用此面板。我们花了很多时间详细介绍如何安装或升级我们的软件；<br>\\n所以你也要花点时间去阅读而不是复制粘贴，然后在事情不起作用时候而抱怨。<br>\\n此面板不作为运行服务器的拖放服务存在。<br>\\n这是一个高度复杂的系统，需要多个依赖项，并且使用搭建他的网站管理人员需要付出一些时间学习如何使用它。<strong>如果您希望能够在不了解基本 linux 系统管理的情况下安装它，您现在应该停下来然后出门左拐。</strong></p>\\n<h2>选择服务器操作系统</h2>","autoDesc":true}');export{o as comp,d as data};
